// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "convolve_kernel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic convolve_kernel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic convolve_kernel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> convolve_kernel::ap_ST_fsm_state1 = "1";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state2 = "10";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state3 = "100";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state4 = "1000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state5 = "10000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state6 = "100000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> convolve_kernel::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> convolve_kernel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> convolve_kernel::ap_const_lv32_1 = "1";
const sc_lv<32> convolve_kernel::ap_const_lv32_2 = "10";
const sc_lv<32> convolve_kernel::ap_const_lv32_3 = "11";
const sc_lv<32> convolve_kernel::ap_const_lv32_4 = "100";
const sc_lv<32> convolve_kernel::ap_const_lv32_5 = "101";
const sc_lv<1> convolve_kernel::ap_const_lv1_0 = "0";
const sc_lv<32> convolve_kernel::ap_const_lv32_6 = "110";
const sc_lv<32> convolve_kernel::ap_const_lv32_7 = "111";
const sc_lv<32> convolve_kernel::ap_const_lv32_B = "1011";
const sc_lv<32> convolve_kernel::ap_const_lv32_10 = "10000";
const sc_lv<2> convolve_kernel::ap_const_lv2_0 = "00";
const sc_lv<1> convolve_kernel::ap_const_lv1_1 = "1";
const sc_lv<3> convolve_kernel::ap_const_lv3_0 = "000";
const sc_lv<32> convolve_kernel::ap_const_lv32_11 = "10001";
const sc_lv<32> convolve_kernel::ap_const_lv32_A = "1010";
const sc_lv<4> convolve_kernel::ap_const_lv4_0 = "0000";
const sc_lv<4> convolve_kernel::ap_const_lv4_F = "1111";
const sc_lv<32> convolve_kernel::ap_const_lv32_C = "1100";
const sc_lv<32> convolve_kernel::ap_const_lv32_8 = "1000";
const sc_lv<2> convolve_kernel::ap_const_lv2_3 = "11";
const sc_lv<2> convolve_kernel::ap_const_lv2_1 = "1";
const sc_lv<6> convolve_kernel::ap_const_lv6_2 = "10";
const sc_lv<3> convolve_kernel::ap_const_lv3_5 = "101";
const sc_lv<3> convolve_kernel::ap_const_lv3_1 = "1";
const bool convolve_kernel::ap_const_boolean_1 = true;

convolve_kernel::convolve_kernel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    convolve_kernel_fbkb_U1 = new convolve_kernel_fbkb<1,5,32,32,32>("convolve_kernel_fbkb_U1");
    convolve_kernel_fbkb_U1->clk(ap_clk);
    convolve_kernel_fbkb_U1->reset(ap_rst);
    convolve_kernel_fbkb_U1->din0(bufo_load_reg_578);
    convolve_kernel_fbkb_U1->din1(tmp_4_reg_573);
    convolve_kernel_fbkb_U1->ce(ap_var_for_const0);
    convolve_kernel_fbkb_U1->dout(grp_fu_153_p2);
    convolve_kernel_fcud_U2 = new convolve_kernel_fcud<1,4,32,32,32>("convolve_kernel_fcud_U2");
    convolve_kernel_fcud_U2->clk(ap_clk);
    convolve_kernel_fcud_U2->reset(ap_rst);
    convolve_kernel_fcud_U2->din0(bufw_load_reg_563);
    convolve_kernel_fcud_U2->din1(bufi_load_reg_568);
    convolve_kernel_fcud_U2->ce(ap_var_for_const0);
    convolve_kernel_fcud_U2->dout(grp_fu_157_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_169_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_169_p2 );

    SC_METHOD(thread_bufi_Addr_A);
    sensitive << ( bufi_Addr_A_orig );

    SC_METHOD(thread_bufi_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_27_cast_fu_450_p1 );

    SC_METHOD(thread_bufi_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_bufi_Din_A);

    SC_METHOD(thread_bufi_EN_A);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_bufi_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_bufi_WEN_A);

    SC_METHOD(thread_bufo_Addr_A);
    sensitive << ( bufo_Addr_A_orig );

    SC_METHOD(thread_bufo_Addr_A_orig);
    sensitive << ( bufo_addr_reg_496 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_bufo_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_bufo_Din_A);
    sensitive << ( tmp_6_reg_583 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_bufo_EN_A);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_bufo_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_bufo_WEN_A);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_bufw_Addr_A);
    sensitive << ( bufw_Addr_A_orig );

    SC_METHOD(thread_bufw_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_26_cast_fu_419_p1 );

    SC_METHOD(thread_bufw_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_bufw_Din_A);

    SC_METHOD(thread_bufw_EN_A);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_bufw_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_bufw_WEN_A);

    SC_METHOD(thread_col_b_1_fu_195_p2);
    sensitive << ( col_b_reg_98 );

    SC_METHOD(thread_col_b_cast5_cast_fu_181_p1);
    sensitive << ( col_b_reg_98 );

    SC_METHOD(thread_col_b_cast_fu_185_p1);
    sensitive << ( col_b_reg_98 );

    SC_METHOD(thread_i_1_fu_368_p2);
    sensitive << ( i_reg_131 );

    SC_METHOD(thread_i_cast2_fu_331_p1);
    sensitive << ( i_reg_131 );

    SC_METHOD(thread_j_1_fu_430_p2);
    sensitive << ( j_reg_142 );

    SC_METHOD(thread_j_cast1_cast_fu_410_p1);
    sensitive << ( j_reg_142 );

    SC_METHOD(thread_p_shl1_cast_fu_213_p1);
    sensitive << ( tmp_8_fu_205_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_305_p1);
    sensitive << ( tmp_18_fu_297_p3 );

    SC_METHOD(thread_p_shl3_fu_287_p1);
    sensitive << ( tmp_16_fu_279_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_348_p3);
    sensitive << ( tmp_24_fu_344_p1 );

    SC_METHOD(thread_p_shl5_cast_fu_396_p3);
    sensitive << ( tmp_28_fu_392_p1 );

    SC_METHOD(thread_row_b_1_fu_175_p2);
    sensitive << ( row_b_reg_87 );

    SC_METHOD(thread_row_b_cast6_cast_fu_161_p1);
    sensitive << ( row_b_reg_87 );

    SC_METHOD(thread_row_b_cast_fu_165_p1);
    sensitive << ( row_b_reg_87 );

    SC_METHOD(thread_ti_b_1_fu_325_p2);
    sensitive << ( ti_b_reg_120 );

    SC_METHOD(thread_ti_b_cast3_cast_fu_266_p1);
    sensitive << ( ti_b_reg_120 );

    SC_METHOD(thread_tmp_10_cast_fu_223_p1);
    sensitive << ( tmp_10_fu_217_p2 );

    SC_METHOD(thread_tmp_10_fu_217_p2);
    sensitive << ( p_shl1_cast_fu_213_p1 );
    sensitive << ( to_b_cast4_cast_fu_201_p1 );

    SC_METHOD(thread_tmp_11_fu_227_p2);
    sensitive << ( row_b_cast6_cast_reg_455 );
    sensitive << ( tmp_10_cast_fu_223_p1 );

    SC_METHOD(thread_tmp_12_fu_232_p2);
    sensitive << ( tmp_11_fu_227_p2 );

    SC_METHOD(thread_tmp_13_fu_238_p2);
    sensitive << ( tmp_11_fu_227_p2 );
    sensitive << ( tmp_12_fu_232_p2 );

    SC_METHOD(thread_tmp_14_cast_fu_249_p1);
    sensitive << ( tmp_14_fu_244_p2 );

    SC_METHOD(thread_tmp_14_fu_244_p2);
    sensitive << ( col_b_cast5_cast_reg_473 );
    sensitive << ( tmp_13_fu_238_p2 );

    SC_METHOD(thread_tmp_15_cast_fu_275_p1);
    sensitive << ( tmp_15_fu_270_p2 );

    SC_METHOD(thread_tmp_15_fu_270_p2);
    sensitive << ( tmp_10_cast_reg_491 );
    sensitive << ( ti_b_cast3_cast_fu_266_p1 );

    SC_METHOD(thread_tmp_16_fu_279_p3);
    sensitive << ( tmp_15_fu_270_p2 );

    SC_METHOD(thread_tmp_17_fu_291_p2);
    sensitive << ( tmp_15_cast_fu_275_p1 );
    sensitive << ( p_shl3_fu_287_p1 );

    SC_METHOD(thread_tmp_18_fu_297_p3);
    sensitive << ( ti_b_reg_120 );

    SC_METHOD(thread_tmp_19_cast_fu_315_p1);
    sensitive << ( tmp_19_fu_309_p2 );

    SC_METHOD(thread_tmp_19_fu_309_p2);
    sensitive << ( ti_b_cast3_cast_fu_266_p1 );
    sensitive << ( p_shl2_cast_fu_305_p1 );

    SC_METHOD(thread_tmp_1_fu_189_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( col_b_reg_98 );

    SC_METHOD(thread_tmp_20_fu_335_p2);
    sensitive << ( tmp_17_reg_509 );
    sensitive << ( i_cast2_fu_331_p1 );

    SC_METHOD(thread_tmp_21_fu_340_p1);
    sensitive << ( tmp_20_fu_335_p2 );

    SC_METHOD(thread_tmp_22_fu_356_p2);
    sensitive << ( tmp_21_fu_340_p1 );
    sensitive << ( p_shl4_cast_fu_348_p3 );

    SC_METHOD(thread_tmp_23_cast_fu_388_p1);
    sensitive << ( tmp_23_fu_383_p2 );

    SC_METHOD(thread_tmp_23_fu_383_p2);
    sensitive << ( tmp_19_cast_reg_514 );
    sensitive << ( tmp_9_cast_cast_fu_379_p1 );

    SC_METHOD(thread_tmp_24_fu_344_p1);
    sensitive << ( tmp_20_fu_335_p2 );

    SC_METHOD(thread_tmp_25_fu_404_p2);
    sensitive << ( p_shl5_cast_fu_396_p3 );
    sensitive << ( tmp_23_cast_fu_388_p1 );

    SC_METHOD(thread_tmp_26_cast_fu_419_p1);
    sensitive << ( tmp_26_fu_414_p2 );

    SC_METHOD(thread_tmp_26_fu_414_p2);
    sensitive << ( tmp_22_reg_527 );
    sensitive << ( j_cast1_cast_fu_410_p1 );

    SC_METHOD(thread_tmp_27_cast_fu_450_p1);
    sensitive << ( tmp_27_fu_445_p2 );

    SC_METHOD(thread_tmp_27_fu_445_p2);
    sensitive << ( tmp_25_reg_540 );
    sensitive << ( tmp_2_cast_cast_fu_441_p1 );

    SC_METHOD(thread_tmp_28_fu_392_p1);
    sensitive << ( tmp_23_fu_383_p2 );

    SC_METHOD(thread_tmp_2_cast_cast_fu_441_p1);
    sensitive << ( tmp_2_fu_436_p2 );

    SC_METHOD(thread_tmp_2_fu_436_p2);
    sensitive << ( col_b_cast_reg_478 );
    sensitive << ( j_reg_142 );

    SC_METHOD(thread_tmp_3_fu_254_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( to_b_reg_109 );

    SC_METHOD(thread_tmp_5_fu_319_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ti_b_reg_120 );

    SC_METHOD(thread_tmp_7_fu_362_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( i_reg_131 );

    SC_METHOD(thread_tmp_8_fu_205_p3);
    sensitive << ( to_b_reg_109 );

    SC_METHOD(thread_tmp_9_cast_cast_fu_379_p1);
    sensitive << ( tmp_9_fu_374_p2 );

    SC_METHOD(thread_tmp_9_fu_374_p2);
    sensitive << ( row_b_cast_reg_460 );
    sensitive << ( i_reg_131 );

    SC_METHOD(thread_tmp_fu_169_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( row_b_reg_87 );

    SC_METHOD(thread_tmp_s_fu_424_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( j_reg_142 );

    SC_METHOD(thread_to_b_1_fu_260_p2);
    sensitive << ( to_b_reg_109 );

    SC_METHOD(thread_to_b_cast4_cast_fu_201_p1);
    sensitive << ( to_b_reg_109 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_7_fu_362_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_s_fu_424_p2 );
    sensitive << ( tmp_1_fu_189_p2 );
    sensitive << ( tmp_3_fu_254_p2 );
    sensitive << ( tmp_fu_169_p2 );
    sensitive << ( tmp_5_fu_319_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "convolve_kernel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, bufw_Addr_A, "(port)bufw_Addr_A");
    sc_trace(mVcdFile, bufw_EN_A, "(port)bufw_EN_A");
    sc_trace(mVcdFile, bufw_WEN_A, "(port)bufw_WEN_A");
    sc_trace(mVcdFile, bufw_Din_A, "(port)bufw_Din_A");
    sc_trace(mVcdFile, bufw_Dout_A, "(port)bufw_Dout_A");
    sc_trace(mVcdFile, bufw_Clk_A, "(port)bufw_Clk_A");
    sc_trace(mVcdFile, bufw_Rst_A, "(port)bufw_Rst_A");
    sc_trace(mVcdFile, bufi_Addr_A, "(port)bufi_Addr_A");
    sc_trace(mVcdFile, bufi_EN_A, "(port)bufi_EN_A");
    sc_trace(mVcdFile, bufi_WEN_A, "(port)bufi_WEN_A");
    sc_trace(mVcdFile, bufi_Din_A, "(port)bufi_Din_A");
    sc_trace(mVcdFile, bufi_Dout_A, "(port)bufi_Dout_A");
    sc_trace(mVcdFile, bufi_Clk_A, "(port)bufi_Clk_A");
    sc_trace(mVcdFile, bufi_Rst_A, "(port)bufi_Rst_A");
    sc_trace(mVcdFile, bufo_Addr_A, "(port)bufo_Addr_A");
    sc_trace(mVcdFile, bufo_EN_A, "(port)bufo_EN_A");
    sc_trace(mVcdFile, bufo_WEN_A, "(port)bufo_WEN_A");
    sc_trace(mVcdFile, bufo_Din_A, "(port)bufo_Din_A");
    sc_trace(mVcdFile, bufo_Dout_A, "(port)bufo_Dout_A");
    sc_trace(mVcdFile, bufo_Clk_A, "(port)bufo_Clk_A");
    sc_trace(mVcdFile, bufo_Rst_A, "(port)bufo_Rst_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, row_b_cast6_cast_fu_161_p1, "row_b_cast6_cast_fu_161_p1");
    sc_trace(mVcdFile, row_b_cast6_cast_reg_455, "row_b_cast6_cast_reg_455");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, row_b_cast_fu_165_p1, "row_b_cast_fu_165_p1");
    sc_trace(mVcdFile, row_b_cast_reg_460, "row_b_cast_reg_460");
    sc_trace(mVcdFile, row_b_1_fu_175_p2, "row_b_1_fu_175_p2");
    sc_trace(mVcdFile, row_b_1_reg_468, "row_b_1_reg_468");
    sc_trace(mVcdFile, col_b_cast5_cast_fu_181_p1, "col_b_cast5_cast_fu_181_p1");
    sc_trace(mVcdFile, col_b_cast5_cast_reg_473, "col_b_cast5_cast_reg_473");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, col_b_cast_fu_185_p1, "col_b_cast_fu_185_p1");
    sc_trace(mVcdFile, col_b_cast_reg_478, "col_b_cast_reg_478");
    sc_trace(mVcdFile, col_b_1_fu_195_p2, "col_b_1_fu_195_p2");
    sc_trace(mVcdFile, col_b_1_reg_486, "col_b_1_reg_486");
    sc_trace(mVcdFile, tmp_10_cast_fu_223_p1, "tmp_10_cast_fu_223_p1");
    sc_trace(mVcdFile, tmp_10_cast_reg_491, "tmp_10_cast_reg_491");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, bufo_addr_reg_496, "bufo_addr_reg_496");
    sc_trace(mVcdFile, to_b_1_fu_260_p2, "to_b_1_fu_260_p2");
    sc_trace(mVcdFile, to_b_1_reg_504, "to_b_1_reg_504");
    sc_trace(mVcdFile, tmp_17_fu_291_p2, "tmp_17_fu_291_p2");
    sc_trace(mVcdFile, tmp_17_reg_509, "tmp_17_reg_509");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_19_cast_fu_315_p1, "tmp_19_cast_fu_315_p1");
    sc_trace(mVcdFile, tmp_19_cast_reg_514, "tmp_19_cast_reg_514");
    sc_trace(mVcdFile, ti_b_1_fu_325_p2, "ti_b_1_fu_325_p2");
    sc_trace(mVcdFile, ti_b_1_reg_522, "ti_b_1_reg_522");
    sc_trace(mVcdFile, tmp_22_fu_356_p2, "tmp_22_fu_356_p2");
    sc_trace(mVcdFile, tmp_22_reg_527, "tmp_22_reg_527");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_1_fu_368_p2, "i_1_fu_368_p2");
    sc_trace(mVcdFile, i_1_reg_535, "i_1_reg_535");
    sc_trace(mVcdFile, tmp_25_fu_404_p2, "tmp_25_fu_404_p2");
    sc_trace(mVcdFile, tmp_25_reg_540, "tmp_25_reg_540");
    sc_trace(mVcdFile, tmp_7_fu_362_p2, "tmp_7_fu_362_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, j_1_fu_430_p2, "j_1_fu_430_p2");
    sc_trace(mVcdFile, j_1_reg_553, "j_1_reg_553");
    sc_trace(mVcdFile, tmp_s_fu_424_p2, "tmp_s_fu_424_p2");
    sc_trace(mVcdFile, bufw_load_reg_563, "bufw_load_reg_563");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, bufi_load_reg_568, "bufi_load_reg_568");
    sc_trace(mVcdFile, grp_fu_157_p2, "grp_fu_157_p2");
    sc_trace(mVcdFile, tmp_4_reg_573, "tmp_4_reg_573");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, bufo_load_reg_578, "bufo_load_reg_578");
    sc_trace(mVcdFile, grp_fu_153_p2, "grp_fu_153_p2");
    sc_trace(mVcdFile, tmp_6_reg_583, "tmp_6_reg_583");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, row_b_reg_87, "row_b_reg_87");
    sc_trace(mVcdFile, tmp_1_fu_189_p2, "tmp_1_fu_189_p2");
    sc_trace(mVcdFile, col_b_reg_98, "col_b_reg_98");
    sc_trace(mVcdFile, tmp_3_fu_254_p2, "tmp_3_fu_254_p2");
    sc_trace(mVcdFile, tmp_fu_169_p2, "tmp_fu_169_p2");
    sc_trace(mVcdFile, to_b_reg_109, "to_b_reg_109");
    sc_trace(mVcdFile, tmp_5_fu_319_p2, "tmp_5_fu_319_p2");
    sc_trace(mVcdFile, ti_b_reg_120, "ti_b_reg_120");
    sc_trace(mVcdFile, i_reg_131, "i_reg_131");
    sc_trace(mVcdFile, j_reg_142, "j_reg_142");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_14_cast_fu_249_p1, "tmp_14_cast_fu_249_p1");
    sc_trace(mVcdFile, tmp_26_cast_fu_419_p1, "tmp_26_cast_fu_419_p1");
    sc_trace(mVcdFile, tmp_27_cast_fu_450_p1, "tmp_27_cast_fu_450_p1");
    sc_trace(mVcdFile, bufw_Addr_A_orig, "bufw_Addr_A_orig");
    sc_trace(mVcdFile, bufi_Addr_A_orig, "bufi_Addr_A_orig");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, bufo_Addr_A_orig, "bufo_Addr_A_orig");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_8_fu_205_p3, "tmp_8_fu_205_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_213_p1, "p_shl1_cast_fu_213_p1");
    sc_trace(mVcdFile, to_b_cast4_cast_fu_201_p1, "to_b_cast4_cast_fu_201_p1");
    sc_trace(mVcdFile, tmp_10_fu_217_p2, "tmp_10_fu_217_p2");
    sc_trace(mVcdFile, tmp_11_fu_227_p2, "tmp_11_fu_227_p2");
    sc_trace(mVcdFile, tmp_12_fu_232_p2, "tmp_12_fu_232_p2");
    sc_trace(mVcdFile, tmp_13_fu_238_p2, "tmp_13_fu_238_p2");
    sc_trace(mVcdFile, tmp_14_fu_244_p2, "tmp_14_fu_244_p2");
    sc_trace(mVcdFile, ti_b_cast3_cast_fu_266_p1, "ti_b_cast3_cast_fu_266_p1");
    sc_trace(mVcdFile, tmp_15_fu_270_p2, "tmp_15_fu_270_p2");
    sc_trace(mVcdFile, tmp_16_fu_279_p3, "tmp_16_fu_279_p3");
    sc_trace(mVcdFile, tmp_15_cast_fu_275_p1, "tmp_15_cast_fu_275_p1");
    sc_trace(mVcdFile, p_shl3_fu_287_p1, "p_shl3_fu_287_p1");
    sc_trace(mVcdFile, tmp_18_fu_297_p3, "tmp_18_fu_297_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_305_p1, "p_shl2_cast_fu_305_p1");
    sc_trace(mVcdFile, tmp_19_fu_309_p2, "tmp_19_fu_309_p2");
    sc_trace(mVcdFile, i_cast2_fu_331_p1, "i_cast2_fu_331_p1");
    sc_trace(mVcdFile, tmp_20_fu_335_p2, "tmp_20_fu_335_p2");
    sc_trace(mVcdFile, tmp_24_fu_344_p1, "tmp_24_fu_344_p1");
    sc_trace(mVcdFile, tmp_21_fu_340_p1, "tmp_21_fu_340_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_348_p3, "p_shl4_cast_fu_348_p3");
    sc_trace(mVcdFile, tmp_9_fu_374_p2, "tmp_9_fu_374_p2");
    sc_trace(mVcdFile, tmp_9_cast_cast_fu_379_p1, "tmp_9_cast_cast_fu_379_p1");
    sc_trace(mVcdFile, tmp_23_fu_383_p2, "tmp_23_fu_383_p2");
    sc_trace(mVcdFile, tmp_28_fu_392_p1, "tmp_28_fu_392_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_396_p3, "p_shl5_cast_fu_396_p3");
    sc_trace(mVcdFile, tmp_23_cast_fu_388_p1, "tmp_23_cast_fu_388_p1");
    sc_trace(mVcdFile, j_cast1_cast_fu_410_p1, "j_cast1_cast_fu_410_p1");
    sc_trace(mVcdFile, tmp_26_fu_414_p2, "tmp_26_fu_414_p2");
    sc_trace(mVcdFile, tmp_2_fu_436_p2, "tmp_2_fu_436_p2");
    sc_trace(mVcdFile, tmp_2_cast_cast_fu_441_p1, "tmp_2_cast_cast_fu_441_p1");
    sc_trace(mVcdFile, tmp_27_fu_445_p2, "tmp_27_fu_445_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("convolve_kernel.hdltvin.dat");
    mHdltvoutHandle.open("convolve_kernel.hdltvout.dat");
}

convolve_kernel::~convolve_kernel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete convolve_kernel_fbkb_U1;
    delete convolve_kernel_fcud_U2;
}

void convolve_kernel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void convolve_kernel::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_169_p2.read()))) {
        col_b_reg_98 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_254_p2.read()))) {
        col_b_reg_98 = col_b_1_reg_486.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_319_p2.read()))) {
        i_reg_131 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_424_p2.read(), ap_const_lv1_1))) {
        i_reg_131 = i_1_reg_535.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(tmp_7_fu_362_p2.read(), ap_const_lv1_0))) {
        j_reg_142 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        j_reg_142 = j_1_reg_553.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_fu_189_p2.read(), ap_const_lv1_1))) {
        row_b_reg_87 = row_b_1_reg_468.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        row_b_reg_87 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_254_p2.read()))) {
        ti_b_reg_120 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(tmp_7_fu_362_p2.read(), ap_const_lv1_1))) {
        ti_b_reg_120 = ti_b_1_reg_522.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_189_p2.read()))) {
        to_b_reg_109 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_319_p2.read()))) {
        to_b_reg_109 = to_b_1_reg_504.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        bufi_load_reg_568 = bufi_Dout_A.read();
        bufw_load_reg_563 = bufw_Dout_A.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        bufo_addr_reg_496 =  (sc_lv<5>) (tmp_14_cast_fu_249_p1.read());
        tmp_10_cast_reg_491 = tmp_10_cast_fu_223_p1.read();
        to_b_1_reg_504 = to_b_1_fu_260_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        bufo_load_reg_578 = bufo_Dout_A.read();
        tmp_4_reg_573 = grp_fu_157_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        col_b_1_reg_486 = col_b_1_fu_195_p2.read();
        col_b_cast5_cast_reg_473 = col_b_cast5_cast_fu_181_p1.read();
        col_b_cast_reg_478 = col_b_cast_fu_185_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_1_reg_535 = i_1_fu_368_p2.read();
        tmp_22_reg_527 = tmp_22_fu_356_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_1_reg_553 = j_1_fu_430_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        row_b_1_reg_468 = row_b_1_fu_175_p2.read();
        row_b_cast6_cast_reg_455 = row_b_cast6_cast_fu_161_p1.read();
        row_b_cast_reg_460 = row_b_cast_fu_165_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ti_b_1_reg_522 = ti_b_1_fu_325_p2.read();
        tmp_17_reg_509 = tmp_17_fu_291_p2.read();
        tmp_19_cast_reg_514 = tmp_19_cast_fu_315_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_7_fu_362_p2.read(), ap_const_lv1_0))) {
        tmp_25_reg_540 = tmp_25_fu_404_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_6_reg_583 = grp_fu_153_p2.read();
    }
}

void convolve_kernel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void convolve_kernel::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void convolve_kernel::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void convolve_kernel::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void convolve_kernel::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void convolve_kernel::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void convolve_kernel::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void convolve_kernel::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void convolve_kernel::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void convolve_kernel::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void convolve_kernel::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void convolve_kernel::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void convolve_kernel::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void convolve_kernel::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void convolve_kernel::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_169_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void convolve_kernel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void convolve_kernel::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_169_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void convolve_kernel::thread_bufi_Addr_A() {
    bufi_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): bufi_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void convolve_kernel::thread_bufi_Addr_A_orig() {
    bufi_Addr_A_orig =  (sc_lv<32>) (tmp_27_cast_fu_450_p1.read());
}

void convolve_kernel::thread_bufi_Clk_A() {
    bufi_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void convolve_kernel::thread_bufi_Din_A() {
    bufi_Din_A = ap_const_lv32_0;
}

void convolve_kernel::thread_bufi_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        bufi_EN_A = ap_const_logic_1;
    } else {
        bufi_EN_A = ap_const_logic_0;
    }
}

void convolve_kernel::thread_bufi_Rst_A() {
    bufi_Rst_A = ap_rst.read();
}

void convolve_kernel::thread_bufi_WEN_A() {
    bufi_WEN_A = ap_const_lv4_0;
}

void convolve_kernel::thread_bufo_Addr_A() {
    bufo_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): bufo_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void convolve_kernel::thread_bufo_Addr_A_orig() {
    bufo_Addr_A_orig =  (sc_lv<32>) (bufo_addr_reg_496.read());
}

void convolve_kernel::thread_bufo_Clk_A() {
    bufo_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void convolve_kernel::thread_bufo_Din_A() {
    bufo_Din_A = tmp_6_reg_583.read();
}

void convolve_kernel::thread_bufo_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        bufo_EN_A = ap_const_logic_1;
    } else {
        bufo_EN_A = ap_const_logic_0;
    }
}

void convolve_kernel::thread_bufo_Rst_A() {
    bufo_Rst_A = ap_rst.read();
}

void convolve_kernel::thread_bufo_WEN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        bufo_WEN_A = ap_const_lv4_F;
    } else {
        bufo_WEN_A = ap_const_lv4_0;
    }
}

void convolve_kernel::thread_bufw_Addr_A() {
    bufw_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): bufw_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void convolve_kernel::thread_bufw_Addr_A_orig() {
    bufw_Addr_A_orig =  (sc_lv<32>) (tmp_26_cast_fu_419_p1.read());
}

void convolve_kernel::thread_bufw_Clk_A() {
    bufw_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void convolve_kernel::thread_bufw_Din_A() {
    bufw_Din_A = ap_const_lv32_0;
}

void convolve_kernel::thread_bufw_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        bufw_EN_A = ap_const_logic_1;
    } else {
        bufw_EN_A = ap_const_logic_0;
    }
}

void convolve_kernel::thread_bufw_Rst_A() {
    bufw_Rst_A = ap_rst.read();
}

void convolve_kernel::thread_bufw_WEN_A() {
    bufw_WEN_A = ap_const_lv4_0;
}

void convolve_kernel::thread_col_b_1_fu_195_p2() {
    col_b_1_fu_195_p2 = (!col_b_reg_98.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(col_b_reg_98.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_kernel::thread_col_b_cast5_cast_fu_181_p1() {
    col_b_cast5_cast_fu_181_p1 = esl_zext<6,2>(col_b_reg_98.read());
}

void convolve_kernel::thread_col_b_cast_fu_185_p1() {
    col_b_cast_fu_185_p1 = esl_zext<3,2>(col_b_reg_98.read());
}

void convolve_kernel::thread_i_1_fu_368_p2() {
    i_1_fu_368_p2 = (!ap_const_lv3_1.is_01() || !i_reg_131.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(i_reg_131.read()));
}

void convolve_kernel::thread_i_cast2_fu_331_p1() {
    i_cast2_fu_331_p1 = esl_zext<64,3>(i_reg_131.read());
}

void convolve_kernel::thread_j_1_fu_430_p2() {
    j_1_fu_430_p2 = (!j_reg_142.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_142.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolve_kernel::thread_j_cast1_cast_fu_410_p1() {
    j_cast1_cast_fu_410_p1 = esl_zext<9,3>(j_reg_142.read());
}

void convolve_kernel::thread_p_shl1_cast_fu_213_p1() {
    p_shl1_cast_fu_213_p1 = esl_zext<5,4>(tmp_8_fu_205_p3.read());
}

void convolve_kernel::thread_p_shl2_cast_fu_305_p1() {
    p_shl2_cast_fu_305_p1 = esl_zext<6,5>(tmp_18_fu_297_p3.read());
}

void convolve_kernel::thread_p_shl3_fu_287_p1() {
    p_shl3_fu_287_p1 = esl_sext<64,8>(tmp_16_fu_279_p3.read());
}

void convolve_kernel::thread_p_shl4_cast_fu_348_p3() {
    p_shl4_cast_fu_348_p3 = esl_concat<7,2>(tmp_24_fu_344_p1.read(), ap_const_lv2_0);
}

void convolve_kernel::thread_p_shl5_cast_fu_396_p3() {
    p_shl5_cast_fu_396_p3 = esl_concat<6,3>(tmp_28_fu_392_p1.read(), ap_const_lv3_0);
}

void convolve_kernel::thread_row_b_1_fu_175_p2() {
    row_b_1_fu_175_p2 = (!row_b_reg_87.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(row_b_reg_87.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_kernel::thread_row_b_cast6_cast_fu_161_p1() {
    row_b_cast6_cast_fu_161_p1 = esl_zext<6,2>(row_b_reg_87.read());
}

void convolve_kernel::thread_row_b_cast_fu_165_p1() {
    row_b_cast_fu_165_p1 = esl_zext<3,2>(row_b_reg_87.read());
}

void convolve_kernel::thread_ti_b_1_fu_325_p2() {
    ti_b_1_fu_325_p2 = (!ti_b_reg_120.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ti_b_reg_120.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_kernel::thread_ti_b_cast3_cast_fu_266_p1() {
    ti_b_cast3_cast_fu_266_p1 = esl_zext<6,2>(ti_b_reg_120.read());
}

void convolve_kernel::thread_tmp_10_cast_fu_223_p1() {
    tmp_10_cast_fu_223_p1 = esl_sext<6,5>(tmp_10_fu_217_p2.read());
}

void convolve_kernel::thread_tmp_10_fu_217_p2() {
    tmp_10_fu_217_p2 = (!p_shl1_cast_fu_213_p1.read().is_01() || !to_b_cast4_cast_fu_201_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl1_cast_fu_213_p1.read()) - sc_biguint<5>(to_b_cast4_cast_fu_201_p1.read()));
}

void convolve_kernel::thread_tmp_11_fu_227_p2() {
    tmp_11_fu_227_p2 = (!row_b_cast6_cast_reg_455.read().is_01() || !tmp_10_cast_fu_223_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(row_b_cast6_cast_reg_455.read()) + sc_bigint<6>(tmp_10_cast_fu_223_p1.read()));
}

void convolve_kernel::thread_tmp_12_fu_232_p2() {
    tmp_12_fu_232_p2 = (!ap_const_lv6_2.is_01())? sc_lv<6>(): tmp_11_fu_227_p2.read() << (unsigned short)ap_const_lv6_2.to_uint();
}

void convolve_kernel::thread_tmp_13_fu_238_p2() {
    tmp_13_fu_238_p2 = (!tmp_12_fu_232_p2.read().is_01() || !tmp_11_fu_227_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_12_fu_232_p2.read()) - sc_biguint<6>(tmp_11_fu_227_p2.read()));
}

void convolve_kernel::thread_tmp_14_cast_fu_249_p1() {
    tmp_14_cast_fu_249_p1 = esl_zext<64,6>(tmp_14_fu_244_p2.read());
}

void convolve_kernel::thread_tmp_14_fu_244_p2() {
    tmp_14_fu_244_p2 = (!col_b_cast5_cast_reg_473.read().is_01() || !tmp_13_fu_238_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(col_b_cast5_cast_reg_473.read()) + sc_biguint<6>(tmp_13_fu_238_p2.read()));
}

void convolve_kernel::thread_tmp_15_cast_fu_275_p1() {
    tmp_15_cast_fu_275_p1 = esl_sext<64,6>(tmp_15_fu_270_p2.read());
}

void convolve_kernel::thread_tmp_15_fu_270_p2() {
    tmp_15_fu_270_p2 = (!tmp_10_cast_reg_491.read().is_01() || !ti_b_cast3_cast_fu_266_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_10_cast_reg_491.read()) + sc_biguint<6>(ti_b_cast3_cast_fu_266_p1.read()));
}

void convolve_kernel::thread_tmp_16_fu_279_p3() {
    tmp_16_fu_279_p3 = esl_concat<6,2>(tmp_15_fu_270_p2.read(), ap_const_lv2_0);
}

void convolve_kernel::thread_tmp_17_fu_291_p2() {
    tmp_17_fu_291_p2 = (!tmp_15_cast_fu_275_p1.read().is_01() || !p_shl3_fu_287_p1.read().is_01())? sc_lv<64>(): (sc_bigint<64>(tmp_15_cast_fu_275_p1.read()) + sc_bigint<64>(p_shl3_fu_287_p1.read()));
}

void convolve_kernel::thread_tmp_18_fu_297_p3() {
    tmp_18_fu_297_p3 = esl_concat<2,3>(ti_b_reg_120.read(), ap_const_lv3_0);
}

void convolve_kernel::thread_tmp_19_cast_fu_315_p1() {
    tmp_19_cast_fu_315_p1 = esl_sext<7,6>(tmp_19_fu_309_p2.read());
}

void convolve_kernel::thread_tmp_19_fu_309_p2() {
    tmp_19_fu_309_p2 = (!p_shl2_cast_fu_305_p1.read().is_01() || !ti_b_cast3_cast_fu_266_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl2_cast_fu_305_p1.read()) - sc_biguint<6>(ti_b_cast3_cast_fu_266_p1.read()));
}

void convolve_kernel::thread_tmp_1_fu_189_p2() {
    tmp_1_fu_189_p2 = (!col_b_reg_98.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(col_b_reg_98.read() == ap_const_lv2_3);
}

void convolve_kernel::thread_tmp_20_fu_335_p2() {
    tmp_20_fu_335_p2 = (!tmp_17_reg_509.read().is_01() || !i_cast2_fu_331_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_17_reg_509.read()) + sc_biguint<64>(i_cast2_fu_331_p1.read()));
}

void convolve_kernel::thread_tmp_21_fu_340_p1() {
    tmp_21_fu_340_p1 = tmp_20_fu_335_p2.read().range(9-1, 0);
}

void convolve_kernel::thread_tmp_22_fu_356_p2() {
    tmp_22_fu_356_p2 = (!tmp_21_fu_340_p1.read().is_01() || !p_shl4_cast_fu_348_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_21_fu_340_p1.read()) + sc_biguint<9>(p_shl4_cast_fu_348_p3.read()));
}

void convolve_kernel::thread_tmp_23_cast_fu_388_p1() {
    tmp_23_cast_fu_388_p1 = esl_sext<9,7>(tmp_23_fu_383_p2.read());
}

void convolve_kernel::thread_tmp_23_fu_383_p2() {
    tmp_23_fu_383_p2 = (!tmp_9_cast_cast_fu_379_p1.read().is_01() || !tmp_19_cast_reg_514.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_9_cast_cast_fu_379_p1.read()) + sc_bigint<7>(tmp_19_cast_reg_514.read()));
}

void convolve_kernel::thread_tmp_24_fu_344_p1() {
    tmp_24_fu_344_p1 = tmp_20_fu_335_p2.read().range(7-1, 0);
}

void convolve_kernel::thread_tmp_25_fu_404_p2() {
    tmp_25_fu_404_p2 = (!p_shl5_cast_fu_396_p3.read().is_01() || !tmp_23_cast_fu_388_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl5_cast_fu_396_p3.read()) - sc_bigint<9>(tmp_23_cast_fu_388_p1.read()));
}

void convolve_kernel::thread_tmp_26_cast_fu_419_p1() {
    tmp_26_cast_fu_419_p1 = esl_zext<64,9>(tmp_26_fu_414_p2.read());
}

void convolve_kernel::thread_tmp_26_fu_414_p2() {
    tmp_26_fu_414_p2 = (!tmp_22_reg_527.read().is_01() || !j_cast1_cast_fu_410_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_22_reg_527.read()) + sc_biguint<9>(j_cast1_cast_fu_410_p1.read()));
}

void convolve_kernel::thread_tmp_27_cast_fu_450_p1() {
    tmp_27_cast_fu_450_p1 = esl_zext<64,9>(tmp_27_fu_445_p2.read());
}

void convolve_kernel::thread_tmp_27_fu_445_p2() {
    tmp_27_fu_445_p2 = (!tmp_25_reg_540.read().is_01() || !tmp_2_cast_cast_fu_441_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_25_reg_540.read()) + sc_biguint<9>(tmp_2_cast_cast_fu_441_p1.read()));
}

void convolve_kernel::thread_tmp_28_fu_392_p1() {
    tmp_28_fu_392_p1 = tmp_23_fu_383_p2.read().range(6-1, 0);
}

void convolve_kernel::thread_tmp_2_cast_cast_fu_441_p1() {
    tmp_2_cast_cast_fu_441_p1 = esl_zext<9,3>(tmp_2_fu_436_p2.read());
}

void convolve_kernel::thread_tmp_2_fu_436_p2() {
    tmp_2_fu_436_p2 = (!col_b_cast_reg_478.read().is_01() || !j_reg_142.read().is_01())? sc_lv<3>(): (sc_biguint<3>(col_b_cast_reg_478.read()) + sc_biguint<3>(j_reg_142.read()));
}

void convolve_kernel::thread_tmp_3_fu_254_p2() {
    tmp_3_fu_254_p2 = (!to_b_reg_109.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(to_b_reg_109.read() == ap_const_lv2_3);
}

void convolve_kernel::thread_tmp_5_fu_319_p2() {
    tmp_5_fu_319_p2 = (!ti_b_reg_120.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ti_b_reg_120.read() == ap_const_lv2_3);
}

void convolve_kernel::thread_tmp_7_fu_362_p2() {
    tmp_7_fu_362_p2 = (!i_reg_131.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_131.read() == ap_const_lv3_5);
}

void convolve_kernel::thread_tmp_8_fu_205_p3() {
    tmp_8_fu_205_p3 = esl_concat<2,2>(to_b_reg_109.read(), ap_const_lv2_0);
}

void convolve_kernel::thread_tmp_9_cast_cast_fu_379_p1() {
    tmp_9_cast_cast_fu_379_p1 = esl_zext<7,3>(tmp_9_fu_374_p2.read());
}

void convolve_kernel::thread_tmp_9_fu_374_p2() {
    tmp_9_fu_374_p2 = (!i_reg_131.read().is_01() || !row_b_cast_reg_460.read().is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_131.read()) + sc_biguint<3>(row_b_cast_reg_460.read()));
}

void convolve_kernel::thread_tmp_fu_169_p2() {
    tmp_fu_169_p2 = (!row_b_reg_87.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(row_b_reg_87.read() == ap_const_lv2_3);
}

void convolve_kernel::thread_tmp_s_fu_424_p2() {
    tmp_s_fu_424_p2 = (!j_reg_142.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_142.read() == ap_const_lv3_5);
}

void convolve_kernel::thread_to_b_1_fu_260_p2() {
    to_b_1_fu_260_p2 = (!ap_const_lv2_1.is_01() || !to_b_reg_109.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(to_b_reg_109.read()));
}

void convolve_kernel::thread_to_b_cast4_cast_fu_201_p1() {
    to_b_cast4_cast_fu_201_p1 = esl_zext<5,2>(to_b_reg_109.read());
}

void convolve_kernel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_169_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_1_fu_189_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_254_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_319_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_7_fu_362_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(tmp_s_fu_424_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXX";
            break;
    }
}

void convolve_kernel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_Addr_A\" :  \"" << bufw_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_EN_A\" :  \"" << bufw_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_WEN_A\" :  \"" << bufw_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_Din_A\" :  \"" << bufw_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"bufw_Dout_A\" :  \"" << bufw_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_Clk_A\" :  \"" << bufw_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_Rst_A\" :  \"" << bufw_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_Addr_A\" :  \"" << bufi_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_EN_A\" :  \"" << bufi_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_WEN_A\" :  \"" << bufi_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_Din_A\" :  \"" << bufi_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"bufi_Dout_A\" :  \"" << bufi_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_Clk_A\" :  \"" << bufi_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_Rst_A\" :  \"" << bufi_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_Addr_A\" :  \"" << bufo_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_EN_A\" :  \"" << bufo_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_WEN_A\" :  \"" << bufo_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_Din_A\" :  \"" << bufo_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"bufo_Dout_A\" :  \"" << bufo_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_Clk_A\" :  \"" << bufo_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_Rst_A\" :  \"" << bufo_Rst_A.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

