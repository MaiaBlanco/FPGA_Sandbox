// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="convolve_kernel,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.319800,HLS_SYN_LAT=10783,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=6,HLS_SYN_FF=3102,HLS_SYN_LUT=2726}" *)

module convolve_kernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bufw_Addr_A,
        bufw_EN_A,
        bufw_WEN_A,
        bufw_Din_A,
        bufw_Dout_A,
        bufw_Clk_A,
        bufw_Rst_A,
        bufi_Addr_A,
        bufi_EN_A,
        bufi_WEN_A,
        bufi_Din_A,
        bufi_Dout_A,
        bufi_Clk_A,
        bufi_Rst_A,
        bufo_Addr_A,
        bufo_EN_A,
        bufo_WEN_A,
        bufo_Din_A,
        bufo_Dout_A,
        bufo_Clk_A,
        bufo_Rst_A
);

parameter    ap_ST_fsm_state1 = 137'd1;
parameter    ap_ST_fsm_state2 = 137'd2;
parameter    ap_ST_fsm_state3 = 137'd4;
parameter    ap_ST_fsm_state4 = 137'd8;
parameter    ap_ST_fsm_state5 = 137'd16;
parameter    ap_ST_fsm_state6 = 137'd32;
parameter    ap_ST_fsm_state7 = 137'd64;
parameter    ap_ST_fsm_state8 = 137'd128;
parameter    ap_ST_fsm_state9 = 137'd256;
parameter    ap_ST_fsm_state10 = 137'd512;
parameter    ap_ST_fsm_state11 = 137'd1024;
parameter    ap_ST_fsm_state12 = 137'd2048;
parameter    ap_ST_fsm_state13 = 137'd4096;
parameter    ap_ST_fsm_state14 = 137'd8192;
parameter    ap_ST_fsm_state15 = 137'd16384;
parameter    ap_ST_fsm_state16 = 137'd32768;
parameter    ap_ST_fsm_state17 = 137'd65536;
parameter    ap_ST_fsm_state18 = 137'd131072;
parameter    ap_ST_fsm_state19 = 137'd262144;
parameter    ap_ST_fsm_state20 = 137'd524288;
parameter    ap_ST_fsm_state21 = 137'd1048576;
parameter    ap_ST_fsm_state22 = 137'd2097152;
parameter    ap_ST_fsm_state23 = 137'd4194304;
parameter    ap_ST_fsm_state24 = 137'd8388608;
parameter    ap_ST_fsm_state25 = 137'd16777216;
parameter    ap_ST_fsm_state26 = 137'd33554432;
parameter    ap_ST_fsm_state27 = 137'd67108864;
parameter    ap_ST_fsm_state28 = 137'd134217728;
parameter    ap_ST_fsm_state29 = 137'd268435456;
parameter    ap_ST_fsm_state30 = 137'd536870912;
parameter    ap_ST_fsm_state31 = 137'd1073741824;
parameter    ap_ST_fsm_state32 = 137'd2147483648;
parameter    ap_ST_fsm_state33 = 137'd4294967296;
parameter    ap_ST_fsm_state34 = 137'd8589934592;
parameter    ap_ST_fsm_state35 = 137'd17179869184;
parameter    ap_ST_fsm_state36 = 137'd34359738368;
parameter    ap_ST_fsm_state37 = 137'd68719476736;
parameter    ap_ST_fsm_state38 = 137'd137438953472;
parameter    ap_ST_fsm_state39 = 137'd274877906944;
parameter    ap_ST_fsm_state40 = 137'd549755813888;
parameter    ap_ST_fsm_state41 = 137'd1099511627776;
parameter    ap_ST_fsm_state42 = 137'd2199023255552;
parameter    ap_ST_fsm_state43 = 137'd4398046511104;
parameter    ap_ST_fsm_state44 = 137'd8796093022208;
parameter    ap_ST_fsm_state45 = 137'd17592186044416;
parameter    ap_ST_fsm_state46 = 137'd35184372088832;
parameter    ap_ST_fsm_state47 = 137'd70368744177664;
parameter    ap_ST_fsm_state48 = 137'd140737488355328;
parameter    ap_ST_fsm_state49 = 137'd281474976710656;
parameter    ap_ST_fsm_state50 = 137'd562949953421312;
parameter    ap_ST_fsm_state51 = 137'd1125899906842624;
parameter    ap_ST_fsm_state52 = 137'd2251799813685248;
parameter    ap_ST_fsm_state53 = 137'd4503599627370496;
parameter    ap_ST_fsm_state54 = 137'd9007199254740992;
parameter    ap_ST_fsm_state55 = 137'd18014398509481984;
parameter    ap_ST_fsm_state56 = 137'd36028797018963968;
parameter    ap_ST_fsm_state57 = 137'd72057594037927936;
parameter    ap_ST_fsm_state58 = 137'd144115188075855872;
parameter    ap_ST_fsm_state59 = 137'd288230376151711744;
parameter    ap_ST_fsm_state60 = 137'd576460752303423488;
parameter    ap_ST_fsm_state61 = 137'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 137'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 137'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 137'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 137'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 137'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 137'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 137'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 137'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 137'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 137'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 137'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 137'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 137'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 137'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 137'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 137'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 137'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 137'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 137'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 137'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 137'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 137'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 137'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 137'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 137'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 137'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 137'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 137'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 137'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 137'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 137'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 137'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 137'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 137'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 137'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 137'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 137'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 137'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 137'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 137'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 137'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 137'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 137'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 137'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 137'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 137'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 137'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 137'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 137'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 137'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 137'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 137'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 137'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 137'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 137'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 137'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 137'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 137'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 137'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 137'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 137'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 137'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 137'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 137'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 137'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 137'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 137'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 137'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 137'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 137'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 137'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 137'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 137'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 137'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 137'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 137'd87112285931760246646623899502532662132736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] bufw_Addr_A;
output   bufw_EN_A;
output  [3:0] bufw_WEN_A;
output  [31:0] bufw_Din_A;
input  [31:0] bufw_Dout_A;
output   bufw_Clk_A;
output   bufw_Rst_A;
output  [31:0] bufi_Addr_A;
output   bufi_EN_A;
output  [3:0] bufi_WEN_A;
output  [31:0] bufi_Din_A;
input  [31:0] bufi_Dout_A;
output   bufi_Clk_A;
output   bufi_Rst_A;
output  [31:0] bufo_Addr_A;
output   bufo_EN_A;
output  [3:0] bufo_WEN_A;
output  [31:0] bufo_Din_A;
input  [31:0] bufo_Dout_A;
output   bufo_Clk_A;
output   bufo_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bufw_EN_A;
reg bufi_EN_A;
reg bufo_EN_A;
reg[3:0] bufo_WEN_A;

(* fsm_encoding = "none" *) reg   [136:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_543;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state127;
reg   [31:0] reg_548;
wire   [31:0] grp_fu_539_p2;
reg   [31:0] reg_553;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state116;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state126;
wire    ap_CS_fsm_state131;
wire   [31:0] grp_fu_535_p2;
reg   [31:0] reg_558;
wire    ap_CS_fsm_state136;
wire  signed [5:0] tmp_7_cast_fu_586_p1;
reg  signed [5:0] tmp_7_cast_reg_1394;
wire    ap_CS_fsm_state2;
wire   [1:0] to_b_1_fu_596_p2;
reg   [1:0] to_b_1_reg_1403;
wire  signed [8:0] grp_fu_1387_p3;
reg  signed [8:0] tmp_9_reg_1408;
wire    ap_CS_fsm_state3;
wire   [5:0] tmp_34_fu_618_p2;
reg   [5:0] tmp_34_reg_1437;
wire   [0:0] tmp_1_fu_624_p2;
reg   [0:0] tmp_1_reg_1443;
wire   [1:0] ti_b_1_fu_630_p2;
reg   [1:0] ti_b_1_reg_1447;
reg   [7:0] bufw_addr_reg_1452;
wire    ap_CS_fsm_state4;
reg   [7:0] bufw_addr_1_reg_1457;
reg   [7:0] bufw_addr_2_reg_1462;
reg   [7:0] bufw_addr_3_reg_1467;
reg   [7:0] bufw_addr_4_reg_1472;
reg   [7:0] bufw_addr_5_reg_1477;
reg   [7:0] bufw_addr_6_reg_1482;
reg   [7:0] bufw_addr_7_reg_1487;
reg   [7:0] bufw_addr_8_reg_1492;
reg   [7:0] bufw_addr_9_reg_1497;
reg   [7:0] bufw_addr_10_reg_1502;
reg   [7:0] bufw_addr_11_reg_1507;
reg   [7:0] bufw_addr_12_reg_1512;
reg   [7:0] bufw_addr_13_reg_1517;
reg   [7:0] bufw_addr_14_reg_1522;
reg   [7:0] bufw_addr_15_reg_1527;
reg   [7:0] bufw_addr_16_reg_1532;
reg   [7:0] bufw_addr_17_reg_1537;
reg   [7:0] bufw_addr_18_reg_1542;
reg   [7:0] bufw_addr_19_reg_1547;
reg   [7:0] bufw_addr_20_reg_1552;
reg   [7:0] bufw_addr_21_reg_1557;
reg   [7:0] bufw_addr_22_reg_1562;
reg   [7:0] bufw_addr_23_reg_1567;
reg   [7:0] bufw_addr_24_reg_1572;
wire  signed [6:0] tmp_35_cast_fu_880_p1;
reg  signed [6:0] tmp_35_cast_reg_1577;
wire   [8:0] tmp_37_fu_912_p2;
reg   [8:0] tmp_37_reg_1585;
wire    ap_CS_fsm_state5;
wire   [5:0] tmp_40_fu_929_p2;
reg   [5:0] tmp_40_reg_1594;
wire   [1:0] row_b_1_fu_945_p2;
reg   [1:0] row_b_1_reg_1602;
wire   [8:0] tmp_43_fu_976_p2;
reg   [8:0] tmp_43_reg_1607;
wire   [0:0] tmp_3_fu_939_p2;
wire   [8:0] tmp_46_fu_1013_p2;
reg   [8:0] tmp_46_reg_1616;
wire   [8:0] tmp_48_fu_1046_p2;
reg   [8:0] tmp_48_reg_1625;
wire   [8:0] tmp_51_fu_1085_p2;
reg   [8:0] tmp_51_reg_1634;
wire    ap_CS_fsm_state6;
reg   [7:0] bufi_addr_5_reg_1648;
reg   [7:0] bufi_addr_10_reg_1653;
reg   [7:0] bufi_addr_15_reg_1658;
reg   [7:0] bufi_addr_20_reg_1663;
reg   [4:0] bufo_addr_reg_1668;
wire   [2:0] col_b_cast_fu_1159_p1;
reg   [2:0] col_b_cast_reg_1673;
wire   [1:0] col_b_1_fu_1169_p2;
reg   [1:0] col_b_1_reg_1682;
reg   [31:0] bufo_load_reg_1688;
wire   [8:0] col_b_1_cast_cast_fu_1175_p1;
reg   [8:0] col_b_1_cast_cast_reg_1693;
wire   [8:0] tmp_2_0_2_cast_cast_fu_1193_p1;
reg   [8:0] tmp_2_0_2_cast_cast_reg_1706;
wire   [8:0] tmp_2_0_3_cast_cast_fu_1212_p1;
reg   [8:0] tmp_2_0_3_cast_cast_reg_1719;
wire   [8:0] tmp_2_0_4_cast_cast_fu_1234_p1;
reg   [8:0] tmp_2_0_4_cast_cast_reg_1732;
wire   [8:0] tmp_62_fu_1338_p2;
reg   [8:0] tmp_62_reg_1795;
wire   [8:0] tmp_67_fu_1342_p2;
reg   [8:0] tmp_67_reg_1800;
wire   [8:0] tmp_72_fu_1355_p2;
reg   [8:0] tmp_72_reg_1810;
wire   [8:0] tmp_76_fu_1359_p2;
reg   [8:0] tmp_76_reg_1815;
wire   [8:0] tmp_77_fu_1363_p2;
reg   [8:0] tmp_77_reg_1820;
reg   [1:0] to_b_reg_490;
reg   [1:0] ti_b_reg_501;
wire   [0:0] tmp_fu_590_p2;
reg   [1:0] row_b_reg_512;
wire   [0:0] tmp_5_fu_1163_p2;
reg   [1:0] col_b_reg_523;
wire    ap_CS_fsm_state137;
wire  signed [63:0] tmp_9_cast_fu_636_p1;
wire  signed [63:0] tmp_10_cast_fu_645_p1;
wire  signed [63:0] tmp_11_cast_fu_655_p1;
wire  signed [63:0] tmp_12_cast_fu_665_p1;
wire  signed [63:0] tmp_13_cast_fu_675_p1;
wire  signed [63:0] tmp_14_cast_fu_685_p1;
wire  signed [63:0] tmp_15_cast_fu_695_p1;
wire  signed [63:0] tmp_16_cast_fu_705_p1;
wire  signed [63:0] tmp_17_cast_fu_715_p1;
wire  signed [63:0] tmp_18_cast_fu_725_p1;
wire  signed [63:0] tmp_19_cast_fu_735_p1;
wire  signed [63:0] tmp_20_cast_fu_745_p1;
wire  signed [63:0] tmp_21_cast_fu_755_p1;
wire  signed [63:0] tmp_22_cast_fu_765_p1;
wire  signed [63:0] tmp_23_cast_fu_775_p1;
wire  signed [63:0] tmp_24_cast_fu_785_p1;
wire  signed [63:0] tmp_25_cast_fu_795_p1;
wire  signed [63:0] tmp_26_cast_fu_805_p1;
wire  signed [63:0] tmp_27_cast_fu_815_p1;
wire  signed [63:0] tmp_28_cast_fu_825_p1;
wire  signed [63:0] tmp_29_cast_fu_835_p1;
wire  signed [63:0] tmp_30_cast_fu_845_p1;
wire  signed [63:0] tmp_31_cast_fu_855_p1;
wire  signed [63:0] tmp_32_cast_fu_865_p1;
wire  signed [63:0] tmp_33_cast_fu_875_p1;
wire   [63:0] tmp_54_cast_fu_1104_p1;
wire   [63:0] tmp_55_cast_fu_1114_p1;
wire   [63:0] tmp_56_cast_fu_1124_p1;
wire   [63:0] tmp_57_cast_fu_1134_p1;
wire   [63:0] tmp_58_cast_fu_1144_p1;
wire   [63:0] tmp_59_cast_fu_1154_p1;
wire   [63:0] tmp_60_cast_fu_1183_p1;
wire   [63:0] tmp_65_cast_fu_1202_p1;
wire   [63:0] tmp_70_cast_fu_1221_p1;
wire   [63:0] tmp_75_cast_fu_1243_p1;
wire   [63:0] tmp_61_cast_fu_1252_p1;
wire   [63:0] tmp_66_cast_fu_1261_p1;
wire   [63:0] tmp_71_cast_fu_1270_p1;
wire   [63:0] tmp_76_cast_fu_1279_p1;
wire   [63:0] tmp_62_cast_fu_1288_p1;
wire   [63:0] tmp_67_cast_fu_1297_p1;
wire   [63:0] tmp_72_cast_fu_1306_p1;
wire   [63:0] tmp_77_cast_fu_1315_p1;
wire   [63:0] tmp_63_cast_fu_1324_p1;
wire   [63:0] tmp_68_cast_fu_1333_p1;
wire   [63:0] tmp_73_cast_fu_1350_p1;
wire   [63:0] tmp_78_cast_fu_1367_p1;
wire   [63:0] tmp_64_cast_fu_1371_p1;
wire   [63:0] tmp_69_cast_fu_1375_p1;
wire   [63:0] tmp_74_cast_fu_1379_p1;
wire   [63:0] tmp_79_cast_fu_1383_p1;
reg   [31:0] bufw_Addr_A_orig;
reg   [31:0] bufi_Addr_A_orig;
wire    ap_CS_fsm_state10;
wire   [31:0] bufo_Addr_A_orig;
reg   [31:0] grp_fu_535_p0;
wire    ap_CS_fsm_state132;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state123;
wire    ap_CS_fsm_state128;
wire   [3:0] tmp_2_fu_568_p3;
wire   [4:0] p_shl_cast_fu_576_p1;
wire   [4:0] to_b_cast4_cast_fu_564_p1;
wire   [4:0] tmp_7_fu_580_p2;
wire   [4:0] tmp_33_fu_606_p3;
wire   [5:0] p_shl1_cast_fu_614_p1;
wire   [5:0] ti_b_cast3_cast_fu_602_p1;
(* use_dsp48 = "no" *) wire   [8:0] tmp_s_fu_640_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_10_fu_650_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_11_fu_660_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_12_fu_670_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_13_fu_680_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_14_fu_690_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_15_fu_700_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_16_fu_710_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_17_fu_720_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_18_fu_730_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_19_fu_740_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_20_fu_750_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_21_fu_760_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_22_fu_770_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_23_fu_780_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_24_fu_790_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_25_fu_800_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_26_fu_810_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_27_fu_820_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_28_fu_830_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_29_fu_840_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_30_fu_850_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_31_fu_860_p2;
(* use_dsp48 = "no" *) wire   [8:0] tmp_32_fu_870_p2;
wire   [6:0] row_b_cast2_cast_fu_887_p1;
wire   [6:0] tmp_35_fu_891_p2;
wire   [5:0] tmp_36_fu_900_p1;
wire   [8:0] p_shl3_cast_fu_904_p3;
wire  signed [8:0] tmp_36_cast_fu_896_p1;
wire   [5:0] row_b_cast2_cast1_fu_883_p1;
wire   [5:0] tmp_38_fu_918_p2;
wire   [5:0] tmp_39_fu_923_p2;
wire   [6:0] tmp_9_1_cast_cast_fu_951_p1;
wire   [6:0] tmp_41_fu_955_p2;
wire   [5:0] tmp_42_fu_964_p1;
wire   [8:0] p_shl7_cast_fu_968_p3;
wire  signed [8:0] tmp_42_cast_fu_960_p1;
wire   [2:0] row_b_cast_fu_935_p1;
wire   [2:0] tmp_9_2_fu_982_p2;
wire   [6:0] tmp_9_2_cast_cast_fu_988_p1;
wire   [6:0] tmp_44_fu_992_p2;
wire   [5:0] tmp_45_fu_1001_p1;
wire   [8:0] p_shl6_cast_fu_1005_p3;
wire  signed [8:0] tmp_45_cast_fu_997_p1;
wire   [2:0] tmp_9_3_fu_1019_p2;
wire   [5:0] tmp_9_3_cast_cast_fu_1025_p1;
wire   [5:0] tmp_47_fu_1029_p2;
wire   [8:0] p_shl5_cast_fu_1038_p3;
wire   [8:0] tmp_48_cast_fu_1034_p1;
wire   [2:0] tmp_9_s_fu_1052_p3;
wire   [6:0] tmp_9_4_cast_cast_fu_1060_p1;
wire   [6:0] tmp_49_fu_1064_p2;
wire   [5:0] tmp_50_fu_1073_p1;
wire   [8:0] p_shl4_cast_fu_1077_p3;
wire  signed [8:0] tmp_51_cast_fu_1069_p1;
wire   [8:0] col_b_cast1_cast_fu_1095_p1;
wire   [8:0] tmp_52_fu_1099_p2;
wire   [8:0] tmp_53_fu_1109_p2;
wire   [8:0] tmp_54_fu_1119_p2;
wire   [8:0] tmp_55_fu_1129_p2;
wire   [8:0] tmp_56_fu_1139_p2;
wire   [5:0] col_b_cast1_cast8_fu_1091_p1;
wire   [5:0] tmp_57_fu_1149_p2;
wire   [8:0] tmp_58_fu_1178_p2;
wire   [2:0] tmp_2_0_2_fu_1188_p2;
wire   [8:0] tmp_63_fu_1197_p2;
wire   [2:0] tmp_2_0_3_fu_1207_p2;
wire   [8:0] tmp_68_fu_1216_p2;
wire   [2:0] tmp_2_0_s_fu_1226_p3;
wire   [8:0] tmp_73_fu_1238_p2;
wire   [8:0] tmp_59_fu_1248_p2;
wire   [8:0] tmp_64_fu_1257_p2;
wire   [8:0] tmp_69_fu_1266_p2;
wire   [8:0] tmp_74_fu_1275_p2;
wire   [8:0] tmp_60_fu_1284_p2;
wire   [8:0] tmp_65_fu_1293_p2;
wire   [8:0] tmp_70_fu_1302_p2;
wire   [8:0] tmp_75_fu_1311_p2;
wire   [8:0] tmp_61_fu_1320_p2;
wire   [8:0] tmp_66_fu_1329_p2;
wire   [8:0] tmp_71_fu_1346_p2;
wire  signed [4:0] grp_fu_1387_p0;
wire   [1:0] grp_fu_1387_p1;
wire   [5:0] grp_fu_1387_p2;
reg   [136:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 137'd1;
end

convolve_kernel_fbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_535_p0),
    .din1(reg_553),
    .ce(1'b1),
    .dout(grp_fu_535_p2)
);

convolve_kernel_fcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fcud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_543),
    .din1(reg_548),
    .ce(1'b1),
    .dout(grp_fu_539_p2)
);

convolve_kernel_adEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
convolve_kernel_adEe_U3(
    .din0(grp_fu_1387_p0),
    .din1(grp_fu_1387_p1),
    .din2(grp_fu_1387_p2),
    .dout(grp_fu_1387_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_3_fu_939_p2 == 1'd0))) begin
        col_b_reg_523 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state137)) begin
        col_b_reg_523 <= col_b_1_reg_1682;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_1_reg_1443 == 1'd0))) begin
        row_b_reg_512 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == tmp_5_fu_1163_p2))) begin
        row_b_reg_512 <= row_b_1_reg_1602;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == tmp_fu_590_p2))) begin
        ti_b_reg_501 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_3_fu_939_p2 == 1'd1))) begin
        ti_b_reg_501 <= ti_b_1_reg_1447;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_1_reg_1443 == 1'd1))) begin
        to_b_reg_490 <= to_b_1_reg_1403;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        to_b_reg_490 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bufi_addr_10_reg_1653 <= tmp_56_cast_fu_1124_p1;
        bufi_addr_15_reg_1658 <= tmp_57_cast_fu_1134_p1;
        bufi_addr_20_reg_1663 <= tmp_58_cast_fu_1144_p1;
        bufi_addr_5_reg_1648 <= tmp_55_cast_fu_1114_p1;
        bufo_addr_reg_1668 <= tmp_59_cast_fu_1154_p1;
        col_b_1_reg_1682 <= col_b_1_fu_1169_p2;
        col_b_cast_reg_1673[1 : 0] <= col_b_cast_fu_1159_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        bufo_load_reg_1688 <= bufo_Dout_A;
        col_b_1_cast_cast_reg_1693[1 : 0] <= col_b_1_cast_cast_fu_1175_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bufw_addr_10_reg_1502 <= tmp_19_cast_fu_735_p1;
        bufw_addr_11_reg_1507 <= tmp_20_cast_fu_745_p1;
        bufw_addr_12_reg_1512 <= tmp_21_cast_fu_755_p1;
        bufw_addr_13_reg_1517 <= tmp_22_cast_fu_765_p1;
        bufw_addr_14_reg_1522 <= tmp_23_cast_fu_775_p1;
        bufw_addr_15_reg_1527 <= tmp_24_cast_fu_785_p1;
        bufw_addr_16_reg_1532 <= tmp_25_cast_fu_795_p1;
        bufw_addr_17_reg_1537 <= tmp_26_cast_fu_805_p1;
        bufw_addr_18_reg_1542 <= tmp_27_cast_fu_815_p1;
        bufw_addr_19_reg_1547 <= tmp_28_cast_fu_825_p1;
        bufw_addr_1_reg_1457 <= tmp_10_cast_fu_645_p1;
        bufw_addr_20_reg_1552 <= tmp_29_cast_fu_835_p1;
        bufw_addr_21_reg_1557 <= tmp_30_cast_fu_845_p1;
        bufw_addr_22_reg_1562 <= tmp_31_cast_fu_855_p1;
        bufw_addr_23_reg_1567 <= tmp_32_cast_fu_865_p1;
        bufw_addr_24_reg_1572 <= tmp_33_cast_fu_875_p1;
        bufw_addr_2_reg_1462 <= tmp_11_cast_fu_655_p1;
        bufw_addr_3_reg_1467 <= tmp_12_cast_fu_665_p1;
        bufw_addr_4_reg_1472 <= tmp_13_cast_fu_675_p1;
        bufw_addr_5_reg_1477 <= tmp_14_cast_fu_685_p1;
        bufw_addr_6_reg_1482 <= tmp_15_cast_fu_695_p1;
        bufw_addr_7_reg_1487 <= tmp_16_cast_fu_705_p1;
        bufw_addr_8_reg_1492 <= tmp_17_cast_fu_715_p1;
        bufw_addr_9_reg_1497 <= tmp_18_cast_fu_725_p1;
        bufw_addr_reg_1452 <= tmp_9_cast_fu_636_p1;
        tmp_35_cast_reg_1577 <= tmp_35_cast_fu_880_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state127))) begin
        reg_543 <= bufw_Dout_A;
        reg_548 <= bufi_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state131))) begin
        reg_553 <= grp_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state136))) begin
        reg_558 <= grp_fu_535_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        row_b_1_reg_1602 <= row_b_1_fu_945_p2;
        tmp_37_reg_1585 <= tmp_37_fu_912_p2;
        tmp_40_reg_1594 <= tmp_40_fu_929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ti_b_1_reg_1447 <= ti_b_1_fu_630_p2;
        tmp_1_reg_1443 <= tmp_1_fu_624_p2;
        tmp_34_reg_1437 <= tmp_34_fu_618_p2;
        tmp_9_reg_1408 <= grp_fu_1387_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_2_0_2_cast_cast_reg_1706[2 : 0] <= tmp_2_0_2_cast_cast_fu_1193_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_2_0_3_cast_cast_reg_1719[2 : 0] <= tmp_2_0_3_cast_cast_fu_1212_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_2_0_4_cast_cast_reg_1732[1 : 0] <= tmp_2_0_4_cast_cast_fu_1234_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_3_fu_939_p2 == 1'd0))) begin
        tmp_43_reg_1607 <= tmp_43_fu_976_p2;
        tmp_46_reg_1616 <= tmp_46_fu_1013_p2;
        tmp_48_reg_1625 <= tmp_48_fu_1046_p2;
        tmp_51_reg_1634 <= tmp_51_fu_1085_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        tmp_62_reg_1795 <= tmp_62_fu_1338_p2;
        tmp_67_reg_1800 <= tmp_67_fu_1342_p2;
        tmp_72_reg_1810 <= tmp_72_fu_1355_p2;
        tmp_76_reg_1815 <= tmp_76_fu_1359_p2;
        tmp_77_reg_1820 <= tmp_77_fu_1363_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_7_cast_reg_1394 <= tmp_7_cast_fu_586_p1;
        to_b_1_reg_1403 <= to_b_1_fu_596_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == tmp_fu_590_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == tmp_fu_590_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        bufi_Addr_A_orig = tmp_79_cast_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        bufi_Addr_A_orig = tmp_74_cast_fu_1379_p1;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        bufi_Addr_A_orig = tmp_69_cast_fu_1375_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        bufi_Addr_A_orig = tmp_64_cast_fu_1371_p1;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        bufi_Addr_A_orig = bufi_addr_20_reg_1663;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        bufi_Addr_A_orig = tmp_78_cast_fu_1367_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        bufi_Addr_A_orig = tmp_73_cast_fu_1350_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        bufi_Addr_A_orig = tmp_68_cast_fu_1333_p1;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        bufi_Addr_A_orig = tmp_63_cast_fu_1324_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        bufi_Addr_A_orig = bufi_addr_15_reg_1658;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bufi_Addr_A_orig = tmp_77_cast_fu_1315_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        bufi_Addr_A_orig = tmp_72_cast_fu_1306_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        bufi_Addr_A_orig = tmp_67_cast_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        bufi_Addr_A_orig = tmp_62_cast_fu_1288_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        bufi_Addr_A_orig = bufi_addr_10_reg_1653;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        bufi_Addr_A_orig = tmp_76_cast_fu_1279_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        bufi_Addr_A_orig = tmp_71_cast_fu_1270_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        bufi_Addr_A_orig = tmp_66_cast_fu_1261_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        bufi_Addr_A_orig = tmp_61_cast_fu_1252_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        bufi_Addr_A_orig = bufi_addr_5_reg_1648;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        bufi_Addr_A_orig = tmp_75_cast_fu_1243_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        bufi_Addr_A_orig = tmp_70_cast_fu_1221_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        bufi_Addr_A_orig = tmp_65_cast_fu_1202_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        bufi_Addr_A_orig = tmp_60_cast_fu_1183_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bufi_Addr_A_orig = tmp_54_cast_fu_1104_p1;
    end else begin
        bufi_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state6))) begin
        bufi_EN_A = 1'b1;
    end else begin
        bufi_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state10))) begin
        bufo_EN_A = 1'b1;
    end else begin
        bufo_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        bufo_WEN_A = 4'd15;
    end else begin
        bufo_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        bufw_Addr_A_orig = bufw_addr_24_reg_1572;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        bufw_Addr_A_orig = bufw_addr_23_reg_1567;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        bufw_Addr_A_orig = bufw_addr_22_reg_1562;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        bufw_Addr_A_orig = bufw_addr_21_reg_1557;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        bufw_Addr_A_orig = bufw_addr_20_reg_1552;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        bufw_Addr_A_orig = bufw_addr_19_reg_1547;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        bufw_Addr_A_orig = bufw_addr_18_reg_1542;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        bufw_Addr_A_orig = bufw_addr_17_reg_1537;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        bufw_Addr_A_orig = bufw_addr_16_reg_1532;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        bufw_Addr_A_orig = bufw_addr_15_reg_1527;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        bufw_Addr_A_orig = bufw_addr_14_reg_1522;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        bufw_Addr_A_orig = bufw_addr_13_reg_1517;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        bufw_Addr_A_orig = bufw_addr_12_reg_1512;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        bufw_Addr_A_orig = bufw_addr_11_reg_1507;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        bufw_Addr_A_orig = bufw_addr_10_reg_1502;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        bufw_Addr_A_orig = bufw_addr_9_reg_1497;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        bufw_Addr_A_orig = bufw_addr_8_reg_1492;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        bufw_Addr_A_orig = bufw_addr_7_reg_1487;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        bufw_Addr_A_orig = bufw_addr_6_reg_1482;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        bufw_Addr_A_orig = bufw_addr_5_reg_1477;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        bufw_Addr_A_orig = bufw_addr_4_reg_1472;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        bufw_Addr_A_orig = bufw_addr_3_reg_1467;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        bufw_Addr_A_orig = bufw_addr_2_reg_1462;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        bufw_Addr_A_orig = bufw_addr_1_reg_1457;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bufw_Addr_A_orig = bufw_addr_reg_1452;
    end else begin
        bufw_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state6))) begin
        bufw_EN_A = 1'b1;
    end else begin
        bufw_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state132))) begin
        grp_fu_535_p0 = reg_558;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_535_p0 = bufo_load_reg_1688;
    end else begin
        grp_fu_535_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == tmp_fu_590_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_1_reg_1443 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (tmp_3_fu_939_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd1 == tmp_5_fu_1163_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign bufi_Addr_A = bufi_Addr_A_orig << 32'd2;

assign bufi_Clk_A = ap_clk;

assign bufi_Din_A = 32'd0;

assign bufi_Rst_A = ap_rst;

assign bufi_WEN_A = 4'd0;

assign bufo_Addr_A = bufo_Addr_A_orig << 32'd2;

assign bufo_Addr_A_orig = bufo_addr_reg_1668;

assign bufo_Clk_A = ap_clk;

assign bufo_Din_A = reg_558;

assign bufo_Rst_A = ap_rst;

assign bufw_Addr_A = bufw_Addr_A_orig << 32'd2;

assign bufw_Clk_A = ap_clk;

assign bufw_Din_A = 32'd0;

assign bufw_Rst_A = ap_rst;

assign bufw_WEN_A = 4'd0;

assign col_b_1_cast_cast_fu_1175_p1 = col_b_1_reg_1682;

assign col_b_1_fu_1169_p2 = (col_b_reg_523 + 2'd1);

assign col_b_cast1_cast8_fu_1091_p1 = col_b_reg_523;

assign col_b_cast1_cast_fu_1095_p1 = col_b_reg_523;

assign col_b_cast_fu_1159_p1 = col_b_reg_523;

assign grp_fu_1387_p0 = tmp_7_cast_reg_1394;

assign grp_fu_1387_p1 = ti_b_cast3_cast_fu_602_p1;

assign grp_fu_1387_p2 = 9'd25;

assign p_shl1_cast_fu_614_p1 = tmp_33_fu_606_p3;

assign p_shl3_cast_fu_904_p3 = {{tmp_36_fu_900_p1}, {3'd0}};

assign p_shl4_cast_fu_1077_p3 = {{tmp_50_fu_1073_p1}, {3'd0}};

assign p_shl5_cast_fu_1038_p3 = {{tmp_47_fu_1029_p2}, {3'd0}};

assign p_shl6_cast_fu_1005_p3 = {{tmp_45_fu_1001_p1}, {3'd0}};

assign p_shl7_cast_fu_968_p3 = {{tmp_42_fu_964_p1}, {3'd0}};

assign p_shl_cast_fu_576_p1 = tmp_2_fu_568_p3;

assign row_b_1_fu_945_p2 = (2'd1 + row_b_reg_512);

assign row_b_cast2_cast1_fu_883_p1 = row_b_reg_512;

assign row_b_cast2_cast_fu_887_p1 = row_b_reg_512;

assign row_b_cast_fu_935_p1 = row_b_reg_512;

assign ti_b_1_fu_630_p2 = (ti_b_reg_501 + 2'd1);

assign ti_b_cast3_cast_fu_602_p1 = ti_b_reg_501;

assign tmp_10_cast_fu_645_p1 = $signed(tmp_s_fu_640_p2);

assign tmp_10_fu_650_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd2));

assign tmp_11_cast_fu_655_p1 = $signed(tmp_10_fu_650_p2);

assign tmp_11_fu_660_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd3));

assign tmp_12_cast_fu_665_p1 = $signed(tmp_11_fu_660_p2);

assign tmp_12_fu_670_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd4));

assign tmp_13_cast_fu_675_p1 = $signed(tmp_12_fu_670_p2);

assign tmp_13_fu_680_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd5));

assign tmp_14_cast_fu_685_p1 = $signed(tmp_13_fu_680_p2);

assign tmp_14_fu_690_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd6));

assign tmp_15_cast_fu_695_p1 = $signed(tmp_14_fu_690_p2);

assign tmp_15_fu_700_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd7));

assign tmp_16_cast_fu_705_p1 = $signed(tmp_15_fu_700_p2);

assign tmp_16_fu_710_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd8));

assign tmp_17_cast_fu_715_p1 = $signed(tmp_16_fu_710_p2);

assign tmp_17_fu_720_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd9));

assign tmp_18_cast_fu_725_p1 = $signed(tmp_17_fu_720_p2);

assign tmp_18_fu_730_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd10));

assign tmp_19_cast_fu_735_p1 = $signed(tmp_18_fu_730_p2);

assign tmp_19_fu_740_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd11));

assign tmp_1_fu_624_p2 = ((ti_b_reg_501 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_20_cast_fu_745_p1 = $signed(tmp_19_fu_740_p2);

assign tmp_20_fu_750_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd12));

assign tmp_21_cast_fu_755_p1 = $signed(tmp_20_fu_750_p2);

assign tmp_21_fu_760_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd13));

assign tmp_22_cast_fu_765_p1 = $signed(tmp_21_fu_760_p2);

assign tmp_22_fu_770_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd14));

assign tmp_23_cast_fu_775_p1 = $signed(tmp_22_fu_770_p2);

assign tmp_23_fu_780_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd15));

assign tmp_24_cast_fu_785_p1 = $signed(tmp_23_fu_780_p2);

assign tmp_24_fu_790_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd16));

assign tmp_25_cast_fu_795_p1 = $signed(tmp_24_fu_790_p2);

assign tmp_25_fu_800_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd17));

assign tmp_26_cast_fu_805_p1 = $signed(tmp_25_fu_800_p2);

assign tmp_26_fu_810_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd18));

assign tmp_27_cast_fu_815_p1 = $signed(tmp_26_fu_810_p2);

assign tmp_27_fu_820_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd19));

assign tmp_28_cast_fu_825_p1 = $signed(tmp_27_fu_820_p2);

assign tmp_28_fu_830_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd20));

assign tmp_29_cast_fu_835_p1 = $signed(tmp_28_fu_830_p2);

assign tmp_29_fu_840_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd21));

assign tmp_2_0_2_cast_cast_fu_1193_p1 = tmp_2_0_2_fu_1188_p2;

assign tmp_2_0_2_fu_1188_p2 = (col_b_cast_reg_1673 + 3'd2);

assign tmp_2_0_3_cast_cast_fu_1212_p1 = tmp_2_0_3_fu_1207_p2;

assign tmp_2_0_3_fu_1207_p2 = (col_b_cast_reg_1673 + 3'd3);

assign tmp_2_0_4_cast_cast_fu_1234_p1 = tmp_2_0_s_fu_1226_p3;

assign tmp_2_0_s_fu_1226_p3 = {{1'd1}, {col_b_reg_523}};

assign tmp_2_fu_568_p3 = {{to_b_reg_490}, {2'd0}};

assign tmp_30_cast_fu_845_p1 = $signed(tmp_29_fu_840_p2);

assign tmp_30_fu_850_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd22));

assign tmp_31_cast_fu_855_p1 = $signed(tmp_30_fu_850_p2);

assign tmp_31_fu_860_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd23));

assign tmp_32_cast_fu_865_p1 = $signed(tmp_31_fu_860_p2);

assign tmp_32_fu_870_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd24));

assign tmp_33_cast_fu_875_p1 = $signed(tmp_32_fu_870_p2);

assign tmp_33_fu_606_p3 = {{ti_b_reg_501}, {3'd0}};

assign tmp_34_fu_618_p2 = (p_shl1_cast_fu_614_p1 - ti_b_cast3_cast_fu_602_p1);

assign tmp_35_cast_fu_880_p1 = $signed(tmp_34_reg_1437);

assign tmp_35_fu_891_p2 = ($signed(row_b_cast2_cast_fu_887_p1) + $signed(tmp_35_cast_reg_1577));

assign tmp_36_cast_fu_896_p1 = $signed(tmp_35_fu_891_p2);

assign tmp_36_fu_900_p1 = tmp_35_fu_891_p2[5:0];

assign tmp_37_fu_912_p2 = ($signed(p_shl3_cast_fu_904_p3) - $signed(tmp_36_cast_fu_896_p1));

assign tmp_38_fu_918_p2 = ($signed(row_b_cast2_cast1_fu_883_p1) + $signed(tmp_7_cast_reg_1394));

assign tmp_39_fu_923_p2 = tmp_38_fu_918_p2 << 6'd2;

assign tmp_3_fu_939_p2 = ((row_b_reg_512 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_40_fu_929_p2 = (tmp_39_fu_923_p2 - tmp_38_fu_918_p2);

assign tmp_41_fu_955_p2 = ($signed(tmp_9_1_cast_cast_fu_951_p1) + $signed(tmp_35_cast_reg_1577));

assign tmp_42_cast_fu_960_p1 = $signed(tmp_41_fu_955_p2);

assign tmp_42_fu_964_p1 = tmp_41_fu_955_p2[5:0];

assign tmp_43_fu_976_p2 = ($signed(p_shl7_cast_fu_968_p3) - $signed(tmp_42_cast_fu_960_p1));

assign tmp_44_fu_992_p2 = ($signed(tmp_9_2_cast_cast_fu_988_p1) + $signed(tmp_35_cast_reg_1577));

assign tmp_45_cast_fu_997_p1 = $signed(tmp_44_fu_992_p2);

assign tmp_45_fu_1001_p1 = tmp_44_fu_992_p2[5:0];

assign tmp_46_fu_1013_p2 = ($signed(p_shl6_cast_fu_1005_p3) - $signed(tmp_45_cast_fu_997_p1));

assign tmp_47_fu_1029_p2 = (tmp_9_3_cast_cast_fu_1025_p1 + tmp_34_reg_1437);

assign tmp_48_cast_fu_1034_p1 = tmp_47_fu_1029_p2;

assign tmp_48_fu_1046_p2 = (p_shl5_cast_fu_1038_p3 - tmp_48_cast_fu_1034_p1);

assign tmp_49_fu_1064_p2 = ($signed(tmp_9_4_cast_cast_fu_1060_p1) + $signed(tmp_35_cast_reg_1577));

assign tmp_50_fu_1073_p1 = tmp_49_fu_1064_p2[5:0];

assign tmp_51_cast_fu_1069_p1 = $signed(tmp_49_fu_1064_p2);

assign tmp_51_fu_1085_p2 = ($signed(p_shl4_cast_fu_1077_p3) - $signed(tmp_51_cast_fu_1069_p1));

assign tmp_52_fu_1099_p2 = (tmp_37_reg_1585 + col_b_cast1_cast_fu_1095_p1);

assign tmp_53_fu_1109_p2 = (tmp_43_reg_1607 + col_b_cast1_cast_fu_1095_p1);

assign tmp_54_cast_fu_1104_p1 = tmp_52_fu_1099_p2;

assign tmp_54_fu_1119_p2 = (tmp_46_reg_1616 + col_b_cast1_cast_fu_1095_p1);

assign tmp_55_cast_fu_1114_p1 = tmp_53_fu_1109_p2;

assign tmp_55_fu_1129_p2 = (tmp_48_reg_1625 + col_b_cast1_cast_fu_1095_p1);

assign tmp_56_cast_fu_1124_p1 = tmp_54_fu_1119_p2;

assign tmp_56_fu_1139_p2 = (tmp_51_reg_1634 + col_b_cast1_cast_fu_1095_p1);

assign tmp_57_cast_fu_1134_p1 = tmp_55_fu_1129_p2;

assign tmp_57_fu_1149_p2 = (tmp_40_reg_1594 + col_b_cast1_cast8_fu_1091_p1);

assign tmp_58_cast_fu_1144_p1 = tmp_56_fu_1139_p2;

assign tmp_58_fu_1178_p2 = (tmp_37_reg_1585 + col_b_1_cast_cast_fu_1175_p1);

assign tmp_59_cast_fu_1154_p1 = tmp_57_fu_1149_p2;

assign tmp_59_fu_1248_p2 = (tmp_43_reg_1607 + col_b_1_cast_cast_reg_1693);

assign tmp_5_fu_1163_p2 = ((col_b_reg_523 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_60_cast_fu_1183_p1 = tmp_58_fu_1178_p2;

assign tmp_60_fu_1284_p2 = (tmp_46_reg_1616 + col_b_1_cast_cast_reg_1693);

assign tmp_61_cast_fu_1252_p1 = tmp_59_fu_1248_p2;

assign tmp_61_fu_1320_p2 = (tmp_48_reg_1625 + col_b_1_cast_cast_reg_1693);

assign tmp_62_cast_fu_1288_p1 = tmp_60_fu_1284_p2;

assign tmp_62_fu_1338_p2 = (tmp_51_reg_1634 + col_b_1_cast_cast_reg_1693);

assign tmp_63_cast_fu_1324_p1 = tmp_61_fu_1320_p2;

assign tmp_63_fu_1197_p2 = (tmp_37_reg_1585 + tmp_2_0_2_cast_cast_fu_1193_p1);

assign tmp_64_cast_fu_1371_p1 = tmp_62_reg_1795;

assign tmp_64_fu_1257_p2 = (tmp_43_reg_1607 + tmp_2_0_2_cast_cast_reg_1706);

assign tmp_65_cast_fu_1202_p1 = tmp_63_fu_1197_p2;

assign tmp_65_fu_1293_p2 = (tmp_46_reg_1616 + tmp_2_0_2_cast_cast_reg_1706);

assign tmp_66_cast_fu_1261_p1 = tmp_64_fu_1257_p2;

assign tmp_66_fu_1329_p2 = (tmp_48_reg_1625 + tmp_2_0_2_cast_cast_reg_1706);

assign tmp_67_cast_fu_1297_p1 = tmp_65_fu_1293_p2;

assign tmp_67_fu_1342_p2 = (tmp_51_reg_1634 + tmp_2_0_2_cast_cast_reg_1706);

assign tmp_68_cast_fu_1333_p1 = tmp_66_fu_1329_p2;

assign tmp_68_fu_1216_p2 = (tmp_37_reg_1585 + tmp_2_0_3_cast_cast_fu_1212_p1);

assign tmp_69_cast_fu_1375_p1 = tmp_67_reg_1800;

assign tmp_69_fu_1266_p2 = (tmp_43_reg_1607 + tmp_2_0_3_cast_cast_reg_1719);

assign tmp_70_cast_fu_1221_p1 = tmp_68_fu_1216_p2;

assign tmp_70_fu_1302_p2 = (tmp_46_reg_1616 + tmp_2_0_3_cast_cast_reg_1719);

assign tmp_71_cast_fu_1270_p1 = tmp_69_fu_1266_p2;

assign tmp_71_fu_1346_p2 = (tmp_48_reg_1625 + tmp_2_0_3_cast_cast_reg_1719);

assign tmp_72_cast_fu_1306_p1 = tmp_70_fu_1302_p2;

assign tmp_72_fu_1355_p2 = (tmp_51_reg_1634 + tmp_2_0_3_cast_cast_reg_1719);

assign tmp_73_cast_fu_1350_p1 = tmp_71_fu_1346_p2;

assign tmp_73_fu_1238_p2 = (tmp_37_reg_1585 + tmp_2_0_4_cast_cast_fu_1234_p1);

assign tmp_74_cast_fu_1379_p1 = tmp_72_reg_1810;

assign tmp_74_fu_1275_p2 = (tmp_43_reg_1607 + tmp_2_0_4_cast_cast_reg_1732);

assign tmp_75_cast_fu_1243_p1 = tmp_73_fu_1238_p2;

assign tmp_75_fu_1311_p2 = (tmp_46_reg_1616 + tmp_2_0_4_cast_cast_reg_1732);

assign tmp_76_cast_fu_1279_p1 = tmp_74_fu_1275_p2;

assign tmp_76_fu_1359_p2 = (tmp_48_reg_1625 + tmp_2_0_4_cast_cast_reg_1732);

assign tmp_77_cast_fu_1315_p1 = tmp_75_fu_1311_p2;

assign tmp_77_fu_1363_p2 = (tmp_51_reg_1634 + tmp_2_0_4_cast_cast_reg_1732);

assign tmp_78_cast_fu_1367_p1 = tmp_76_reg_1815;

assign tmp_79_cast_fu_1383_p1 = tmp_77_reg_1820;

assign tmp_7_cast_fu_586_p1 = $signed(tmp_7_fu_580_p2);

assign tmp_7_fu_580_p2 = (p_shl_cast_fu_576_p1 - to_b_cast4_cast_fu_564_p1);

assign tmp_9_1_cast_cast_fu_951_p1 = row_b_1_fu_945_p2;

assign tmp_9_2_cast_cast_fu_988_p1 = tmp_9_2_fu_982_p2;

assign tmp_9_2_fu_982_p2 = (3'd2 + row_b_cast_fu_935_p1);

assign tmp_9_3_cast_cast_fu_1025_p1 = tmp_9_3_fu_1019_p2;

assign tmp_9_3_fu_1019_p2 = (3'd3 + row_b_cast_fu_935_p1);

assign tmp_9_4_cast_cast_fu_1060_p1 = tmp_9_s_fu_1052_p3;

assign tmp_9_cast_fu_636_p1 = tmp_9_reg_1408;

assign tmp_9_s_fu_1052_p3 = {{1'd1}, {row_b_reg_512}};

assign tmp_fu_590_p2 = ((to_b_reg_490 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_s_fu_640_p2 = ($signed(tmp_9_reg_1408) + $signed(9'd1));

assign to_b_1_fu_596_p2 = (to_b_reg_490 + 2'd1);

assign to_b_cast4_cast_fu_564_p1 = to_b_reg_490;

always @ (posedge ap_clk) begin
    col_b_cast_reg_1673[2] <= 1'b0;
    col_b_1_cast_cast_reg_1693[8:2] <= 7'b0000000;
    tmp_2_0_2_cast_cast_reg_1706[8:3] <= 6'b000000;
    tmp_2_0_3_cast_cast_reg_1719[8:3] <= 6'b000000;
    tmp_2_0_4_cast_cast_reg_1732[8:2] <= 7'b0000001;
end

endmodule //convolve_kernel
