// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="convolve_kernel,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.210000,HLS_SYN_LAT=499,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=27,HLS_SYN_FF=5120,HLS_SYN_LUT=5362}" *)

module convolve_kernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bufw_Addr_A,
        bufw_EN_A,
        bufw_WEN_A,
        bufw_Din_A,
        bufw_Dout_A,
        bufw_Clk_A,
        bufw_Rst_A,
        bufw_Addr_B,
        bufw_EN_B,
        bufw_WEN_B,
        bufw_Din_B,
        bufw_Dout_B,
        bufw_Clk_B,
        bufw_Rst_B,
        bufi_Addr_A,
        bufi_EN_A,
        bufi_WEN_A,
        bufi_Din_A,
        bufi_Dout_A,
        bufi_Clk_A,
        bufi_Rst_A,
        bufo_0_Addr_A,
        bufo_0_EN_A,
        bufo_0_WEN_A,
        bufo_0_Din_A,
        bufo_0_Dout_A,
        bufo_0_Clk_A,
        bufo_0_Rst_A,
        bufo_1_Addr_A,
        bufo_1_EN_A,
        bufo_1_WEN_A,
        bufo_1_Din_A,
        bufo_1_Dout_A,
        bufo_1_Clk_A,
        bufo_1_Rst_A,
        bufo_2_Addr_A,
        bufo_2_EN_A,
        bufo_2_WEN_A,
        bufo_2_Din_A,
        bufo_2_Dout_A,
        bufo_2_Clk_A,
        bufo_2_Rst_A
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state52 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] bufw_Addr_A;
output   bufw_EN_A;
output  [15:0] bufw_WEN_A;
output  [127:0] bufw_Din_A;
input  [127:0] bufw_Dout_A;
output   bufw_Clk_A;
output   bufw_Rst_A;
output  [31:0] bufw_Addr_B;
output   bufw_EN_B;
output  [15:0] bufw_WEN_B;
output  [127:0] bufw_Din_B;
input  [127:0] bufw_Dout_B;
output   bufw_Clk_B;
output   bufw_Rst_B;
output  [31:0] bufi_Addr_A;
output   bufi_EN_A;
output  [15:0] bufi_WEN_A;
output  [127:0] bufi_Din_A;
input  [127:0] bufi_Dout_A;
output   bufi_Clk_A;
output   bufi_Rst_A;
output  [31:0] bufo_0_Addr_A;
output   bufo_0_EN_A;
output  [3:0] bufo_0_WEN_A;
output  [31:0] bufo_0_Din_A;
input  [31:0] bufo_0_Dout_A;
output   bufo_0_Clk_A;
output   bufo_0_Rst_A;
output  [31:0] bufo_1_Addr_A;
output   bufo_1_EN_A;
output  [3:0] bufo_1_WEN_A;
output  [31:0] bufo_1_Din_A;
input  [31:0] bufo_1_Dout_A;
output   bufo_1_Clk_A;
output   bufo_1_Rst_A;
output  [31:0] bufo_2_Addr_A;
output   bufo_2_EN_A;
output  [3:0] bufo_2_WEN_A;
output  [31:0] bufo_2_Din_A;
input  [31:0] bufo_2_Dout_A;
output   bufo_2_Clk_A;
output   bufo_2_Rst_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bufw_EN_A;
reg bufw_EN_B;
reg bufi_EN_A;
reg bufo_0_EN_A;
reg[3:0] bufo_0_WEN_A;
reg bufo_1_EN_A;
reg[3:0] bufo_1_WEN_A;
reg bufo_2_EN_A;
reg[3:0] bufo_2_WEN_A;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] indvar_flatten1_reg_179;
reg   [6:0] indvar_flatten2_reg_190;
reg   [3:0] indvar_flatten_reg_201;
reg   [2:0] p_s_reg_212;
reg   [2:0] p_1_reg_224;
reg   [1:0] p_3_reg_235;
reg   [1:0] p_2_reg_247;
wire   [0:0] exitcond_flatten2_fu_325_p2;
reg   [0:0] exitcond_flatten2_reg_769;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_state14_pp0_stage0_iter6;
wire    ap_block_state16_pp0_stage0_iter7;
wire    ap_block_state18_pp0_stage0_iter8;
wire    ap_block_state20_pp0_stage0_iter9;
wire    ap_block_state22_pp0_stage0_iter10;
wire    ap_block_state24_pp0_stage0_iter11;
wire    ap_block_state26_pp0_stage0_iter12;
wire    ap_block_state28_pp0_stage0_iter13;
wire    ap_block_state30_pp0_stage0_iter14;
wire    ap_block_state32_pp0_stage0_iter15;
wire    ap_block_state34_pp0_stage0_iter16;
wire    ap_block_state36_pp0_stage0_iter17;
wire    ap_block_state38_pp0_stage0_iter18;
wire    ap_block_state40_pp0_stage0_iter19;
wire    ap_block_state42_pp0_stage0_iter20;
wire    ap_block_state44_pp0_stage0_iter21;
wire    ap_block_state46_pp0_stage0_iter22;
wire    ap_block_state48_pp0_stage0_iter23;
wire    ap_block_state50_pp0_stage0_iter24;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter9_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter10_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter11_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter12_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter13_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter14_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter15_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter16_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter17_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter18_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter19_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter20_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter21_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter22_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter23_exitcond_flatten2_reg_769;
reg   [0:0] ap_reg_pp0_iter24_exitcond_flatten2_reg_769;
wire   [7:0] indvar_flatten_next2_fu_331_p2;
reg   [7:0] indvar_flatten_next2_reg_773;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_337_p2;
reg   [0:0] exitcond_flatten_reg_778;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_778;
wire   [6:0] indvar_flatten22_op_fu_343_p2;
reg   [6:0] indvar_flatten22_op_reg_790;
wire   [0:0] not_exitcond_flatten_fu_349_p2;
reg   [0:0] not_exitcond_flatten_reg_795;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
wire    ap_block_state9_pp0_stage1_iter3;
wire    ap_block_state11_pp0_stage1_iter4;
wire    ap_block_state13_pp0_stage1_iter5;
wire    ap_block_state15_pp0_stage1_iter6;
wire    ap_block_state17_pp0_stage1_iter7;
wire    ap_block_state19_pp0_stage1_iter8;
wire    ap_block_state21_pp0_stage1_iter9;
wire    ap_block_state23_pp0_stage1_iter10;
wire    ap_block_state25_pp0_stage1_iter11;
wire    ap_block_state27_pp0_stage1_iter12;
wire    ap_block_state29_pp0_stage1_iter13;
wire    ap_block_state31_pp0_stage1_iter14;
wire    ap_block_state33_pp0_stage1_iter15;
wire    ap_block_state35_pp0_stage1_iter16;
wire    ap_block_state37_pp0_stage1_iter17;
wire    ap_block_state39_pp0_stage1_iter18;
wire    ap_block_state41_pp0_stage1_iter19;
wire    ap_block_state43_pp0_stage1_iter20;
wire    ap_block_state45_pp0_stage1_iter21;
wire    ap_block_state47_pp0_stage1_iter22;
wire    ap_block_state49_pp0_stage1_iter23;
wire    ap_block_state51_pp0_stage1_iter24;
wire    ap_block_pp0_stage1_flag00011001;
wire   [0:0] exitcond_flatten1_fu_354_p2;
reg   [0:0] exitcond_flatten1_reg_801;
wire   [3:0] indvar_flatten_op_fu_360_p2;
reg   [3:0] indvar_flatten_op_reg_807;
wire   [6:0] indvar_flatten_next1_fu_366_p3;
reg   [6:0] indvar_flatten_next1_reg_812;
wire   [2:0] i_V_fu_372_p2;
reg   [2:0] i_V_reg_817;
wire   [2:0] p_1_mid_fu_378_p3;
reg   [2:0] p_1_mid_reg_822;
wire   [2:0] tmp_1_mid2_fu_385_p3;
reg   [2:0] tmp_1_mid2_reg_828;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] exitcond_flatten_mid_fu_403_p2;
reg   [0:0] exitcond_flatten_mid_reg_837;
wire   [0:0] tmp_1_fu_407_p2;
reg   [0:0] tmp_1_reg_844;
wire   [0:0] tmp_9_mid1_fu_422_p2;
reg   [0:0] tmp_9_mid1_reg_849;
wire   [3:0] indvar_flatten_next_fu_428_p3;
reg   [3:0] indvar_flatten_next_reg_856;
wire   [7:0] tmp_2_fu_459_p2;
reg   [7:0] tmp_2_reg_861;
wire   [1:0] p_2_mid_fu_476_p3;
reg   [1:0] p_2_mid_reg_868;
wire   [2:0] tmp_4_mid2_fu_483_p3;
reg   [2:0] tmp_4_mid2_reg_873;
wire   [2:0] tmp_8_cast_mid4_fu_489_p3;
reg   [2:0] tmp_8_cast_mid4_reg_880;
wire   [1:0] row_b_V_fu_495_p2;
reg   [1:0] row_b_V_reg_885;
wire   [1:0] p_3_mid2_fu_510_p3;
reg   [1:0] p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter2_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter3_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter4_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter5_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter6_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter7_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter8_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter9_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter10_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter11_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter12_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter13_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter14_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter15_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter16_p_3_mid2_reg_891;
reg   [1:0] ap_reg_pp0_iter17_p_3_mid2_reg_891;
wire   [1:0] col_b_V_fu_518_p2;
reg   [1:0] col_b_V_reg_897;
wire   [7:0] tmp_4_mid2_cast_fu_529_p1;
reg   [7:0] tmp_4_mid2_cast_reg_902;
wire   [7:0] tmp_9_fu_532_p2;
reg   [7:0] tmp_9_reg_908;
wire   [1:0] tmp_7_mid2_fu_538_p3;
reg   [1:0] tmp_7_mid2_reg_913;
reg    ap_enable_reg_pp0_iter2;
reg   [1:0] ap_reg_pp0_iter3_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter4_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter5_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter6_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter7_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter8_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter9_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter10_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter11_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter12_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter13_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter14_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter15_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter16_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter17_tmp_7_mid2_reg_913;
reg   [1:0] ap_reg_pp0_iter18_tmp_7_mid2_reg_913;
wire   [2:0] tmp_8_cast_mid2_fu_551_p3;
reg   [2:0] tmp_8_cast_mid2_reg_920;
wire   [7:0] tmp_4_fu_562_p2;
reg   [7:0] tmp_4_reg_926;
wire   [7:0] tmp_7_fu_566_p2;
reg   [7:0] tmp_7_reg_931;
wire   [6:0] tmp_40_fu_607_p2;
reg   [6:0] tmp_40_reg_941;
wire   [31:0] tmp_44_fu_625_p1;
reg   [31:0] tmp_44_reg_961;
reg   [31:0] tmp_33_reg_966;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] ap_reg_pp0_iter4_tmp_33_reg_966;
reg   [31:0] tmp_35_reg_971;
reg   [31:0] ap_reg_pp0_iter4_tmp_35_reg_971;
wire   [31:0] tmp_41_fu_629_p1;
reg   [31:0] tmp_41_reg_976;
wire   [31:0] tmp_42_fu_633_p1;
reg   [31:0] tmp_42_reg_981;
reg   [31:0] tmp_17_reg_986;
reg   [31:0] tmp_19_reg_991;
reg   [31:0] tmp_21_reg_996;
reg   [31:0] tmp_23_reg_1001;
wire   [31:0] tmp_43_fu_657_p1;
reg   [31:0] tmp_43_reg_1006;
reg   [31:0] tmp_27_reg_1011;
reg   [31:0] tmp_29_reg_1016;
wire   [31:0] tmp_14_fu_681_p1;
wire   [31:0] tmp_16_fu_685_p1;
wire   [31:0] tmp_18_fu_691_p1;
wire   [31:0] tmp_20_fu_695_p1;
reg   [31:0] tmp_20_reg_1038;
wire   [31:0] tmp_26_fu_700_p1;
wire   [31:0] tmp_28_fu_704_p1;
wire   [31:0] tmp_22_fu_712_p1;
wire   [31:0] tmp_24_fu_716_p1;
wire   [31:0] tmp_30_fu_722_p1;
wire   [31:0] tmp_34_fu_726_p1;
wire   [31:0] tmp_36_fu_730_p1;
wire   [31:0] grp_fu_285_p2;
reg   [31:0] tmp_38_reg_1087;
reg    ap_enable_reg_pp0_iter6;
wire   [31:0] grp_fu_289_p2;
reg   [31:0] tmp_14_0_1_reg_1092;
reg   [31:0] ap_reg_pp0_iter7_tmp_14_0_1_reg_1092;
reg   [31:0] ap_reg_pp0_iter8_tmp_14_0_1_reg_1092;
reg   [31:0] ap_reg_pp0_iter9_tmp_14_0_1_reg_1092;
reg   [31:0] ap_reg_pp0_iter10_tmp_14_0_1_reg_1092;
wire   [31:0] grp_fu_293_p2;
reg   [31:0] tmp_14_1_reg_1097;
wire   [31:0] grp_fu_297_p2;
reg   [31:0] tmp_14_1_1_reg_1102;
reg   [31:0] ap_reg_pp0_iter7_tmp_14_1_1_reg_1102;
reg   [31:0] ap_reg_pp0_iter8_tmp_14_1_1_reg_1102;
reg   [31:0] ap_reg_pp0_iter9_tmp_14_1_1_reg_1102;
reg   [31:0] ap_reg_pp0_iter10_tmp_14_1_1_reg_1102;
wire   [31:0] grp_fu_301_p2;
reg   [31:0] tmp_14_2_reg_1107;
reg   [31:0] tmp_14_0_2_reg_1112;
reg   [31:0] ap_reg_pp0_iter7_tmp_14_0_2_reg_1112;
reg   [31:0] ap_reg_pp0_iter8_tmp_14_0_2_reg_1112;
reg   [31:0] ap_reg_pp0_iter9_tmp_14_0_2_reg_1112;
reg   [31:0] ap_reg_pp0_iter10_tmp_14_0_2_reg_1112;
reg   [31:0] ap_reg_pp0_iter11_tmp_14_0_2_reg_1112;
reg   [31:0] ap_reg_pp0_iter12_tmp_14_0_2_reg_1112;
reg   [31:0] ap_reg_pp0_iter13_tmp_14_0_2_reg_1112;
reg   [31:0] ap_reg_pp0_iter14_tmp_14_0_2_reg_1112;
reg   [31:0] tmp_14_1_2_reg_1117;
reg   [31:0] ap_reg_pp0_iter7_tmp_14_1_2_reg_1117;
reg   [31:0] ap_reg_pp0_iter8_tmp_14_1_2_reg_1117;
reg   [31:0] ap_reg_pp0_iter9_tmp_14_1_2_reg_1117;
reg   [31:0] ap_reg_pp0_iter10_tmp_14_1_2_reg_1117;
reg   [31:0] ap_reg_pp0_iter11_tmp_14_1_2_reg_1117;
reg   [31:0] ap_reg_pp0_iter12_tmp_14_1_2_reg_1117;
reg   [31:0] ap_reg_pp0_iter13_tmp_14_1_2_reg_1117;
reg   [31:0] ap_reg_pp0_iter14_tmp_14_1_2_reg_1117;
reg   [31:0] tmp_14_2_1_reg_1122;
reg   [31:0] ap_reg_pp0_iter7_tmp_14_2_1_reg_1122;
reg   [31:0] ap_reg_pp0_iter8_tmp_14_2_1_reg_1122;
reg   [31:0] ap_reg_pp0_iter9_tmp_14_2_1_reg_1122;
reg   [31:0] ap_reg_pp0_iter10_tmp_14_2_1_reg_1122;
reg   [31:0] tmp_14_2_2_reg_1127;
reg   [31:0] ap_reg_pp0_iter7_tmp_14_2_2_reg_1127;
reg   [31:0] ap_reg_pp0_iter8_tmp_14_2_2_reg_1127;
reg   [31:0] ap_reg_pp0_iter9_tmp_14_2_2_reg_1127;
reg   [31:0] ap_reg_pp0_iter10_tmp_14_2_2_reg_1127;
reg   [31:0] ap_reg_pp0_iter11_tmp_14_2_2_reg_1127;
reg   [31:0] ap_reg_pp0_iter12_tmp_14_2_2_reg_1127;
reg   [31:0] ap_reg_pp0_iter13_tmp_14_2_2_reg_1127;
reg   [31:0] ap_reg_pp0_iter14_tmp_14_2_2_reg_1127;
wire   [31:0] grp_fu_258_p2;
reg   [31:0] temp_1_reg_1132;
reg    ap_enable_reg_pp0_iter10;
wire   [31:0] grp_fu_263_p2;
reg   [31:0] temp_1_1_reg_1137;
wire   [31:0] grp_fu_268_p2;
reg   [31:0] temp_1_2_reg_1142;
reg   [31:0] temp_1_0_1_reg_1147;
reg    ap_enable_reg_pp0_iter15;
reg   [31:0] temp_1_1_1_reg_1152;
reg   [31:0] temp_1_2_1_reg_1157;
wire   [4:0] tmp_39_fu_757_p2;
reg   [4:0] tmp_39_reg_1162;
reg   [3:0] bufo_0_addr_reg_1167;
reg   [3:0] ap_reg_pp0_iter20_bufo_0_addr_reg_1167;
reg   [3:0] ap_reg_pp0_iter21_bufo_0_addr_reg_1167;
reg   [3:0] ap_reg_pp0_iter22_bufo_0_addr_reg_1167;
reg   [3:0] ap_reg_pp0_iter23_bufo_0_addr_reg_1167;
reg   [3:0] ap_reg_pp0_iter24_bufo_0_addr_reg_1167;
reg   [3:0] bufo_1_addr_reg_1172;
reg   [3:0] ap_reg_pp0_iter20_bufo_1_addr_reg_1172;
reg   [3:0] ap_reg_pp0_iter21_bufo_1_addr_reg_1172;
reg   [3:0] ap_reg_pp0_iter22_bufo_1_addr_reg_1172;
reg   [3:0] ap_reg_pp0_iter23_bufo_1_addr_reg_1172;
reg   [3:0] ap_reg_pp0_iter24_bufo_1_addr_reg_1172;
reg   [3:0] bufo_2_addr_reg_1177;
reg   [3:0] ap_reg_pp0_iter20_bufo_2_addr_reg_1177;
reg   [3:0] ap_reg_pp0_iter21_bufo_2_addr_reg_1177;
reg   [3:0] ap_reg_pp0_iter22_bufo_2_addr_reg_1177;
reg   [3:0] ap_reg_pp0_iter23_bufo_2_addr_reg_1177;
reg   [3:0] ap_reg_pp0_iter24_bufo_2_addr_reg_1177;
wire   [31:0] grp_fu_273_p2;
reg   [31:0] temp_1_0_2_reg_1182;
reg    ap_enable_reg_pp0_iter19;
reg   [31:0] bufo_0_load_reg_1187;
wire   [31:0] grp_fu_277_p2;
reg   [31:0] temp_1_1_2_reg_1192;
reg   [31:0] bufo_1_load_reg_1197;
wire   [31:0] grp_fu_281_p2;
reg   [31:0] temp_1_2_2_reg_1202;
reg   [31:0] bufo_2_load_reg_1207;
reg   [31:0] tmp_37_reg_1212;
reg    ap_enable_reg_pp0_iter24;
reg   [31:0] tmp_12_1_reg_1217;
reg   [31:0] tmp_12_2_reg_1222;
wire    ap_block_pp0_stage1_flag00011011;
reg    ap_condition_pp0_exit_iter1_state5;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg   [7:0] indvar_flatten1_phi_fu_183_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [6:0] indvar_flatten2_phi_fu_194_p4;
reg   [3:0] indvar_flatten_phi_fu_205_p4;
wire    ap_block_pp0_stage1_flag00000000;
reg   [2:0] p_s_phi_fu_216_p4;
reg   [2:0] p_1_phi_fu_228_p4;
reg   [1:0] p_3_phi_fu_239_p4;
reg   [1:0] p_2_phi_fu_251_p4;
wire   [31:0] tmp_40_cast_fu_571_p1;
wire   [31:0] tmp_11_cast_fu_613_p1;
wire   [31:0] tmp_39_cast_fu_617_p1;
wire   [31:0] tmp_48_cast_fu_621_p1;
wire   [31:0] tmp_47_cast_fu_763_p1;
reg   [31:0] bufw_Addr_A_orig;
reg   [31:0] bufo_0_Addr_A_orig;
reg   [31:0] bufo_1_Addr_A_orig;
reg   [31:0] bufo_2_Addr_A_orig;
reg   [31:0] grp_fu_258_p0;
reg   [31:0] grp_fu_258_p1;
reg   [31:0] grp_fu_263_p0;
reg   [31:0] grp_fu_263_p1;
reg   [31:0] grp_fu_268_p0;
reg   [31:0] grp_fu_268_p1;
reg   [31:0] grp_fu_273_p0;
reg   [31:0] grp_fu_273_p1;
reg   [31:0] grp_fu_277_p0;
reg   [31:0] grp_fu_277_p1;
reg   [31:0] grp_fu_281_p0;
reg   [31:0] grp_fu_281_p1;
reg   [31:0] grp_fu_285_p0;
reg   [31:0] grp_fu_285_p1;
reg   [31:0] grp_fu_289_p0;
reg   [31:0] grp_fu_289_p1;
reg   [31:0] grp_fu_293_p0;
reg   [31:0] grp_fu_293_p1;
reg   [31:0] grp_fu_297_p0;
reg   [31:0] grp_fu_297_p1;
wire   [31:0] grp_fu_301_p0;
wire   [31:0] grp_fu_301_p1;
wire   [95:0] grp_fu_305_p1;
wire   [95:0] grp_fu_315_p1;
wire   [0:0] tmp_s_fu_392_p2;
wire   [0:0] exitcond_flatten_not_fu_412_p2;
wire   [0:0] tmp_9_mid_fu_398_p2;
wire   [0:0] not_exitcond_flatten_1_fu_417_p2;
wire   [2:0] tmp_7_cast_fu_435_p1;
wire   [4:0] tmp_fu_448_p3;
wire   [7:0] tmp_1_mid2_cast_fu_445_p1;
wire   [7:0] p_shl3_cast_fu_455_p1;
wire   [2:0] tmp_8_fu_439_p2;
wire   [2:0] j_V_fu_471_p2;
wire   [2:0] tmp_8_cast_mid_fu_465_p3;
wire   [0:0] tmp_10_fu_501_p2;
wire   [0:0] tmp_11_fu_505_p2;
wire   [7:0] tmp_6_fu_524_p2;
wire   [2:0] tmp_7_cast_mid1_fu_543_p1;
wire   [2:0] tmp_8_mid1_fu_546_p2;
wire   [7:0] tmp_5_fu_557_p2;
wire   [5:0] tmp_25_fu_578_p3;
wire   [6:0] p_shl_cast_fu_585_p1;
wire   [6:0] tmp_8_cast_mid2_cast_fu_575_p1;
wire   [2:0] tmp_cast_fu_595_p1;
wire   [2:0] tmp_3_fu_598_p2;
wire   [6:0] tmp_31_fu_589_p2;
wire   [6:0] tmp_3_cast_cast_fu_603_p1;
wire   [95:0] tmp_44_fu_625_p0;
wire   [95:0] tmp_41_fu_629_p0;
wire   [95:0] tmp_42_fu_633_p0;
wire   [95:0] tmp_19_fu_637_p1;
wire   [95:0] tmp_23_fu_647_p1;
wire   [95:0] tmp_43_fu_657_p0;
wire   [95:0] tmp_27_fu_661_p1;
wire   [95:0] tmp_29_fu_671_p1;
wire   [3:0] tmp_13_fu_737_p3;
wire   [4:0] p_shl2_cast_fu_744_p1;
wire   [4:0] tmp_7_mid2_cast_fu_734_p1;
wire   [4:0] tmp_15_fu_748_p2;
wire   [4:0] tmp_cast1_fu_754_p1;
wire    ap_CS_fsm_state52;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
end

convolve_kernel_fbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fbkb_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_258_p0),
    .din1(grp_fu_258_p1),
    .ce(1'b1),
    .dout(grp_fu_258_p2)
);

convolve_kernel_fbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_263_p0),
    .din1(grp_fu_263_p1),
    .ce(1'b1),
    .dout(grp_fu_263_p2)
);

convolve_kernel_fbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_268_p0),
    .din1(grp_fu_268_p1),
    .ce(1'b1),
    .dout(grp_fu_268_p2)
);

convolve_kernel_fbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fbkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_273_p0),
    .din1(grp_fu_273_p1),
    .ce(1'b1),
    .dout(grp_fu_273_p2)
);

convolve_kernel_fbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fbkb_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_277_p0),
    .din1(grp_fu_277_p1),
    .ce(1'b1),
    .dout(grp_fu_277_p2)
);

convolve_kernel_fbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fbkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_281_p0),
    .din1(grp_fu_281_p1),
    .ce(1'b1),
    .dout(grp_fu_281_p2)
);

convolve_kernel_fcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fcud_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_285_p0),
    .din1(grp_fu_285_p1),
    .ce(1'b1),
    .dout(grp_fu_285_p2)
);

convolve_kernel_fcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fcud_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_289_p0),
    .din1(grp_fu_289_p1),
    .ce(1'b1),
    .dout(grp_fu_289_p2)
);

convolve_kernel_fcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fcud_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_293_p0),
    .din1(grp_fu_293_p1),
    .ce(1'b1),
    .dout(grp_fu_293_p2)
);

convolve_kernel_fcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fcud_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_297_p0),
    .din1(grp_fu_297_p1),
    .ce(1'b1),
    .dout(grp_fu_297_p2)
);

convolve_kernel_fcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
convolve_kernel_fcud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_301_p0),
    .din1(grp_fu_301_p1),
    .ce(1'b1),
    .dout(grp_fu_301_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0) & (exitcond_flatten2_reg_769 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state5)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter24 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten1_reg_179 <= indvar_flatten_next2_reg_773;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten1_reg_179 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten2_reg_190 <= indvar_flatten_next1_reg_812;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten2_reg_190 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0))) begin
        indvar_flatten_reg_201 <= indvar_flatten_next_reg_856;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_201 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        p_1_reg_224 <= tmp_4_mid2_reg_873;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_1_reg_224 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter2_exitcond_flatten2_reg_769 == 1'd0))) begin
        p_2_reg_247 <= tmp_7_mid2_reg_913;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_2_reg_247 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        p_3_reg_235 <= col_b_V_reg_897;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_3_reg_235 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        p_s_reg_212 <= tmp_1_mid2_reg_828;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_s_reg_212 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter10_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter9_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter10_tmp_14_0_1_reg_1092 <= ap_reg_pp0_iter9_tmp_14_0_1_reg_1092;
        ap_reg_pp0_iter10_tmp_14_1_1_reg_1102 <= ap_reg_pp0_iter9_tmp_14_1_1_reg_1102;
        ap_reg_pp0_iter10_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter9_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter11_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter10_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter11_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter10_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter12_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter11_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter12_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter11_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter13_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter12_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter13_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter12_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter14_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter13_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter14_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter13_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter15_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter14_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter15_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter14_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter16_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter15_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter16_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter15_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter17_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter16_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter17_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter16_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter18_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter17_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter18_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter17_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter19_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter18_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter1_exitcond_flatten2_reg_769 <= exitcond_flatten2_reg_769;
        ap_reg_pp0_iter1_exitcond_flatten_reg_778 <= exitcond_flatten_reg_778;
        ap_reg_pp0_iter20_bufo_0_addr_reg_1167 <= bufo_0_addr_reg_1167;
        ap_reg_pp0_iter20_bufo_1_addr_reg_1172 <= bufo_1_addr_reg_1172;
        ap_reg_pp0_iter20_bufo_2_addr_reg_1177 <= bufo_2_addr_reg_1177;
        ap_reg_pp0_iter20_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter19_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter21_bufo_0_addr_reg_1167 <= ap_reg_pp0_iter20_bufo_0_addr_reg_1167;
        ap_reg_pp0_iter21_bufo_1_addr_reg_1172 <= ap_reg_pp0_iter20_bufo_1_addr_reg_1172;
        ap_reg_pp0_iter21_bufo_2_addr_reg_1177 <= ap_reg_pp0_iter20_bufo_2_addr_reg_1177;
        ap_reg_pp0_iter21_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter20_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter22_bufo_0_addr_reg_1167 <= ap_reg_pp0_iter21_bufo_0_addr_reg_1167;
        ap_reg_pp0_iter22_bufo_1_addr_reg_1172 <= ap_reg_pp0_iter21_bufo_1_addr_reg_1172;
        ap_reg_pp0_iter22_bufo_2_addr_reg_1177 <= ap_reg_pp0_iter21_bufo_2_addr_reg_1177;
        ap_reg_pp0_iter22_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter21_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter23_bufo_0_addr_reg_1167 <= ap_reg_pp0_iter22_bufo_0_addr_reg_1167;
        ap_reg_pp0_iter23_bufo_1_addr_reg_1172 <= ap_reg_pp0_iter22_bufo_1_addr_reg_1172;
        ap_reg_pp0_iter23_bufo_2_addr_reg_1177 <= ap_reg_pp0_iter22_bufo_2_addr_reg_1177;
        ap_reg_pp0_iter23_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter22_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter24_bufo_0_addr_reg_1167 <= ap_reg_pp0_iter23_bufo_0_addr_reg_1167;
        ap_reg_pp0_iter24_bufo_1_addr_reg_1172 <= ap_reg_pp0_iter23_bufo_1_addr_reg_1172;
        ap_reg_pp0_iter24_bufo_2_addr_reg_1177 <= ap_reg_pp0_iter23_bufo_2_addr_reg_1177;
        ap_reg_pp0_iter24_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter23_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter2_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter1_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter3_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter2_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter3_tmp_7_mid2_reg_913 <= tmp_7_mid2_reg_913;
        ap_reg_pp0_iter4_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter3_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter4_tmp_33_reg_966 <= tmp_33_reg_966;
        ap_reg_pp0_iter4_tmp_35_reg_971 <= tmp_35_reg_971;
        ap_reg_pp0_iter4_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter3_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter5_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter4_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter5_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter4_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter6_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter5_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter6_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter5_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter7_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter6_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter7_tmp_14_0_1_reg_1092 <= tmp_14_0_1_reg_1092;
        ap_reg_pp0_iter7_tmp_14_1_1_reg_1102 <= tmp_14_1_1_reg_1102;
        ap_reg_pp0_iter7_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter6_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter8_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter7_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter8_tmp_14_0_1_reg_1092 <= ap_reg_pp0_iter7_tmp_14_0_1_reg_1092;
        ap_reg_pp0_iter8_tmp_14_1_1_reg_1102 <= ap_reg_pp0_iter7_tmp_14_1_1_reg_1102;
        ap_reg_pp0_iter8_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter7_tmp_7_mid2_reg_913;
        ap_reg_pp0_iter9_exitcond_flatten2_reg_769 <= ap_reg_pp0_iter8_exitcond_flatten2_reg_769;
        ap_reg_pp0_iter9_tmp_14_0_1_reg_1092 <= ap_reg_pp0_iter8_tmp_14_0_1_reg_1092;
        ap_reg_pp0_iter9_tmp_14_1_1_reg_1102 <= ap_reg_pp0_iter8_tmp_14_1_1_reg_1102;
        ap_reg_pp0_iter9_tmp_7_mid2_reg_913 <= ap_reg_pp0_iter8_tmp_7_mid2_reg_913;
        exitcond_flatten2_reg_769 <= exitcond_flatten2_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter10_p_3_mid2_reg_891 <= ap_reg_pp0_iter9_p_3_mid2_reg_891;
        ap_reg_pp0_iter10_tmp_14_0_2_reg_1112 <= ap_reg_pp0_iter9_tmp_14_0_2_reg_1112;
        ap_reg_pp0_iter10_tmp_14_1_2_reg_1117 <= ap_reg_pp0_iter9_tmp_14_1_2_reg_1117;
        ap_reg_pp0_iter10_tmp_14_2_1_reg_1122 <= ap_reg_pp0_iter9_tmp_14_2_1_reg_1122;
        ap_reg_pp0_iter10_tmp_14_2_2_reg_1127 <= ap_reg_pp0_iter9_tmp_14_2_2_reg_1127;
        ap_reg_pp0_iter11_p_3_mid2_reg_891 <= ap_reg_pp0_iter10_p_3_mid2_reg_891;
        ap_reg_pp0_iter11_tmp_14_0_2_reg_1112 <= ap_reg_pp0_iter10_tmp_14_0_2_reg_1112;
        ap_reg_pp0_iter11_tmp_14_1_2_reg_1117 <= ap_reg_pp0_iter10_tmp_14_1_2_reg_1117;
        ap_reg_pp0_iter11_tmp_14_2_2_reg_1127 <= ap_reg_pp0_iter10_tmp_14_2_2_reg_1127;
        ap_reg_pp0_iter12_p_3_mid2_reg_891 <= ap_reg_pp0_iter11_p_3_mid2_reg_891;
        ap_reg_pp0_iter12_tmp_14_0_2_reg_1112 <= ap_reg_pp0_iter11_tmp_14_0_2_reg_1112;
        ap_reg_pp0_iter12_tmp_14_1_2_reg_1117 <= ap_reg_pp0_iter11_tmp_14_1_2_reg_1117;
        ap_reg_pp0_iter12_tmp_14_2_2_reg_1127 <= ap_reg_pp0_iter11_tmp_14_2_2_reg_1127;
        ap_reg_pp0_iter13_p_3_mid2_reg_891 <= ap_reg_pp0_iter12_p_3_mid2_reg_891;
        ap_reg_pp0_iter13_tmp_14_0_2_reg_1112 <= ap_reg_pp0_iter12_tmp_14_0_2_reg_1112;
        ap_reg_pp0_iter13_tmp_14_1_2_reg_1117 <= ap_reg_pp0_iter12_tmp_14_1_2_reg_1117;
        ap_reg_pp0_iter13_tmp_14_2_2_reg_1127 <= ap_reg_pp0_iter12_tmp_14_2_2_reg_1127;
        ap_reg_pp0_iter14_p_3_mid2_reg_891 <= ap_reg_pp0_iter13_p_3_mid2_reg_891;
        ap_reg_pp0_iter14_tmp_14_0_2_reg_1112 <= ap_reg_pp0_iter13_tmp_14_0_2_reg_1112;
        ap_reg_pp0_iter14_tmp_14_1_2_reg_1117 <= ap_reg_pp0_iter13_tmp_14_1_2_reg_1117;
        ap_reg_pp0_iter14_tmp_14_2_2_reg_1127 <= ap_reg_pp0_iter13_tmp_14_2_2_reg_1127;
        ap_reg_pp0_iter15_p_3_mid2_reg_891 <= ap_reg_pp0_iter14_p_3_mid2_reg_891;
        ap_reg_pp0_iter16_p_3_mid2_reg_891 <= ap_reg_pp0_iter15_p_3_mid2_reg_891;
        ap_reg_pp0_iter17_p_3_mid2_reg_891 <= ap_reg_pp0_iter16_p_3_mid2_reg_891;
        ap_reg_pp0_iter2_p_3_mid2_reg_891 <= p_3_mid2_reg_891;
        ap_reg_pp0_iter3_p_3_mid2_reg_891 <= ap_reg_pp0_iter2_p_3_mid2_reg_891;
        ap_reg_pp0_iter4_p_3_mid2_reg_891 <= ap_reg_pp0_iter3_p_3_mid2_reg_891;
        ap_reg_pp0_iter5_p_3_mid2_reg_891 <= ap_reg_pp0_iter4_p_3_mid2_reg_891;
        ap_reg_pp0_iter6_p_3_mid2_reg_891 <= ap_reg_pp0_iter5_p_3_mid2_reg_891;
        ap_reg_pp0_iter7_p_3_mid2_reg_891 <= ap_reg_pp0_iter6_p_3_mid2_reg_891;
        ap_reg_pp0_iter7_tmp_14_0_2_reg_1112 <= tmp_14_0_2_reg_1112;
        ap_reg_pp0_iter7_tmp_14_1_2_reg_1117 <= tmp_14_1_2_reg_1117;
        ap_reg_pp0_iter7_tmp_14_2_1_reg_1122 <= tmp_14_2_1_reg_1122;
        ap_reg_pp0_iter7_tmp_14_2_2_reg_1127 <= tmp_14_2_2_reg_1127;
        ap_reg_pp0_iter8_p_3_mid2_reg_891 <= ap_reg_pp0_iter7_p_3_mid2_reg_891;
        ap_reg_pp0_iter8_tmp_14_0_2_reg_1112 <= ap_reg_pp0_iter7_tmp_14_0_2_reg_1112;
        ap_reg_pp0_iter8_tmp_14_1_2_reg_1117 <= ap_reg_pp0_iter7_tmp_14_1_2_reg_1117;
        ap_reg_pp0_iter8_tmp_14_2_1_reg_1122 <= ap_reg_pp0_iter7_tmp_14_2_1_reg_1122;
        ap_reg_pp0_iter8_tmp_14_2_2_reg_1127 <= ap_reg_pp0_iter7_tmp_14_2_2_reg_1127;
        ap_reg_pp0_iter9_p_3_mid2_reg_891 <= ap_reg_pp0_iter8_p_3_mid2_reg_891;
        ap_reg_pp0_iter9_tmp_14_0_2_reg_1112 <= ap_reg_pp0_iter8_tmp_14_0_2_reg_1112;
        ap_reg_pp0_iter9_tmp_14_1_2_reg_1117 <= ap_reg_pp0_iter8_tmp_14_1_2_reg_1117;
        ap_reg_pp0_iter9_tmp_14_2_1_reg_1122 <= ap_reg_pp0_iter8_tmp_14_2_1_reg_1122;
        ap_reg_pp0_iter9_tmp_14_2_2_reg_1127 <= ap_reg_pp0_iter8_tmp_14_2_2_reg_1127;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter18_exitcond_flatten2_reg_769 == 1'd0))) begin
        bufo_0_addr_reg_1167 <= tmp_47_cast_fu_763_p1;
        bufo_1_addr_reg_1172 <= tmp_47_cast_fu_763_p1;
        bufo_2_addr_reg_1177 <= tmp_47_cast_fu_763_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter19) & (ap_reg_pp0_iter19_exitcond_flatten2_reg_769 == 1'd0))) begin
        bufo_0_load_reg_1187 <= bufo_0_Dout_A;
        bufo_1_load_reg_1197 <= bufo_1_Dout_A;
        bufo_2_load_reg_1207 <= bufo_2_Dout_A;
        temp_1_0_2_reg_1182 <= grp_fu_273_p2;
        temp_1_1_2_reg_1192 <= grp_fu_277_p2;
        temp_1_2_2_reg_1202 <= grp_fu_281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0))) begin
        col_b_V_reg_897 <= col_b_V_fu_518_p2;
        tmp_4_mid2_reg_873 <= tmp_4_mid2_fu_483_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (exitcond_flatten2_reg_769 == 1'd0))) begin
        exitcond_flatten1_reg_801 <= exitcond_flatten1_fu_354_p2;
        indvar_flatten_op_reg_807 <= indvar_flatten_op_fu_360_p2;
        not_exitcond_flatten_reg_795 <= not_exitcond_flatten_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten2_reg_769 == 1'd0))) begin
        exitcond_flatten_mid_reg_837 <= exitcond_flatten_mid_fu_403_p2;
        i_V_reg_817 <= i_V_fu_372_p2;
        p_1_mid_reg_822 <= p_1_mid_fu_378_p3;
        tmp_1_reg_844 <= tmp_1_fu_407_p2;
        tmp_9_mid1_reg_849 <= tmp_9_mid1_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten2_fu_325_p2 == 1'd0))) begin
        exitcond_flatten_reg_778 <= exitcond_flatten_fu_337_p2;
        indvar_flatten22_op_reg_790 <= indvar_flatten22_op_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (exitcond_flatten2_reg_769 == 1'd0))) begin
        indvar_flatten_next1_reg_812 <= indvar_flatten_next1_fu_366_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        indvar_flatten_next2_reg_773 <= indvar_flatten_next2_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        indvar_flatten_next_reg_856 <= indvar_flatten_next_fu_428_p3;
        tmp_1_mid2_reg_828 <= tmp_1_mid2_fu_385_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0))) begin
        p_2_mid_reg_868 <= p_2_mid_fu_476_p3;
        p_3_mid2_reg_891 <= p_3_mid2_fu_510_p3;
        row_b_V_reg_885 <= row_b_V_fu_495_p2;
        tmp_2_reg_861 <= tmp_2_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter15) & (ap_reg_pp0_iter14_exitcond_flatten2_reg_769 == 1'd0))) begin
        temp_1_0_1_reg_1147 <= grp_fu_258_p2;
        temp_1_1_1_reg_1152 <= grp_fu_263_p2;
        temp_1_2_1_reg_1157 <= grp_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter10) & (ap_reg_pp0_iter10_exitcond_flatten2_reg_769 == 1'd0))) begin
        temp_1_1_reg_1137 <= grp_fu_263_p2;
        temp_1_2_reg_1142 <= grp_fu_268_p2;
        temp_1_reg_1132 <= grp_fu_258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter24) & (ap_reg_pp0_iter23_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_12_1_reg_1217 <= grp_fu_277_p2;
        tmp_12_2_reg_1222 <= grp_fu_281_p2;
        tmp_37_reg_1212 <= grp_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_reg_pp0_iter5_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_14_0_1_reg_1092 <= grp_fu_289_p2;
        tmp_14_1_1_reg_1102 <= grp_fu_297_p2;
        tmp_14_1_reg_1097 <= grp_fu_293_p2;
        tmp_38_reg_1087 <= grp_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_reg_pp0_iter6_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_14_0_2_reg_1112 <= grp_fu_285_p2;
        tmp_14_1_2_reg_1117 <= grp_fu_289_p2;
        tmp_14_2_1_reg_1122 <= grp_fu_293_p2;
        tmp_14_2_2_reg_1127 <= grp_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter5_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_14_2_reg_1107 <= grp_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_reg_pp0_iter3_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_17_reg_986 <= {{grp_fu_305_p1[63:32]}};
        tmp_21_reg_996 <= {{grp_fu_315_p1[95:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (ap_reg_pp0_iter3_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_19_reg_991 <= {{tmp_19_fu_637_p1[63:32]}};
        tmp_23_reg_1001 <= {{tmp_23_fu_647_p1[95:64]}};
        tmp_27_reg_1011 <= {{tmp_27_fu_661_p1[63:32]}};
        tmp_29_reg_1016 <= {{tmp_29_fu_671_p1[95:64]}};
        tmp_41_reg_976 <= tmp_41_fu_629_p1;
        tmp_42_reg_981 <= tmp_42_fu_633_p1;
        tmp_43_reg_1006 <= tmp_43_fu_657_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter3_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_20_reg_1038 <= tmp_20_fu_695_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        tmp_33_reg_966 <= {{grp_fu_305_p1[63:32]}};
        tmp_35_reg_971 <= {{grp_fu_315_p1[95:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (ap_reg_pp0_iter18_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_39_reg_1162 <= tmp_39_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_40_reg_941 <= tmp_40_fu_607_p2;
        tmp_4_reg_926 <= tmp_4_fu_562_p2;
        tmp_7_reg_931 <= tmp_7_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter2_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_44_reg_961 <= tmp_44_fu_625_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0))) begin
        tmp_4_mid2_cast_reg_902[2 : 0] <= tmp_4_mid2_cast_fu_529_p1[2 : 0];
        tmp_8_cast_mid2_reg_920 <= tmp_8_cast_mid2_fu_551_p3;
        tmp_9_reg_908 <= tmp_9_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        tmp_7_mid2_reg_913 <= tmp_7_mid2_fu_538_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0) & (1'd0 == tmp_9_mid1_reg_849))) begin
        tmp_8_cast_mid4_reg_880 <= tmp_8_cast_mid4_fu_489_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11) & (1'b0 == ap_enable_reg_pp0_iter12) & (1'b0 == ap_enable_reg_pp0_iter13) & (1'b0 == ap_enable_reg_pp0_iter14) & (1'b0 == ap_enable_reg_pp0_iter15) & (1'b0 == ap_enable_reg_pp0_iter16) & (1'b0 == ap_enable_reg_pp0_iter17) & (1'b0 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_enable_reg_pp0_iter19) & (1'b0 == ap_enable_reg_pp0_iter20) & (1'b0 == ap_enable_reg_pp0_iter21) & (1'b0 == ap_enable_reg_pp0_iter22) & (1'b0 == ap_enable_reg_pp0_iter23) & (1'b0 == ap_enable_reg_pp0_iter24))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        bufi_EN_A = 1'b1;
    end else begin
        bufi_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter24) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        bufo_0_Addr_A_orig = ap_reg_pp0_iter24_bufo_0_addr_reg_1167;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter19) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        bufo_0_Addr_A_orig = tmp_47_cast_fu_763_p1;
    end else begin
        bufo_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter19)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter24)))) begin
        bufo_0_EN_A = 1'b1;
    end else begin
        bufo_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter24) & (ap_reg_pp0_iter24_exitcond_flatten2_reg_769 == 1'd0))) begin
        bufo_0_WEN_A = 4'd15;
    end else begin
        bufo_0_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter24) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        bufo_1_Addr_A_orig = ap_reg_pp0_iter24_bufo_1_addr_reg_1172;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter19) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        bufo_1_Addr_A_orig = tmp_47_cast_fu_763_p1;
    end else begin
        bufo_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter19)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter24)))) begin
        bufo_1_EN_A = 1'b1;
    end else begin
        bufo_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter24) & (ap_reg_pp0_iter24_exitcond_flatten2_reg_769 == 1'd0))) begin
        bufo_1_WEN_A = 4'd15;
    end else begin
        bufo_1_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter24) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        bufo_2_Addr_A_orig = ap_reg_pp0_iter24_bufo_2_addr_reg_1177;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter19) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        bufo_2_Addr_A_orig = tmp_47_cast_fu_763_p1;
    end else begin
        bufo_2_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter19)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter24)))) begin
        bufo_2_EN_A = 1'b1;
    end else begin
        bufo_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter24) & (ap_reg_pp0_iter24_exitcond_flatten2_reg_769 == 1'd0))) begin
        bufo_2_WEN_A = 4'd15;
    end else begin
        bufo_2_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter3) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        bufw_Addr_A_orig = tmp_11_cast_fu_613_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        bufw_Addr_A_orig = tmp_40_cast_fu_571_p1;
    end else begin
        bufw_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        bufw_EN_A = 1'b1;
    end else begin
        bufw_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        bufw_EN_B = 1'b1;
    end else begin
        bufw_EN_B = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        grp_fu_258_p0 = temp_1_reg_1132;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_258_p0 = tmp_38_reg_1087;
    end else begin
        grp_fu_258_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        grp_fu_258_p1 = ap_reg_pp0_iter10_tmp_14_0_1_reg_1092;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_258_p1 = 32'd0;
    end else begin
        grp_fu_258_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        grp_fu_263_p0 = temp_1_1_reg_1137;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_263_p0 = tmp_14_1_reg_1097;
    end else begin
        grp_fu_263_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        grp_fu_263_p1 = ap_reg_pp0_iter10_tmp_14_1_1_reg_1102;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_263_p1 = 32'd0;
    end else begin
        grp_fu_263_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        grp_fu_268_p0 = temp_1_2_reg_1142;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_268_p0 = tmp_14_2_reg_1107;
    end else begin
        grp_fu_268_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter11))) begin
        grp_fu_268_p1 = ap_reg_pp0_iter10_tmp_14_2_1_reg_1122;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter6) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_268_p1 = 32'd0;
    end else begin
        grp_fu_268_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter20))) begin
        grp_fu_273_p0 = bufo_0_load_reg_1187;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter15) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_273_p0 = temp_1_0_1_reg_1147;
    end else begin
        grp_fu_273_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter20))) begin
        grp_fu_273_p1 = temp_1_0_2_reg_1182;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter15) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_273_p1 = ap_reg_pp0_iter14_tmp_14_0_2_reg_1112;
    end else begin
        grp_fu_273_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter20))) begin
        grp_fu_277_p0 = bufo_1_load_reg_1197;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter15) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_277_p0 = temp_1_1_1_reg_1152;
    end else begin
        grp_fu_277_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter20))) begin
        grp_fu_277_p1 = temp_1_1_2_reg_1192;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter15) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_277_p1 = ap_reg_pp0_iter14_tmp_14_1_2_reg_1117;
    end else begin
        grp_fu_277_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter20))) begin
        grp_fu_281_p0 = bufo_2_load_reg_1207;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter15) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_281_p0 = temp_1_2_1_reg_1157;
    end else begin
        grp_fu_281_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter20))) begin
        grp_fu_281_p1 = temp_1_2_2_reg_1202;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter15) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        grp_fu_281_p1 = ap_reg_pp0_iter14_tmp_14_2_2_reg_1127;
    end else begin
        grp_fu_281_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter4)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            grp_fu_285_p0 = tmp_22_fu_712_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            grp_fu_285_p0 = tmp_14_fu_681_p1;
        end else begin
            grp_fu_285_p0 = 'bx;
        end
    end else begin
        grp_fu_285_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter4)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            grp_fu_285_p1 = tmp_24_fu_716_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            grp_fu_285_p1 = tmp_16_fu_685_p1;
        end else begin
            grp_fu_285_p1 = 'bx;
        end
    end else begin
        grp_fu_285_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter4)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            grp_fu_289_p0 = tmp_30_fu_722_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            grp_fu_289_p0 = tmp_18_fu_691_p1;
        end else begin
            grp_fu_289_p0 = 'bx;
        end
    end else begin
        grp_fu_289_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter4)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            grp_fu_289_p1 = tmp_24_fu_716_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            grp_fu_289_p1 = tmp_20_fu_695_p1;
        end else begin
            grp_fu_289_p1 = 'bx;
        end
    end else begin
        grp_fu_289_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter4)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            grp_fu_293_p0 = tmp_34_fu_726_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            grp_fu_293_p0 = tmp_26_fu_700_p1;
        end else begin
            grp_fu_293_p0 = 'bx;
        end
    end else begin
        grp_fu_293_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter4)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            grp_fu_293_p1 = tmp_20_reg_1038;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            grp_fu_293_p1 = tmp_16_fu_685_p1;
        end else begin
            grp_fu_293_p1 = 'bx;
        end
    end else begin
        grp_fu_293_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter4)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            grp_fu_297_p0 = tmp_36_fu_730_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            grp_fu_297_p0 = tmp_28_fu_704_p1;
        end else begin
            grp_fu_297_p0 = 'bx;
        end
    end else begin
        grp_fu_297_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter4)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
            grp_fu_297_p1 = tmp_24_fu_716_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
            grp_fu_297_p1 = tmp_20_fu_695_p1;
        end else begin
            grp_fu_297_p1 = 'bx;
        end
    end else begin
        grp_fu_297_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten1_phi_fu_183_p4 = indvar_flatten_next2_reg_773;
    end else begin
        indvar_flatten1_phi_fu_183_p4 = indvar_flatten1_reg_179;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten2_phi_fu_194_p4 = indvar_flatten_next1_reg_812;
    end else begin
        indvar_flatten2_phi_fu_194_p4 = indvar_flatten2_reg_190;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        indvar_flatten_phi_fu_205_p4 = indvar_flatten_next_reg_856;
    end else begin
        indvar_flatten_phi_fu_205_p4 = indvar_flatten_reg_201;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        p_1_phi_fu_228_p4 = tmp_4_mid2_reg_873;
    end else begin
        p_1_phi_fu_228_p4 = p_1_reg_224;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter2_exitcond_flatten2_reg_769 == 1'd0) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        p_2_phi_fu_251_p4 = tmp_7_mid2_reg_913;
    end else begin
        p_2_phi_fu_251_p4 = p_2_reg_247;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        p_3_phi_fu_239_p4 = col_b_V_reg_897;
    end else begin
        p_3_phi_fu_239_p4 = p_3_reg_235;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_769 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        p_s_phi_fu_216_p4 = tmp_1_mid2_reg_828;
    end else begin
        p_s_phi_fu_216_p4 = p_s_reg_212;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_block_pp0_stage1_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter24) & (ap_block_pp0_stage1_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0)) & ~((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter24) & (ap_block_pp0_stage1_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage1_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bufi_Addr_A = tmp_48_cast_fu_621_p1 << 32'd4;

assign bufi_Clk_A = ap_clk;

assign bufi_Din_A = 128'd0;

assign bufi_Rst_A = ap_rst;

assign bufi_WEN_A = 16'd0;

assign bufo_0_Addr_A = bufo_0_Addr_A_orig << 32'd2;

assign bufo_0_Clk_A = ap_clk;

assign bufo_0_Din_A = tmp_37_reg_1212;

assign bufo_0_Rst_A = ap_rst;

assign bufo_1_Addr_A = bufo_1_Addr_A_orig << 32'd2;

assign bufo_1_Clk_A = ap_clk;

assign bufo_1_Din_A = tmp_12_1_reg_1217;

assign bufo_1_Rst_A = ap_rst;

assign bufo_2_Addr_A = bufo_2_Addr_A_orig << 32'd2;

assign bufo_2_Clk_A = ap_clk;

assign bufo_2_Din_A = tmp_12_2_reg_1222;

assign bufo_2_Rst_A = ap_rst;

assign bufw_Addr_A = bufw_Addr_A_orig << 32'd4;

assign bufw_Addr_B = tmp_39_cast_fu_617_p1 << 32'd4;

assign bufw_Clk_A = ap_clk;

assign bufw_Clk_B = ap_clk;

assign bufw_Din_A = 128'd0;

assign bufw_Din_B = 128'd0;

assign bufw_Rst_A = ap_rst;

assign bufw_Rst_B = ap_rst;

assign bufw_WEN_A = 16'd0;

assign bufw_WEN_B = 16'd0;

assign col_b_V_fu_518_p2 = (2'd1 + p_3_mid2_fu_510_p3);

assign exitcond_flatten1_fu_354_p2 = ((indvar_flatten_phi_fu_205_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_325_p2 = ((indvar_flatten1_phi_fu_183_p4 == 8'd225) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_337_p2 = ((indvar_flatten2_phi_fu_194_p4 == 7'd45) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_fu_403_p2 = (exitcond_flatten1_reg_801 & not_exitcond_flatten_reg_795);

assign exitcond_flatten_not_fu_412_p2 = (exitcond_flatten1_reg_801 ^ 1'd1);

assign grp_fu_301_p0 = tmp_44_reg_961;

assign grp_fu_301_p1 = tmp_42_reg_981;

assign grp_fu_305_p1 = bufw_Dout_A;

assign grp_fu_315_p1 = bufw_Dout_A;

assign i_V_fu_372_p2 = (3'd1 + p_s_phi_fu_216_p4);

assign indvar_flatten22_op_fu_343_p2 = (7'd1 + indvar_flatten2_phi_fu_194_p4);

assign indvar_flatten_next1_fu_366_p3 = ((exitcond_flatten_reg_778[0:0] === 1'b1) ? 7'd1 : indvar_flatten22_op_reg_790);

assign indvar_flatten_next2_fu_331_p2 = (indvar_flatten1_phi_fu_183_p4 + 8'd1);

assign indvar_flatten_next_fu_428_p3 = ((tmp_1_fu_407_p2[0:0] === 1'b1) ? 4'd1 : indvar_flatten_op_reg_807);

assign indvar_flatten_op_fu_360_p2 = (4'd1 + indvar_flatten_phi_fu_205_p4);

assign j_V_fu_471_p2 = (3'd1 + p_1_mid_reg_822);

assign not_exitcond_flatten_1_fu_417_p2 = (exitcond_flatten_reg_778 | exitcond_flatten_not_fu_412_p2);

assign not_exitcond_flatten_fu_349_p2 = (exitcond_flatten_reg_778 ^ 1'd1);

assign p_1_mid_fu_378_p3 = ((exitcond_flatten_reg_778[0:0] === 1'b1) ? 3'd0 : p_1_phi_fu_228_p4);

assign p_2_mid_fu_476_p3 = ((tmp_1_reg_844[0:0] === 1'b1) ? 2'd0 : p_2_phi_fu_251_p4);

assign p_3_mid2_fu_510_p3 = ((tmp_11_fu_505_p2[0:0] === 1'b1) ? 2'd0 : p_3_reg_235);

assign p_shl2_cast_fu_744_p1 = tmp_13_fu_737_p3;

assign p_shl3_cast_fu_455_p1 = tmp_fu_448_p3;

assign p_shl_cast_fu_585_p1 = tmp_25_fu_578_p3;

assign row_b_V_fu_495_p2 = (2'd1 + p_2_mid_fu_476_p3);

assign tmp_10_fu_501_p2 = (tmp_9_mid1_reg_849 | exitcond_flatten_mid_reg_837);

assign tmp_11_cast_fu_613_p1 = tmp_4_reg_926;

assign tmp_11_fu_505_p2 = (tmp_10_fu_501_p2 | ap_reg_pp0_iter1_exitcond_flatten_reg_778);

assign tmp_13_fu_737_p3 = {{ap_reg_pp0_iter18_tmp_7_mid2_reg_913}, {2'd0}};

assign tmp_14_fu_681_p1 = tmp_41_reg_976;

assign tmp_15_fu_748_p2 = (p_shl2_cast_fu_744_p1 - tmp_7_mid2_cast_fu_734_p1);

assign tmp_16_fu_685_p1 = tmp_42_reg_981;

assign tmp_18_fu_691_p1 = tmp_17_reg_986;

assign tmp_19_fu_637_p1 = bufi_Dout_A;

assign tmp_1_fu_407_p2 = (exitcond_flatten_mid_fu_403_p2 | exitcond_flatten_reg_778);

assign tmp_1_mid2_cast_fu_445_p1 = tmp_1_mid2_reg_828;

assign tmp_1_mid2_fu_385_p3 = ((exitcond_flatten_reg_778[0:0] === 1'b1) ? i_V_fu_372_p2 : p_s_phi_fu_216_p4);

assign tmp_20_fu_695_p1 = tmp_19_reg_991;

assign tmp_22_fu_712_p1 = tmp_21_reg_996;

assign tmp_23_fu_647_p1 = bufi_Dout_A;

assign tmp_24_fu_716_p1 = tmp_23_reg_1001;

assign tmp_25_fu_578_p3 = {{tmp_8_cast_mid2_reg_920}, {3'd0}};

assign tmp_26_fu_700_p1 = tmp_43_reg_1006;

assign tmp_27_fu_661_p1 = bufw_Dout_B;

assign tmp_28_fu_704_p1 = tmp_27_reg_1011;

assign tmp_29_fu_671_p1 = bufw_Dout_B;

assign tmp_2_fu_459_p2 = (tmp_1_mid2_cast_fu_445_p1 + p_shl3_cast_fu_455_p1);

assign tmp_30_fu_722_p1 = tmp_29_reg_1016;

assign tmp_31_fu_589_p2 = (p_shl_cast_fu_585_p1 - tmp_8_cast_mid2_cast_fu_575_p1);

assign tmp_34_fu_726_p1 = ap_reg_pp0_iter4_tmp_33_reg_966;

assign tmp_36_fu_730_p1 = ap_reg_pp0_iter4_tmp_35_reg_971;

assign tmp_39_cast_fu_617_p1 = tmp_7_reg_931;

assign tmp_39_fu_757_p2 = (tmp_15_fu_748_p2 + tmp_cast1_fu_754_p1);

assign tmp_3_cast_cast_fu_603_p1 = tmp_3_fu_598_p2;

assign tmp_3_fu_598_p2 = (tmp_cast_fu_595_p1 + tmp_4_mid2_reg_873);

assign tmp_40_cast_fu_571_p1 = tmp_9_reg_908;

assign tmp_40_fu_607_p2 = (tmp_31_fu_589_p2 + tmp_3_cast_cast_fu_603_p1);

assign tmp_41_fu_629_p0 = bufw_Dout_A;

assign tmp_41_fu_629_p1 = tmp_41_fu_629_p0[31:0];

assign tmp_42_fu_633_p0 = bufi_Dout_A;

assign tmp_42_fu_633_p1 = tmp_42_fu_633_p0[31:0];

assign tmp_43_fu_657_p0 = bufw_Dout_B;

assign tmp_43_fu_657_p1 = tmp_43_fu_657_p0[31:0];

assign tmp_44_fu_625_p0 = bufw_Dout_A;

assign tmp_44_fu_625_p1 = tmp_44_fu_625_p0[31:0];

assign tmp_47_cast_fu_763_p1 = tmp_39_reg_1162;

assign tmp_48_cast_fu_621_p1 = tmp_40_reg_941;

assign tmp_4_fu_562_p2 = (tmp_2_reg_861 + tmp_4_mid2_cast_reg_902);

assign tmp_4_mid2_cast_fu_529_p1 = tmp_4_mid2_reg_873;

assign tmp_4_mid2_fu_483_p3 = ((exitcond_flatten_mid_reg_837[0:0] === 1'b1) ? j_V_fu_471_p2 : p_1_mid_reg_822);

assign tmp_5_fu_557_p2 = (8'd25 + tmp_2_reg_861);

assign tmp_6_fu_524_p2 = (8'd50 + tmp_2_reg_861);

assign tmp_7_cast_fu_435_p1 = p_2_phi_fu_251_p4;

assign tmp_7_cast_mid1_fu_543_p1 = row_b_V_reg_885;

assign tmp_7_fu_566_p2 = (tmp_5_fu_557_p2 + tmp_4_mid2_cast_reg_902);

assign tmp_7_mid2_cast_fu_734_p1 = ap_reg_pp0_iter18_tmp_7_mid2_reg_913;

assign tmp_7_mid2_fu_538_p3 = ((tmp_9_mid1_reg_849[0:0] === 1'b1) ? row_b_V_reg_885 : p_2_mid_reg_868);

assign tmp_8_cast_mid2_cast_fu_575_p1 = tmp_8_cast_mid2_reg_920;

assign tmp_8_cast_mid2_fu_551_p3 = ((tmp_9_mid1_reg_849[0:0] === 1'b1) ? tmp_8_mid1_fu_546_p2 : tmp_8_cast_mid4_reg_880);

assign tmp_8_cast_mid4_fu_489_p3 = ((exitcond_flatten_mid_reg_837[0:0] === 1'b1) ? tmp_1_mid2_reg_828 : tmp_8_cast_mid_fu_465_p3);

assign tmp_8_cast_mid_fu_465_p3 = ((ap_reg_pp0_iter1_exitcond_flatten_reg_778[0:0] === 1'b1) ? i_V_reg_817 : tmp_8_fu_439_p2);

assign tmp_8_fu_439_p2 = (tmp_7_cast_fu_435_p1 + p_s_reg_212);

assign tmp_8_mid1_fu_546_p2 = (tmp_7_cast_mid1_fu_543_p1 + tmp_1_mid2_reg_828);

assign tmp_9_fu_532_p2 = (tmp_6_fu_524_p2 + tmp_4_mid2_cast_fu_529_p1);

assign tmp_9_mid1_fu_422_p2 = (tmp_9_mid_fu_398_p2 & not_exitcond_flatten_1_fu_417_p2);

assign tmp_9_mid_fu_398_p2 = (tmp_s_fu_392_p2 & not_exitcond_flatten_reg_795);

assign tmp_cast1_fu_754_p1 = ap_reg_pp0_iter17_p_3_mid2_reg_891;

assign tmp_cast_fu_595_p1 = p_3_mid2_reg_891;

assign tmp_fu_448_p3 = {{tmp_1_mid2_reg_828}, {2'd0}};

assign tmp_s_fu_392_p2 = ((p_3_phi_fu_239_p4 == 2'd3) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_4_mid2_cast_reg_902[7:3] <= 5'b00000;
end

endmodule //convolve_kernel
