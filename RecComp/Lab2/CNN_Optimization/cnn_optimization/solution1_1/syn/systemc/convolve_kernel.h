// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convolve_kernel_HH_
#define _convolve_kernel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convolve_kernel_fbkb.h"
#include "convolve_kernel_fcud.h"
#include "convolve_kernel_control_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 4,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32>
struct convolve_kernel : public sc_module {
    // Port declarations 41
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<32> > bufw_Addr_A;
    sc_out< sc_logic > bufw_EN_A;
    sc_out< sc_lv<4> > bufw_WEN_A;
    sc_out< sc_lv<32> > bufw_Din_A;
    sc_in< sc_lv<32> > bufw_Dout_A;
    sc_out< sc_logic > bufw_Clk_A;
    sc_out< sc_logic > bufw_Rst_A;
    sc_out< sc_lv<32> > bufi_Addr_A;
    sc_out< sc_logic > bufi_EN_A;
    sc_out< sc_lv<4> > bufi_WEN_A;
    sc_out< sc_lv<32> > bufi_Din_A;
    sc_in< sc_lv<32> > bufi_Dout_A;
    sc_out< sc_logic > bufi_Clk_A;
    sc_out< sc_logic > bufi_Rst_A;
    sc_out< sc_lv<32> > bufo_Addr_A;
    sc_out< sc_logic > bufo_EN_A;
    sc_out< sc_lv<4> > bufo_WEN_A;
    sc_out< sc_lv<32> > bufo_Din_A;
    sc_in< sc_lv<32> > bufo_Dout_A;
    sc_out< sc_logic > bufo_Clk_A;
    sc_out< sc_logic > bufo_Rst_A;
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    convolve_kernel(sc_module_name name);
    SC_HAS_PROCESS(convolve_kernel);

    ~convolve_kernel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    convolve_kernel_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* convolve_kernel_control_s_axi_U;
    convolve_kernel_fbkb<1,9,32,32,32>* convolve_kernel_fbkb_U1;
    convolve_kernel_fcud<1,5,32,32,32>* convolve_kernel_fcud_U2;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<26> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<6> > row_b_cast6_cast_fu_164_p1;
    sc_signal< sc_lv<6> > row_b_cast6_cast_reg_454;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<3> > row_b_cast_fu_168_p1;
    sc_signal< sc_lv<3> > row_b_cast_reg_459;
    sc_signal< sc_lv<2> > row_b_1_fu_178_p2;
    sc_signal< sc_lv<2> > row_b_1_reg_467;
    sc_signal< sc_lv<6> > col_b_cast5_cast_fu_184_p1;
    sc_signal< sc_lv<6> > col_b_cast5_cast_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > col_b_cast_fu_188_p1;
    sc_signal< sc_lv<3> > col_b_cast_reg_477;
    sc_signal< sc_lv<2> > col_b_1_fu_198_p2;
    sc_signal< sc_lv<2> > col_b_1_reg_485;
    sc_signal< sc_lv<6> > tmp_10_cast_fu_226_p1;
    sc_signal< sc_lv<6> > tmp_10_cast_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > tmp_11_fu_230_p2;
    sc_signal< sc_lv<6> > tmp_11_reg_495;
    sc_signal< sc_lv<1> > tmp_3_fu_235_p2;
    sc_signal< sc_lv<1> > tmp_3_reg_501;
    sc_signal< sc_lv<2> > to_b_1_fu_241_p2;
    sc_signal< sc_lv<2> > to_b_1_reg_505;
    sc_signal< sc_lv<5> > bufo_addr_reg_510;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_17_fu_292_p2;
    sc_signal< sc_lv<64> > tmp_17_reg_515;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > tmp_19_cast_fu_316_p1;
    sc_signal< sc_lv<7> > tmp_19_cast_reg_520;
    sc_signal< sc_lv<2> > ti_b_1_fu_326_p2;
    sc_signal< sc_lv<2> > ti_b_1_reg_528;
    sc_signal< sc_lv<9> > tmp_22_fu_357_p2;
    sc_signal< sc_lv<9> > tmp_22_reg_533;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > i_1_fu_369_p2;
    sc_signal< sc_lv<3> > i_1_reg_541;
    sc_signal< sc_lv<3> > tmp_9_fu_375_p2;
    sc_signal< sc_lv<3> > tmp_9_reg_546;
    sc_signal< sc_lv<1> > tmp_7_fu_363_p2;
    sc_signal< sc_lv<9> > tmp_25_fu_404_p2;
    sc_signal< sc_lv<9> > tmp_25_reg_551;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > bufw_addr_reg_556;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > j_1_fu_430_p2;
    sc_signal< sc_lv<3> > j_1_reg_564;
    sc_signal< sc_lv<9> > tmp_27_fu_445_p2;
    sc_signal< sc_lv<9> > tmp_27_reg_569;
    sc_signal< sc_lv<1> > tmp_s_fu_424_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > bufw_load_reg_579;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > bufi_load_reg_584;
    sc_signal< sc_lv<32> > grp_fu_160_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_589;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > bufo_load_reg_594;
    sc_signal< sc_lv<32> > grp_fu_156_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_599;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<2> > row_b_reg_90;
    sc_signal< sc_lv<1> > tmp_1_fu_192_p2;
    sc_signal< sc_lv<2> > col_b_reg_101;
    sc_signal< sc_lv<1> > tmp_fu_172_p2;
    sc_signal< sc_lv<2> > to_b_reg_112;
    sc_signal< sc_lv<1> > tmp_5_fu_320_p2;
    sc_signal< sc_lv<2> > ti_b_reg_123;
    sc_signal< sc_lv<3> > i_reg_134;
    sc_signal< sc_lv<3> > j_reg_145;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<64> > tmp_14_cast_fu_262_p1;
    sc_signal< sc_lv<64> > tmp_26_cast_fu_419_p1;
    sc_signal< sc_lv<64> > tmp_27_cast_fu_450_p1;
    sc_signal< sc_lv<32> > bufw_Addr_A_orig;
    sc_signal< sc_lv<32> > bufi_Addr_A_orig;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > bufo_Addr_A_orig;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<4> > tmp_8_fu_208_p3;
    sc_signal< sc_lv<5> > p_shl1_cast_fu_216_p1;
    sc_signal< sc_lv<5> > to_b_cast4_cast_fu_204_p1;
    sc_signal< sc_lv<5> > tmp_10_fu_220_p2;
    sc_signal< sc_lv<6> > tmp_12_fu_247_p2;
    sc_signal< sc_lv<6> > tmp_13_fu_252_p2;
    sc_signal< sc_lv<6> > tmp_14_fu_257_p2;
    sc_signal< sc_lv<6> > ti_b_cast3_cast_fu_267_p1;
    sc_signal< sc_lv<6> > tmp_15_fu_271_p2;
    sc_signal< sc_lv<8> > tmp_16_fu_280_p3;
    sc_signal< sc_lv<64> > tmp_15_cast_fu_276_p1;
    sc_signal< sc_lv<64> > p_shl3_fu_288_p1;
    sc_signal< sc_lv<5> > tmp_18_fu_298_p3;
    sc_signal< sc_lv<6> > p_shl2_cast_fu_306_p1;
    sc_signal< sc_lv<6> > tmp_19_fu_310_p2;
    sc_signal< sc_lv<64> > i_cast2_fu_332_p1;
    sc_signal< sc_lv<64> > tmp_20_fu_336_p2;
    sc_signal< sc_lv<7> > tmp_24_fu_345_p1;
    sc_signal< sc_lv<9> > tmp_21_fu_341_p1;
    sc_signal< sc_lv<9> > p_shl4_cast_fu_349_p3;
    sc_signal< sc_lv<7> > tmp_9_cast_cast_fu_380_p1;
    sc_signal< sc_lv<7> > tmp_23_fu_383_p2;
    sc_signal< sc_lv<6> > tmp_28_fu_392_p1;
    sc_signal< sc_lv<9> > p_shl5_cast_fu_396_p3;
    sc_signal< sc_lv<9> > tmp_23_cast_fu_388_p1;
    sc_signal< sc_lv<9> > j_cast1_cast_fu_410_p1;
    sc_signal< sc_lv<9> > tmp_26_fu_414_p2;
    sc_signal< sc_lv<3> > tmp_2_fu_436_p2;
    sc_signal< sc_lv<9> > tmp_2_cast_cast_fu_441_p1;
    sc_signal< sc_lv<26> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<26> ap_ST_fsm_state1;
    static const sc_lv<26> ap_ST_fsm_state2;
    static const sc_lv<26> ap_ST_fsm_state3;
    static const sc_lv<26> ap_ST_fsm_state4;
    static const sc_lv<26> ap_ST_fsm_state5;
    static const sc_lv<26> ap_ST_fsm_state6;
    static const sc_lv<26> ap_ST_fsm_state7;
    static const sc_lv<26> ap_ST_fsm_state8;
    static const sc_lv<26> ap_ST_fsm_state9;
    static const sc_lv<26> ap_ST_fsm_state10;
    static const sc_lv<26> ap_ST_fsm_state11;
    static const sc_lv<26> ap_ST_fsm_state12;
    static const sc_lv<26> ap_ST_fsm_state13;
    static const sc_lv<26> ap_ST_fsm_state14;
    static const sc_lv<26> ap_ST_fsm_state15;
    static const sc_lv<26> ap_ST_fsm_state16;
    static const sc_lv<26> ap_ST_fsm_state17;
    static const sc_lv<26> ap_ST_fsm_state18;
    static const sc_lv<26> ap_ST_fsm_state19;
    static const sc_lv<26> ap_ST_fsm_state20;
    static const sc_lv<26> ap_ST_fsm_state21;
    static const sc_lv<26> ap_ST_fsm_state22;
    static const sc_lv<26> ap_ST_fsm_state23;
    static const sc_lv<26> ap_ST_fsm_state24;
    static const sc_lv<26> ap_ST_fsm_state25;
    static const sc_lv<26> ap_ST_fsm_state26;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<6> ap_const_lv6_2;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_bufi_Addr_A();
    void thread_bufi_Addr_A_orig();
    void thread_bufi_Clk_A();
    void thread_bufi_Din_A();
    void thread_bufi_EN_A();
    void thread_bufi_Rst_A();
    void thread_bufi_WEN_A();
    void thread_bufo_Addr_A();
    void thread_bufo_Addr_A_orig();
    void thread_bufo_Clk_A();
    void thread_bufo_Din_A();
    void thread_bufo_EN_A();
    void thread_bufo_Rst_A();
    void thread_bufo_WEN_A();
    void thread_bufw_Addr_A();
    void thread_bufw_Addr_A_orig();
    void thread_bufw_Clk_A();
    void thread_bufw_Din_A();
    void thread_bufw_EN_A();
    void thread_bufw_Rst_A();
    void thread_bufw_WEN_A();
    void thread_col_b_1_fu_198_p2();
    void thread_col_b_cast5_cast_fu_184_p1();
    void thread_col_b_cast_fu_188_p1();
    void thread_i_1_fu_369_p2();
    void thread_i_cast2_fu_332_p1();
    void thread_j_1_fu_430_p2();
    void thread_j_cast1_cast_fu_410_p1();
    void thread_p_shl1_cast_fu_216_p1();
    void thread_p_shl2_cast_fu_306_p1();
    void thread_p_shl3_fu_288_p1();
    void thread_p_shl4_cast_fu_349_p3();
    void thread_p_shl5_cast_fu_396_p3();
    void thread_row_b_1_fu_178_p2();
    void thread_row_b_cast6_cast_fu_164_p1();
    void thread_row_b_cast_fu_168_p1();
    void thread_ti_b_1_fu_326_p2();
    void thread_ti_b_cast3_cast_fu_267_p1();
    void thread_tmp_10_cast_fu_226_p1();
    void thread_tmp_10_fu_220_p2();
    void thread_tmp_11_fu_230_p2();
    void thread_tmp_12_fu_247_p2();
    void thread_tmp_13_fu_252_p2();
    void thread_tmp_14_cast_fu_262_p1();
    void thread_tmp_14_fu_257_p2();
    void thread_tmp_15_cast_fu_276_p1();
    void thread_tmp_15_fu_271_p2();
    void thread_tmp_16_fu_280_p3();
    void thread_tmp_17_fu_292_p2();
    void thread_tmp_18_fu_298_p3();
    void thread_tmp_19_cast_fu_316_p1();
    void thread_tmp_19_fu_310_p2();
    void thread_tmp_1_fu_192_p2();
    void thread_tmp_20_fu_336_p2();
    void thread_tmp_21_fu_341_p1();
    void thread_tmp_22_fu_357_p2();
    void thread_tmp_23_cast_fu_388_p1();
    void thread_tmp_23_fu_383_p2();
    void thread_tmp_24_fu_345_p1();
    void thread_tmp_25_fu_404_p2();
    void thread_tmp_26_cast_fu_419_p1();
    void thread_tmp_26_fu_414_p2();
    void thread_tmp_27_cast_fu_450_p1();
    void thread_tmp_27_fu_445_p2();
    void thread_tmp_28_fu_392_p1();
    void thread_tmp_2_cast_cast_fu_441_p1();
    void thread_tmp_2_fu_436_p2();
    void thread_tmp_3_fu_235_p2();
    void thread_tmp_5_fu_320_p2();
    void thread_tmp_7_fu_363_p2();
    void thread_tmp_8_fu_208_p3();
    void thread_tmp_9_cast_cast_fu_380_p1();
    void thread_tmp_9_fu_375_p2();
    void thread_tmp_fu_172_p2();
    void thread_tmp_s_fu_424_p2();
    void thread_to_b_1_fu_241_p2();
    void thread_to_b_cast4_cast_fu_204_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
