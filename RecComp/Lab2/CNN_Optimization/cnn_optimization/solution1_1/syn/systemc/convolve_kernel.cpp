// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "convolve_kernel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic convolve_kernel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic convolve_kernel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<30> convolve_kernel::ap_ST_fsm_state1 = "1";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state2 = "10";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state3 = "100";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state4 = "1000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state5 = "10000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state6 = "100000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state7 = "1000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state8 = "10000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state9 = "100000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state10 = "1000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state11 = "10000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state12 = "100000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<30> convolve_kernel::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<32> convolve_kernel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> convolve_kernel::ap_const_lv32_1 = "1";
const sc_lv<1> convolve_kernel::ap_const_lv1_0 = "0";
const sc_lv<32> convolve_kernel::ap_const_lv32_2 = "10";
const sc_lv<32> convolve_kernel::ap_const_lv32_3 = "11";
const sc_lv<32> convolve_kernel::ap_const_lv32_4 = "100";
const sc_lv<32> convolve_kernel::ap_const_lv32_5 = "101";
const sc_lv<32> convolve_kernel::ap_const_lv32_6 = "110";
const sc_lv<32> convolve_kernel::ap_const_lv32_8 = "1000";
const sc_lv<32> convolve_kernel::ap_const_lv32_9 = "1001";
const sc_lv<32> convolve_kernel::ap_const_lv32_A = "1010";
const sc_lv<32> convolve_kernel::ap_const_lv32_B = "1011";
const sc_lv<32> convolve_kernel::ap_const_lv32_C = "1100";
const sc_lv<32> convolve_kernel::ap_const_lv32_D = "1101";
const sc_lv<32> convolve_kernel::ap_const_lv32_E = "1110";
const sc_lv<32> convolve_kernel::ap_const_lv32_F = "1111";
const sc_lv<32> convolve_kernel::ap_const_lv32_14 = "10100";
const sc_lv<32> convolve_kernel::ap_const_lv32_1D = "11101";
const sc_lv<2> convolve_kernel::ap_const_lv2_0 = "00";
const sc_lv<1> convolve_kernel::ap_const_lv1_1 = "1";
const sc_lv<3> convolve_kernel::ap_const_lv3_0 = "000";
const sc_lv<32> convolve_kernel::ap_const_lv32_7 = "111";
const sc_lv<4> convolve_kernel::ap_const_lv4_0 = "0000";
const sc_lv<4> convolve_kernel::ap_const_lv4_F = "1111";
const sc_lv<32> convolve_kernel::ap_const_lv32_15 = "10101";
const sc_lv<32> convolve_kernel::ap_const_lv32_10 = "10000";
const sc_lv<2> convolve_kernel::ap_const_lv2_3 = "11";
const sc_lv<2> convolve_kernel::ap_const_lv2_1 = "1";
const sc_lv<6> convolve_kernel::ap_const_lv6_2 = "10";
const sc_lv<3> convolve_kernel::ap_const_lv3_5 = "101";
const sc_lv<3> convolve_kernel::ap_const_lv3_1 = "1";
const bool convolve_kernel::ap_const_boolean_1 = true;

convolve_kernel::convolve_kernel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    convolve_kernel_fbkb_U0 = new convolve_kernel_fbkb<1,9,32,32,32>("convolve_kernel_fbkb_U0");
    convolve_kernel_fbkb_U0->clk(ap_clk);
    convolve_kernel_fbkb_U0->reset(ap_rst);
    convolve_kernel_fbkb_U0->din0(temp_1_reg_173);
    convolve_kernel_fbkb_U0->din1(tmp_13_reg_652);
    convolve_kernel_fbkb_U0->ce(ap_var_for_const0);
    convolve_kernel_fbkb_U0->dout(grp_fu_186_p2);
    convolve_kernel_fcud_U1 = new convolve_kernel_fcud<1,5,32,32,32>("convolve_kernel_fcud_U1");
    convolve_kernel_fcud_U1->clk(ap_clk);
    convolve_kernel_fcud_U1->reset(ap_rst);
    convolve_kernel_fcud_U1->din0(bufw_load_reg_642);
    convolve_kernel_fcud_U1->din1(bufi_load_reg_647);
    convolve_kernel_fcud_U1->ce(ap_var_for_const0);
    convolve_kernel_fcud_U1->dout(grp_fu_191_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_195_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_195_p2 );

    SC_METHOD(thread_bufi_Addr_A);
    sensitive << ( tmp_33_cast_fu_472_p1 );

    SC_METHOD(thread_bufi_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_bufi_Din_A);

    SC_METHOD(thread_bufi_EN_A);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_bufi_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_bufi_WEN_A);

    SC_METHOD(thread_bufo_Addr_A);
    sensitive << ( bufo_Addr_A_orig );

    SC_METHOD(thread_bufo_Addr_A_orig);
    sensitive << ( bufo_addr_reg_551 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_bufo_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_bufo_Din_A);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( temp_1_reg_173 );

    SC_METHOD(thread_bufo_EN_A);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_bufo_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_bufo_WEN_A);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_10_fu_434_p2 );

    SC_METHOD(thread_bufw_Addr_A);
    sensitive << ( tmp_32_cast_fu_468_p1 );

    SC_METHOD(thread_bufw_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_bufw_Din_A);

    SC_METHOD(thread_bufw_EN_A);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_bufw_Rst_A);
    sensitive << ( ap_rst );

    SC_METHOD(thread_bufw_WEN_A);

    SC_METHOD(thread_col_b_V_fu_336_p2);
    sensitive << ( p_3_reg_129 );

    SC_METHOD(thread_i_V_fu_366_p2);
    sensitive << ( p_4_reg_141 );

    SC_METHOD(thread_j_V_fu_440_p2);
    sensitive << ( p_5_reg_162 );

    SC_METHOD(thread_p_shl1_cast_fu_262_p1);
    sensitive << ( tmp_15_fu_254_p3 );

    SC_METHOD(thread_p_shl2_fu_282_p1);
    sensitive << ( tmp_7_fu_275_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_421_p3);
    sensitive << ( tmp_26_reg_599 );

    SC_METHOD(thread_p_shl5_cast_fu_394_p3);
    sensitive << ( tmp_23_reg_579 );

    SC_METHOD(thread_p_shl_cast_fu_219_p1);
    sensitive << ( tmp_s_fu_211_p3 );

    SC_METHOD(thread_row_b_V_fu_301_p2);
    sensitive << ( p_2_reg_117 );

    SC_METHOD(thread_ti_b_V_fu_239_p2);
    sensitive << ( p_1_reg_106 );

    SC_METHOD(thread_tmp_10_fu_434_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( p_5_reg_162 );

    SC_METHOD(thread_tmp_11_cast_fu_446_p1);
    sensitive << ( p_5_reg_162 );

    SC_METHOD(thread_tmp_11_fu_286_p2);
    sensitive << ( tmp_17_cast_fu_272_p1 );
    sensitive << ( p_shl2_fu_282_p1 );

    SC_METHOD(thread_tmp_12_cast_cast_fu_460_p1);
    sensitive << ( tmp_12_reg_622 );

    SC_METHOD(thread_tmp_12_fu_455_p2);
    sensitive << ( tmp_cast_reg_556 );
    sensitive << ( p_5_reg_162 );

    SC_METHOD(thread_tmp_15_fu_254_p3);
    sensitive << ( p_1_reg_106 );

    SC_METHOD(thread_tmp_16_cast_fu_229_p1);
    sensitive << ( tmp_1_fu_223_p2 );

    SC_METHOD(thread_tmp_16_fu_266_p2);
    sensitive << ( tmp_4_cast_fu_245_p1 );
    sensitive << ( p_shl1_cast_fu_262_p1 );

    SC_METHOD(thread_tmp_17_cast_fu_272_p1);
    sensitive << ( tmp_4_reg_498 );

    SC_METHOD(thread_tmp_17_fu_311_p2);
    sensitive << ( tmp_16_cast_reg_484 );
    sensitive << ( tmp_7_cast8_fu_307_p1 );

    SC_METHOD(thread_tmp_18_fu_316_p2);
    sensitive << ( tmp_17_reg_527 );

    SC_METHOD(thread_tmp_19_fu_321_p2);
    sensitive << ( tmp_17_reg_527 );
    sensitive << ( tmp_18_fu_316_p2 );

    SC_METHOD(thread_tmp_1_cast_fu_207_p1);
    sensitive << ( p_s_reg_95 );

    SC_METHOD(thread_tmp_1_fu_223_p2);
    sensitive << ( p_shl_cast_fu_219_p1 );
    sensitive << ( tmp_1_cast_fu_207_p1 );

    SC_METHOD(thread_tmp_20_fu_346_p2);
    sensitive << ( tmp_19_reg_533 );
    sensitive << ( tmp_cast7_fu_342_p1 );

    SC_METHOD(thread_tmp_21_cast_fu_292_p1);
    sensitive << ( tmp_16_reg_504 );

    SC_METHOD(thread_tmp_21_fu_376_p2);
    sensitive << ( tmp_11_reg_509 );
    sensitive << ( tmp_6_fu_372_p1 );

    SC_METHOD(thread_tmp_22_fu_381_p1);
    sensitive << ( tmp_21_fu_376_p2 );

    SC_METHOD(thread_tmp_23_fu_385_p1);
    sensitive << ( tmp_21_fu_376_p2 );

    SC_METHOD(thread_tmp_24_fu_401_p2);
    sensitive << ( tmp_22_reg_574 );
    sensitive << ( p_shl5_cast_fu_394_p3 );

    SC_METHOD(thread_tmp_25_cast_fu_351_p1);
    sensitive << ( tmp_20_fu_346_p2 );

    SC_METHOD(thread_tmp_25_fu_409_p2);
    sensitive << ( tmp_21_cast_reg_514 );
    sensitive << ( tmp_9_cast_cast_fu_406_p1 );

    SC_METHOD(thread_tmp_26_fu_414_p1);
    sensitive << ( tmp_25_fu_409_p2 );

    SC_METHOD(thread_tmp_27_fu_428_p2);
    sensitive << ( p_shl4_cast_fu_421_p3 );
    sensitive << ( tmp_29_cast_fu_418_p1 );

    SC_METHOD(thread_tmp_28_fu_450_p2);
    sensitive << ( tmp_24_reg_589 );
    sensitive << ( tmp_11_cast_fu_446_p1 );

    SC_METHOD(thread_tmp_29_cast_fu_418_p1);
    sensitive << ( tmp_25_reg_594 );

    SC_METHOD(thread_tmp_29_fu_463_p2);
    sensitive << ( tmp_27_reg_604 );
    sensitive << ( tmp_12_cast_cast_fu_460_p1 );

    SC_METHOD(thread_tmp_2_fu_233_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_1_reg_106 );

    SC_METHOD(thread_tmp_32_cast_fu_468_p1);
    sensitive << ( tmp_28_reg_617 );

    SC_METHOD(thread_tmp_33_cast_fu_472_p1);
    sensitive << ( tmp_29_reg_627 );

    SC_METHOD(thread_tmp_3_fu_360_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( p_4_reg_141 );

    SC_METHOD(thread_tmp_4_cast_fu_245_p1);
    sensitive << ( p_1_reg_106 );

    SC_METHOD(thread_tmp_4_fu_249_p2);
    sensitive << ( tmp_16_cast_reg_484 );
    sensitive << ( tmp_4_cast_fu_245_p1 );

    SC_METHOD(thread_tmp_5_fu_295_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_2_reg_117 );

    SC_METHOD(thread_tmp_6_fu_372_p1);
    sensitive << ( p_4_reg_141 );

    SC_METHOD(thread_tmp_7_cast8_fu_307_p1);
    sensitive << ( p_2_reg_117 );

    SC_METHOD(thread_tmp_7_cast_fu_326_p1);
    sensitive << ( p_2_reg_117 );

    SC_METHOD(thread_tmp_7_fu_275_p3);
    sensitive << ( tmp_4_reg_498 );

    SC_METHOD(thread_tmp_8_fu_330_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( p_3_reg_129 );

    SC_METHOD(thread_tmp_9_cast_cast_fu_406_p1);
    sensitive << ( tmp_9_reg_584 );

    SC_METHOD(thread_tmp_9_fu_389_p2);
    sensitive << ( tmp_7_cast_reg_538 );
    sensitive << ( p_4_reg_141 );

    SC_METHOD(thread_tmp_cast7_fu_342_p1);
    sensitive << ( p_3_reg_129 );

    SC_METHOD(thread_tmp_cast_fu_356_p1);
    sensitive << ( p_3_reg_129 );

    SC_METHOD(thread_tmp_fu_195_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_s_reg_95 );

    SC_METHOD(thread_tmp_s_fu_211_p3);
    sensitive << ( p_s_reg_95 );

    SC_METHOD(thread_to_b_V_fu_201_p2);
    sensitive << ( p_s_reg_95 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_195_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_2_fu_233_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_5_fu_295_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_8_fu_330_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_3_fu_360_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_10_fu_434_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "convolve_kernel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, bufw_Addr_A, "(port)bufw_Addr_A");
    sc_trace(mVcdFile, bufw_EN_A, "(port)bufw_EN_A");
    sc_trace(mVcdFile, bufw_WEN_A, "(port)bufw_WEN_A");
    sc_trace(mVcdFile, bufw_Din_A, "(port)bufw_Din_A");
    sc_trace(mVcdFile, bufw_Dout_A, "(port)bufw_Dout_A");
    sc_trace(mVcdFile, bufw_Clk_A, "(port)bufw_Clk_A");
    sc_trace(mVcdFile, bufw_Rst_A, "(port)bufw_Rst_A");
    sc_trace(mVcdFile, bufi_Addr_A, "(port)bufi_Addr_A");
    sc_trace(mVcdFile, bufi_EN_A, "(port)bufi_EN_A");
    sc_trace(mVcdFile, bufi_WEN_A, "(port)bufi_WEN_A");
    sc_trace(mVcdFile, bufi_Din_A, "(port)bufi_Din_A");
    sc_trace(mVcdFile, bufi_Dout_A, "(port)bufi_Dout_A");
    sc_trace(mVcdFile, bufi_Clk_A, "(port)bufi_Clk_A");
    sc_trace(mVcdFile, bufi_Rst_A, "(port)bufi_Rst_A");
    sc_trace(mVcdFile, bufo_Addr_A, "(port)bufo_Addr_A");
    sc_trace(mVcdFile, bufo_EN_A, "(port)bufo_EN_A");
    sc_trace(mVcdFile, bufo_WEN_A, "(port)bufo_WEN_A");
    sc_trace(mVcdFile, bufo_Din_A, "(port)bufo_Din_A");
    sc_trace(mVcdFile, bufo_Dout_A, "(port)bufo_Dout_A");
    sc_trace(mVcdFile, bufo_Clk_A, "(port)bufo_Clk_A");
    sc_trace(mVcdFile, bufo_Rst_A, "(port)bufo_Rst_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, to_b_V_fu_201_p2, "to_b_V_fu_201_p2");
    sc_trace(mVcdFile, to_b_V_reg_479, "to_b_V_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_16_cast_fu_229_p1, "tmp_16_cast_fu_229_p1");
    sc_trace(mVcdFile, tmp_16_cast_reg_484, "tmp_16_cast_reg_484");
    sc_trace(mVcdFile, tmp_fu_195_p2, "tmp_fu_195_p2");
    sc_trace(mVcdFile, ti_b_V_fu_239_p2, "ti_b_V_fu_239_p2");
    sc_trace(mVcdFile, ti_b_V_reg_493, "ti_b_V_reg_493");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_4_fu_249_p2, "tmp_4_fu_249_p2");
    sc_trace(mVcdFile, tmp_4_reg_498, "tmp_4_reg_498");
    sc_trace(mVcdFile, tmp_2_fu_233_p2, "tmp_2_fu_233_p2");
    sc_trace(mVcdFile, tmp_16_fu_266_p2, "tmp_16_fu_266_p2");
    sc_trace(mVcdFile, tmp_16_reg_504, "tmp_16_reg_504");
    sc_trace(mVcdFile, tmp_11_fu_286_p2, "tmp_11_fu_286_p2");
    sc_trace(mVcdFile, tmp_11_reg_509, "tmp_11_reg_509");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_21_cast_fu_292_p1, "tmp_21_cast_fu_292_p1");
    sc_trace(mVcdFile, tmp_21_cast_reg_514, "tmp_21_cast_reg_514");
    sc_trace(mVcdFile, row_b_V_fu_301_p2, "row_b_V_fu_301_p2");
    sc_trace(mVcdFile, row_b_V_reg_522, "row_b_V_reg_522");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_17_fu_311_p2, "tmp_17_fu_311_p2");
    sc_trace(mVcdFile, tmp_17_reg_527, "tmp_17_reg_527");
    sc_trace(mVcdFile, tmp_5_fu_295_p2, "tmp_5_fu_295_p2");
    sc_trace(mVcdFile, tmp_19_fu_321_p2, "tmp_19_fu_321_p2");
    sc_trace(mVcdFile, tmp_19_reg_533, "tmp_19_reg_533");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_7_cast_fu_326_p1, "tmp_7_cast_fu_326_p1");
    sc_trace(mVcdFile, tmp_7_cast_reg_538, "tmp_7_cast_reg_538");
    sc_trace(mVcdFile, col_b_V_fu_336_p2, "col_b_V_fu_336_p2");
    sc_trace(mVcdFile, col_b_V_reg_546, "col_b_V_reg_546");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, bufo_addr_reg_551, "bufo_addr_reg_551");
    sc_trace(mVcdFile, tmp_8_fu_330_p2, "tmp_8_fu_330_p2");
    sc_trace(mVcdFile, tmp_cast_fu_356_p1, "tmp_cast_fu_356_p1");
    sc_trace(mVcdFile, tmp_cast_reg_556, "tmp_cast_reg_556");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_V_fu_366_p2, "i_V_fu_366_p2");
    sc_trace(mVcdFile, i_V_reg_569, "i_V_reg_569");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_22_fu_381_p1, "tmp_22_fu_381_p1");
    sc_trace(mVcdFile, tmp_22_reg_574, "tmp_22_reg_574");
    sc_trace(mVcdFile, tmp_3_fu_360_p2, "tmp_3_fu_360_p2");
    sc_trace(mVcdFile, tmp_23_fu_385_p1, "tmp_23_fu_385_p1");
    sc_trace(mVcdFile, tmp_23_reg_579, "tmp_23_reg_579");
    sc_trace(mVcdFile, tmp_9_fu_389_p2, "tmp_9_fu_389_p2");
    sc_trace(mVcdFile, tmp_9_reg_584, "tmp_9_reg_584");
    sc_trace(mVcdFile, tmp_24_fu_401_p2, "tmp_24_fu_401_p2");
    sc_trace(mVcdFile, tmp_24_reg_589, "tmp_24_reg_589");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_25_fu_409_p2, "tmp_25_fu_409_p2");
    sc_trace(mVcdFile, tmp_25_reg_594, "tmp_25_reg_594");
    sc_trace(mVcdFile, tmp_26_fu_414_p1, "tmp_26_fu_414_p1");
    sc_trace(mVcdFile, tmp_26_reg_599, "tmp_26_reg_599");
    sc_trace(mVcdFile, tmp_27_fu_428_p2, "tmp_27_fu_428_p2");
    sc_trace(mVcdFile, tmp_27_reg_604, "tmp_27_reg_604");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, j_V_fu_440_p2, "j_V_fu_440_p2");
    sc_trace(mVcdFile, j_V_reg_612, "j_V_reg_612");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_28_fu_450_p2, "tmp_28_fu_450_p2");
    sc_trace(mVcdFile, tmp_28_reg_617, "tmp_28_reg_617");
    sc_trace(mVcdFile, tmp_10_fu_434_p2, "tmp_10_fu_434_p2");
    sc_trace(mVcdFile, tmp_12_fu_455_p2, "tmp_12_fu_455_p2");
    sc_trace(mVcdFile, tmp_12_reg_622, "tmp_12_reg_622");
    sc_trace(mVcdFile, tmp_29_fu_463_p2, "tmp_29_fu_463_p2");
    sc_trace(mVcdFile, tmp_29_reg_627, "tmp_29_reg_627");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, bufw_load_reg_642, "bufw_load_reg_642");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, bufi_load_reg_647, "bufi_load_reg_647");
    sc_trace(mVcdFile, grp_fu_191_p2, "grp_fu_191_p2");
    sc_trace(mVcdFile, tmp_13_reg_652, "tmp_13_reg_652");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_fu_186_p2, "grp_fu_186_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, p_s_reg_95, "p_s_reg_95");
    sc_trace(mVcdFile, p_1_reg_106, "p_1_reg_106");
    sc_trace(mVcdFile, p_2_reg_117, "p_2_reg_117");
    sc_trace(mVcdFile, p_3_reg_129, "p_3_reg_129");
    sc_trace(mVcdFile, p_4_reg_141, "p_4_reg_141");
    sc_trace(mVcdFile, temp1_reg_152, "temp1_reg_152");
    sc_trace(mVcdFile, p_5_reg_162, "p_5_reg_162");
    sc_trace(mVcdFile, temp_1_reg_173, "temp_1_reg_173");
    sc_trace(mVcdFile, tmp_25_cast_fu_351_p1, "tmp_25_cast_fu_351_p1");
    sc_trace(mVcdFile, tmp_32_cast_fu_468_p1, "tmp_32_cast_fu_468_p1");
    sc_trace(mVcdFile, tmp_33_cast_fu_472_p1, "tmp_33_cast_fu_472_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, bufo_Addr_A_orig, "bufo_Addr_A_orig");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_s_fu_211_p3, "tmp_s_fu_211_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_219_p1, "p_shl_cast_fu_219_p1");
    sc_trace(mVcdFile, tmp_1_cast_fu_207_p1, "tmp_1_cast_fu_207_p1");
    sc_trace(mVcdFile, tmp_1_fu_223_p2, "tmp_1_fu_223_p2");
    sc_trace(mVcdFile, tmp_4_cast_fu_245_p1, "tmp_4_cast_fu_245_p1");
    sc_trace(mVcdFile, tmp_15_fu_254_p3, "tmp_15_fu_254_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_262_p1, "p_shl1_cast_fu_262_p1");
    sc_trace(mVcdFile, tmp_7_fu_275_p3, "tmp_7_fu_275_p3");
    sc_trace(mVcdFile, tmp_17_cast_fu_272_p1, "tmp_17_cast_fu_272_p1");
    sc_trace(mVcdFile, p_shl2_fu_282_p1, "p_shl2_fu_282_p1");
    sc_trace(mVcdFile, tmp_7_cast8_fu_307_p1, "tmp_7_cast8_fu_307_p1");
    sc_trace(mVcdFile, tmp_18_fu_316_p2, "tmp_18_fu_316_p2");
    sc_trace(mVcdFile, tmp_cast7_fu_342_p1, "tmp_cast7_fu_342_p1");
    sc_trace(mVcdFile, tmp_20_fu_346_p2, "tmp_20_fu_346_p2");
    sc_trace(mVcdFile, tmp_6_fu_372_p1, "tmp_6_fu_372_p1");
    sc_trace(mVcdFile, tmp_21_fu_376_p2, "tmp_21_fu_376_p2");
    sc_trace(mVcdFile, p_shl5_cast_fu_394_p3, "p_shl5_cast_fu_394_p3");
    sc_trace(mVcdFile, tmp_9_cast_cast_fu_406_p1, "tmp_9_cast_cast_fu_406_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_421_p3, "p_shl4_cast_fu_421_p3");
    sc_trace(mVcdFile, tmp_29_cast_fu_418_p1, "tmp_29_cast_fu_418_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_446_p1, "tmp_11_cast_fu_446_p1");
    sc_trace(mVcdFile, tmp_12_cast_cast_fu_460_p1, "tmp_12_cast_cast_fu_460_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("convolve_kernel.hdltvin.dat");
    mHdltvoutHandle.open("convolve_kernel.hdltvout.dat");
}

convolve_kernel::~convolve_kernel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete convolve_kernel_fbkb_U0;
    delete convolve_kernel_fcud_U1;
}

void convolve_kernel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void convolve_kernel::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_5_fu_295_p2.read(), ap_const_lv1_1))) {
        p_1_reg_106 = ti_b_V_reg_493.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_fu_195_p2.read(), ap_const_lv1_0))) {
        p_1_reg_106 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(tmp_8_fu_330_p2.read(), ap_const_lv1_1))) {
        p_2_reg_117 = row_b_V_reg_522.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_2_reg_117 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(tmp_3_fu_360_p2.read(), ap_const_lv1_1))) {
        p_3_reg_129 = col_b_V_reg_546.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p_3_reg_129 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(tmp_10_fu_434_p2.read(), ap_const_lv1_1))) {
        p_4_reg_141 = i_V_reg_569.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        p_4_reg_141 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        p_5_reg_162 = j_V_reg_612.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_5_reg_162 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_2_fu_233_p2.read(), ap_const_lv1_1))) {
        p_s_reg_95 = to_b_V_reg_479.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_s_reg_95 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(tmp_10_fu_434_p2.read(), ap_const_lv1_1))) {
        temp1_reg_152 = temp_1_reg_173.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp1_reg_152 = bufo_Dout_A.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        temp_1_reg_173 = grp_fu_186_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        temp_1_reg_173 = temp1_reg_152.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        bufi_load_reg_647 = bufi_Dout_A.read();
        bufw_load_reg_642 = bufw_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_330_p2.read()))) {
        bufo_addr_reg_551 =  (sc_lv<5>) (tmp_25_cast_fu_351_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        col_b_V_reg_546 = col_b_V_fu_336_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_V_reg_569 = i_V_fu_366_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j_V_reg_612 = j_V_fu_440_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        row_b_V_reg_522 = row_b_V_fu_301_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ti_b_V_reg_493 = ti_b_V_fu_239_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_11_reg_509 = tmp_11_fu_286_p2.read();
        tmp_21_cast_reg_514 = tmp_21_cast_fu_292_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_434_p2.read()))) {
        tmp_12_reg_622 = tmp_12_fu_455_p2.read();
        tmp_28_reg_617 = tmp_28_fu_450_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_13_reg_652 = grp_fu_191_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_195_p2.read(), ap_const_lv1_0))) {
        tmp_16_cast_reg_484 = tmp_16_cast_fu_229_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_233_p2.read()))) {
        tmp_16_reg_504 = tmp_16_fu_266_p2.read();
        tmp_4_reg_498 = tmp_4_fu_249_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_295_p2.read()))) {
        tmp_17_reg_527 = tmp_17_fu_311_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_19_reg_533 = tmp_19_fu_321_p2.read();
        tmp_7_cast_reg_538 = tmp_7_cast_fu_326_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_360_p2.read()))) {
        tmp_22_reg_574 = tmp_22_fu_381_p1.read();
        tmp_23_reg_579 = tmp_23_fu_385_p1.read();
        tmp_9_reg_584 = tmp_9_fu_389_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_24_reg_589 = tmp_24_fu_401_p2.read();
        tmp_25_reg_594 = tmp_25_fu_409_p2.read();
        tmp_26_reg_599 = tmp_26_fu_414_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_27_reg_604 = tmp_27_fu_428_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_29_reg_627 = tmp_29_fu_463_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_cast_reg_556 = tmp_cast_fu_356_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        to_b_V_reg_479 = to_b_V_fu_201_p2.read();
    }
}

void convolve_kernel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void convolve_kernel::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void convolve_kernel::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void convolve_kernel::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void convolve_kernel::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void convolve_kernel::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void convolve_kernel::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void convolve_kernel::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void convolve_kernel::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void convolve_kernel::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void convolve_kernel::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void convolve_kernel::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void convolve_kernel::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void convolve_kernel::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void convolve_kernel::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void convolve_kernel::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void convolve_kernel::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void convolve_kernel::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void convolve_kernel::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void convolve_kernel::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void convolve_kernel::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_fu_195_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void convolve_kernel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void convolve_kernel::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_fu_195_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void convolve_kernel::thread_bufi_Addr_A() {
    bufi_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_33_cast_fu_472_p1.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void convolve_kernel::thread_bufi_Clk_A() {
    bufi_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void convolve_kernel::thread_bufi_Din_A() {
    bufi_Din_A = ap_const_lv32_0;
}

void convolve_kernel::thread_bufi_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        bufi_EN_A = ap_const_logic_1;
    } else {
        bufi_EN_A = ap_const_logic_0;
    }
}

void convolve_kernel::thread_bufi_Rst_A() {
    bufi_Rst_A = ap_rst.read();
}

void convolve_kernel::thread_bufi_WEN_A() {
    bufi_WEN_A = ap_const_lv4_0;
}

void convolve_kernel::thread_bufo_Addr_A() {
    bufo_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): bufo_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void convolve_kernel::thread_bufo_Addr_A_orig() {
    bufo_Addr_A_orig =  (sc_lv<32>) (bufo_addr_reg_551.read());
}

void convolve_kernel::thread_bufo_Clk_A() {
    bufo_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void convolve_kernel::thread_bufo_Din_A() {
    bufo_Din_A = temp_1_reg_173.read();
}

void convolve_kernel::thread_bufo_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        bufo_EN_A = ap_const_logic_1;
    } else {
        bufo_EN_A = ap_const_logic_0;
    }
}

void convolve_kernel::thread_bufo_Rst_A() {
    bufo_Rst_A = ap_rst.read();
}

void convolve_kernel::thread_bufo_WEN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(tmp_10_fu_434_p2.read(), ap_const_lv1_1))) {
        bufo_WEN_A = ap_const_lv4_F;
    } else {
        bufo_WEN_A = ap_const_lv4_0;
    }
}

void convolve_kernel::thread_bufw_Addr_A() {
    bufw_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_32_cast_fu_468_p1.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void convolve_kernel::thread_bufw_Clk_A() {
    bufw_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void convolve_kernel::thread_bufw_Din_A() {
    bufw_Din_A = ap_const_lv32_0;
}

void convolve_kernel::thread_bufw_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        bufw_EN_A = ap_const_logic_1;
    } else {
        bufw_EN_A = ap_const_logic_0;
    }
}

void convolve_kernel::thread_bufw_Rst_A() {
    bufw_Rst_A = ap_rst.read();
}

void convolve_kernel::thread_bufw_WEN_A() {
    bufw_WEN_A = ap_const_lv4_0;
}

void convolve_kernel::thread_col_b_V_fu_336_p2() {
    col_b_V_fu_336_p2 = (!p_3_reg_129.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(p_3_reg_129.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_kernel::thread_i_V_fu_366_p2() {
    i_V_fu_366_p2 = (!p_4_reg_141.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(p_4_reg_141.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolve_kernel::thread_j_V_fu_440_p2() {
    j_V_fu_440_p2 = (!p_5_reg_162.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(p_5_reg_162.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolve_kernel::thread_p_shl1_cast_fu_262_p1() {
    p_shl1_cast_fu_262_p1 = esl_zext<6,5>(tmp_15_fu_254_p3.read());
}

void convolve_kernel::thread_p_shl2_fu_282_p1() {
    p_shl2_fu_282_p1 = esl_sext<32,8>(tmp_7_fu_275_p3.read());
}

void convolve_kernel::thread_p_shl4_cast_fu_421_p3() {
    p_shl4_cast_fu_421_p3 = esl_concat<6,3>(tmp_26_reg_599.read(), ap_const_lv3_0);
}

void convolve_kernel::thread_p_shl5_cast_fu_394_p3() {
    p_shl5_cast_fu_394_p3 = esl_concat<7,2>(tmp_23_reg_579.read(), ap_const_lv2_0);
}

void convolve_kernel::thread_p_shl_cast_fu_219_p1() {
    p_shl_cast_fu_219_p1 = esl_zext<5,4>(tmp_s_fu_211_p3.read());
}

void convolve_kernel::thread_row_b_V_fu_301_p2() {
    row_b_V_fu_301_p2 = (!p_2_reg_117.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(p_2_reg_117.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_kernel::thread_ti_b_V_fu_239_p2() {
    ti_b_V_fu_239_p2 = (!p_1_reg_106.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(p_1_reg_106.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_kernel::thread_tmp_10_fu_434_p2() {
    tmp_10_fu_434_p2 = (!p_5_reg_162.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(p_5_reg_162.read() == ap_const_lv3_5);
}

void convolve_kernel::thread_tmp_11_cast_fu_446_p1() {
    tmp_11_cast_fu_446_p1 = esl_zext<9,3>(p_5_reg_162.read());
}

void convolve_kernel::thread_tmp_11_fu_286_p2() {
    tmp_11_fu_286_p2 = (!tmp_17_cast_fu_272_p1.read().is_01() || !p_shl2_fu_282_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_17_cast_fu_272_p1.read()) + sc_bigint<32>(p_shl2_fu_282_p1.read()));
}

void convolve_kernel::thread_tmp_12_cast_cast_fu_460_p1() {
    tmp_12_cast_cast_fu_460_p1 = esl_zext<9,3>(tmp_12_reg_622.read());
}

void convolve_kernel::thread_tmp_12_fu_455_p2() {
    tmp_12_fu_455_p2 = (!tmp_cast_reg_556.read().is_01() || !p_5_reg_162.read().is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_cast_reg_556.read()) + sc_biguint<3>(p_5_reg_162.read()));
}

void convolve_kernel::thread_tmp_15_fu_254_p3() {
    tmp_15_fu_254_p3 = esl_concat<2,3>(p_1_reg_106.read(), ap_const_lv3_0);
}

void convolve_kernel::thread_tmp_16_cast_fu_229_p1() {
    tmp_16_cast_fu_229_p1 = esl_sext<6,5>(tmp_1_fu_223_p2.read());
}

void convolve_kernel::thread_tmp_16_fu_266_p2() {
    tmp_16_fu_266_p2 = (!p_shl1_cast_fu_262_p1.read().is_01() || !tmp_4_cast_fu_245_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl1_cast_fu_262_p1.read()) - sc_biguint<6>(tmp_4_cast_fu_245_p1.read()));
}

void convolve_kernel::thread_tmp_17_cast_fu_272_p1() {
    tmp_17_cast_fu_272_p1 = esl_sext<32,6>(tmp_4_reg_498.read());
}

void convolve_kernel::thread_tmp_17_fu_311_p2() {
    tmp_17_fu_311_p2 = (!tmp_7_cast8_fu_307_p1.read().is_01() || !tmp_16_cast_reg_484.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_7_cast8_fu_307_p1.read()) + sc_bigint<6>(tmp_16_cast_reg_484.read()));
}

void convolve_kernel::thread_tmp_18_fu_316_p2() {
    tmp_18_fu_316_p2 = (!ap_const_lv6_2.is_01())? sc_lv<6>(): tmp_17_reg_527.read() << (unsigned short)ap_const_lv6_2.to_uint();
}

void convolve_kernel::thread_tmp_19_fu_321_p2() {
    tmp_19_fu_321_p2 = (!tmp_18_fu_316_p2.read().is_01() || !tmp_17_reg_527.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_18_fu_316_p2.read()) - sc_biguint<6>(tmp_17_reg_527.read()));
}

void convolve_kernel::thread_tmp_1_cast_fu_207_p1() {
    tmp_1_cast_fu_207_p1 = esl_zext<5,2>(p_s_reg_95.read());
}

void convolve_kernel::thread_tmp_1_fu_223_p2() {
    tmp_1_fu_223_p2 = (!p_shl_cast_fu_219_p1.read().is_01() || !tmp_1_cast_fu_207_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_219_p1.read()) - sc_biguint<5>(tmp_1_cast_fu_207_p1.read()));
}

void convolve_kernel::thread_tmp_20_fu_346_p2() {
    tmp_20_fu_346_p2 = (!tmp_19_reg_533.read().is_01() || !tmp_cast7_fu_342_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_19_reg_533.read()) + sc_biguint<6>(tmp_cast7_fu_342_p1.read()));
}

void convolve_kernel::thread_tmp_21_cast_fu_292_p1() {
    tmp_21_cast_fu_292_p1 = esl_sext<7,6>(tmp_16_reg_504.read());
}

void convolve_kernel::thread_tmp_21_fu_376_p2() {
    tmp_21_fu_376_p2 = (!tmp_6_fu_372_p1.read().is_01() || !tmp_11_reg_509.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_fu_372_p1.read()) + sc_biguint<32>(tmp_11_reg_509.read()));
}

void convolve_kernel::thread_tmp_22_fu_381_p1() {
    tmp_22_fu_381_p1 = tmp_21_fu_376_p2.read().range(9-1, 0);
}

void convolve_kernel::thread_tmp_23_fu_385_p1() {
    tmp_23_fu_385_p1 = tmp_21_fu_376_p2.read().range(7-1, 0);
}

void convolve_kernel::thread_tmp_24_fu_401_p2() {
    tmp_24_fu_401_p2 = (!p_shl5_cast_fu_394_p3.read().is_01() || !tmp_22_reg_574.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl5_cast_fu_394_p3.read()) + sc_biguint<9>(tmp_22_reg_574.read()));
}

void convolve_kernel::thread_tmp_25_cast_fu_351_p1() {
    tmp_25_cast_fu_351_p1 = esl_zext<32,6>(tmp_20_fu_346_p2.read());
}

void convolve_kernel::thread_tmp_25_fu_409_p2() {
    tmp_25_fu_409_p2 = (!tmp_9_cast_cast_fu_406_p1.read().is_01() || !tmp_21_cast_reg_514.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_9_cast_cast_fu_406_p1.read()) + sc_bigint<7>(tmp_21_cast_reg_514.read()));
}

void convolve_kernel::thread_tmp_26_fu_414_p1() {
    tmp_26_fu_414_p1 = tmp_25_fu_409_p2.read().range(6-1, 0);
}

void convolve_kernel::thread_tmp_27_fu_428_p2() {
    tmp_27_fu_428_p2 = (!p_shl4_cast_fu_421_p3.read().is_01() || !tmp_29_cast_fu_418_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl4_cast_fu_421_p3.read()) - sc_bigint<9>(tmp_29_cast_fu_418_p1.read()));
}

void convolve_kernel::thread_tmp_28_fu_450_p2() {
    tmp_28_fu_450_p2 = (!tmp_24_reg_589.read().is_01() || !tmp_11_cast_fu_446_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_24_reg_589.read()) + sc_biguint<9>(tmp_11_cast_fu_446_p1.read()));
}

void convolve_kernel::thread_tmp_29_cast_fu_418_p1() {
    tmp_29_cast_fu_418_p1 = esl_sext<9,7>(tmp_25_reg_594.read());
}

void convolve_kernel::thread_tmp_29_fu_463_p2() {
    tmp_29_fu_463_p2 = (!tmp_27_reg_604.read().is_01() || !tmp_12_cast_cast_fu_460_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_27_reg_604.read()) + sc_biguint<9>(tmp_12_cast_cast_fu_460_p1.read()));
}

void convolve_kernel::thread_tmp_2_fu_233_p2() {
    tmp_2_fu_233_p2 = (!p_1_reg_106.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(p_1_reg_106.read() == ap_const_lv2_3);
}

void convolve_kernel::thread_tmp_32_cast_fu_468_p1() {
    tmp_32_cast_fu_468_p1 = esl_zext<32,9>(tmp_28_reg_617.read());
}

void convolve_kernel::thread_tmp_33_cast_fu_472_p1() {
    tmp_33_cast_fu_472_p1 = esl_zext<32,9>(tmp_29_reg_627.read());
}

void convolve_kernel::thread_tmp_3_fu_360_p2() {
    tmp_3_fu_360_p2 = (!p_4_reg_141.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(p_4_reg_141.read() == ap_const_lv3_5);
}

void convolve_kernel::thread_tmp_4_cast_fu_245_p1() {
    tmp_4_cast_fu_245_p1 = esl_zext<6,2>(p_1_reg_106.read());
}

void convolve_kernel::thread_tmp_4_fu_249_p2() {
    tmp_4_fu_249_p2 = (!tmp_16_cast_reg_484.read().is_01() || !tmp_4_cast_fu_245_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_16_cast_reg_484.read()) + sc_biguint<6>(tmp_4_cast_fu_245_p1.read()));
}

void convolve_kernel::thread_tmp_5_fu_295_p2() {
    tmp_5_fu_295_p2 = (!p_2_reg_117.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(p_2_reg_117.read() == ap_const_lv2_3);
}

void convolve_kernel::thread_tmp_6_fu_372_p1() {
    tmp_6_fu_372_p1 = esl_zext<32,3>(p_4_reg_141.read());
}

void convolve_kernel::thread_tmp_7_cast8_fu_307_p1() {
    tmp_7_cast8_fu_307_p1 = esl_zext<6,2>(p_2_reg_117.read());
}

void convolve_kernel::thread_tmp_7_cast_fu_326_p1() {
    tmp_7_cast_fu_326_p1 = esl_zext<3,2>(p_2_reg_117.read());
}

void convolve_kernel::thread_tmp_7_fu_275_p3() {
    tmp_7_fu_275_p3 = esl_concat<6,2>(tmp_4_reg_498.read(), ap_const_lv2_0);
}

void convolve_kernel::thread_tmp_8_fu_330_p2() {
    tmp_8_fu_330_p2 = (!p_3_reg_129.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(p_3_reg_129.read() == ap_const_lv2_3);
}

void convolve_kernel::thread_tmp_9_cast_cast_fu_406_p1() {
    tmp_9_cast_cast_fu_406_p1 = esl_zext<7,3>(tmp_9_reg_584.read());
}

void convolve_kernel::thread_tmp_9_fu_389_p2() {
    tmp_9_fu_389_p2 = (!p_4_reg_141.read().is_01() || !tmp_7_cast_reg_538.read().is_01())? sc_lv<3>(): (sc_biguint<3>(p_4_reg_141.read()) + sc_biguint<3>(tmp_7_cast_reg_538.read()));
}

void convolve_kernel::thread_tmp_cast7_fu_342_p1() {
    tmp_cast7_fu_342_p1 = esl_zext<6,2>(p_3_reg_129.read());
}

void convolve_kernel::thread_tmp_cast_fu_356_p1() {
    tmp_cast_fu_356_p1 = esl_zext<3,2>(p_3_reg_129.read());
}

void convolve_kernel::thread_tmp_fu_195_p2() {
    tmp_fu_195_p2 = (!p_s_reg_95.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(p_s_reg_95.read() == ap_const_lv2_3);
}

void convolve_kernel::thread_tmp_s_fu_211_p3() {
    tmp_s_fu_211_p3 = esl_concat<2,2>(p_s_reg_95.read(), ap_const_lv2_0);
}

void convolve_kernel::thread_to_b_V_fu_201_p2() {
    to_b_V_fu_201_p2 = (!p_s_reg_95.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(p_s_reg_95.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_kernel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_195_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_2_fu_233_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_5_fu_295_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(tmp_8_fu_330_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(tmp_3_fu_360_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(tmp_10_fu_434_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

void convolve_kernel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_Addr_A\" :  \"" << bufw_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_EN_A\" :  \"" << bufw_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_WEN_A\" :  \"" << bufw_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_Din_A\" :  \"" << bufw_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"bufw_Dout_A\" :  \"" << bufw_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_Clk_A\" :  \"" << bufw_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufw_Rst_A\" :  \"" << bufw_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_Addr_A\" :  \"" << bufi_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_EN_A\" :  \"" << bufi_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_WEN_A\" :  \"" << bufi_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_Din_A\" :  \"" << bufi_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"bufi_Dout_A\" :  \"" << bufi_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_Clk_A\" :  \"" << bufi_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufi_Rst_A\" :  \"" << bufi_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_Addr_A\" :  \"" << bufo_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_EN_A\" :  \"" << bufo_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_WEN_A\" :  \"" << bufo_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_Din_A\" :  \"" << bufo_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"bufo_Dout_A\" :  \"" << bufo_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_Clk_A\" :  \"" << bufo_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bufo_Rst_A\" :  \"" << bufo_Rst_A.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

