// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "aesl_mux_load_5_3_x_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic aesl_mux_load_5_3_x_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic aesl_mux_load_5_3_x_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> aesl_mux_load_5_3_x_s::ap_ST_fsm_pp0_stage0 = "1";
const bool aesl_mux_load_5_3_x_s::ap_const_boolean_1 = true;
const sc_lv<32> aesl_mux_load_5_3_x_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool aesl_mux_load_5_3_x_s::ap_const_boolean_0 = false;
const sc_lv<32> aesl_mux_load_5_3_x_s::ap_const_lv32_2 = "10";
const sc_lv<2> aesl_mux_load_5_3_x_s::ap_const_lv2_0 = "00";
const sc_lv<3> aesl_mux_load_5_3_x_s::ap_const_lv3_0 = "000";
const sc_lv<3> aesl_mux_load_5_3_x_s::ap_const_lv3_1 = "1";
const sc_lv<3> aesl_mux_load_5_3_x_s::ap_const_lv3_2 = "10";
const sc_lv<3> aesl_mux_load_5_3_x_s::ap_const_lv3_3 = "11";
const sc_lv<4> aesl_mux_load_5_3_x_s::ap_const_lv4_0 = "0000";

aesl_mux_load_5_3_x_s::aesl_mux_load_5_3_x_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( ap_start );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter4);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_ap_idle_pp0_0to3);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to3 );

    SC_METHOD(thread_ap_reset_start_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to3 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );
    sensitive << ( empty_32_reg_297 );
    sensitive << ( sel_tmp6_reg_317 );
    sensitive << ( sel_tmp5_fu_212_p3 );

    SC_METHOD(thread_empty_11_Addr_A);
    sensitive << ( tmp_25_reg_243 );

    SC_METHOD(thread_empty_11_Din_A);

    SC_METHOD(thread_empty_11_EN_A);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_empty_11_WEN_A);

    SC_METHOD(thread_empty_12_Addr_A);
    sensitive << ( tmp_25_reg_243 );

    SC_METHOD(thread_empty_12_Din_A);

    SC_METHOD(thread_empty_12_EN_A);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_empty_12_WEN_A);

    SC_METHOD(thread_empty_13_Addr_A);
    sensitive << ( tmp_25_reg_243 );

    SC_METHOD(thread_empty_13_Din_A);

    SC_METHOD(thread_empty_13_EN_A);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_empty_13_WEN_A);

    SC_METHOD(thread_empty_14_Addr_A);
    sensitive << ( tmp_25_reg_243 );

    SC_METHOD(thread_empty_14_Din_A);

    SC_METHOD(thread_empty_14_EN_A);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_empty_14_WEN_A);

    SC_METHOD(thread_empty_15_Addr_A);
    sensitive << ( tmp_25_reg_243 );

    SC_METHOD(thread_empty_15_Din_A);

    SC_METHOD(thread_empty_15_EN_A);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_empty_15_WEN_A);

    SC_METHOD(thread_p_cast1_fu_130_p1);
    sensitive << ( empty_18 );

    SC_METHOD(thread_p_cast2_fu_162_p1);
    sensitive << ( tmp_16_reg_224 );

    SC_METHOD(thread_p_cast_fu_134_p1);
    sensitive << ( empty_17 );

    SC_METHOD(thread_p_shl1_fu_146_p1);
    sensitive << ( tmp_fu_138_p3 );

    SC_METHOD(thread_sel_tmp1_fu_201_p3);
    sensitive << ( empty_28_reg_277 );
    sensitive << ( empty_29_reg_282 );
    sensitive << ( sel_tmp_reg_302 );

    SC_METHOD(thread_sel_tmp2_fu_186_p2);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_reg_pp0_iter2_tmp_19_reg_229 );

    SC_METHOD(thread_sel_tmp3_fu_206_p3);
    sensitive << ( empty_30_reg_287 );
    sensitive << ( sel_tmp2_reg_307 );
    sensitive << ( sel_tmp1_fu_201_p3 );

    SC_METHOD(thread_sel_tmp4_fu_191_p2);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_reg_pp0_iter2_tmp_19_reg_229 );

    SC_METHOD(thread_sel_tmp5_fu_212_p3);
    sensitive << ( empty_31_reg_292 );
    sensitive << ( sel_tmp4_reg_312 );
    sensitive << ( sel_tmp3_fu_206_p3 );

    SC_METHOD(thread_sel_tmp6_fu_196_p2);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_reg_pp0_iter2_tmp_19_reg_229 );

    SC_METHOD(thread_sel_tmp_fu_181_p2);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_reg_pp0_iter2_tmp_19_reg_229 );

    SC_METHOD(thread_tmp_20_fu_165_p2);
    sensitive << ( tmp_23_reg_237 );

    SC_METHOD(thread_tmp_23_fu_156_p2);
    sensitive << ( tmp_s_fu_150_p2 );
    sensitive << ( p_cast1_fu_130_p1 );

    SC_METHOD(thread_tmp_24_fu_170_p2);
    sensitive << ( tmp_23_reg_237 );
    sensitive << ( tmp_20_fu_165_p2 );

    SC_METHOD(thread_tmp_25_fu_175_p2);
    sensitive << ( tmp_24_fu_170_p2 );
    sensitive << ( p_cast2_fu_162_p1 );

    SC_METHOD(thread_tmp_fu_138_p3);
    sensitive << ( empty_17 );

    SC_METHOD(thread_tmp_s_fu_150_p2);
    sensitive << ( p_shl1_fu_146_p1 );
    sensitive << ( p_cast_fu_134_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_reset_idle_pp0 );
    sensitive << ( ap_reset_start_pp0 );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "aesl_mux_load_5_3_x_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
    sc_trace(mVcdFile, empty_11_Addr_A, "(port)empty_11_Addr_A");
    sc_trace(mVcdFile, empty_11_EN_A, "(port)empty_11_EN_A");
    sc_trace(mVcdFile, empty_11_WEN_A, "(port)empty_11_WEN_A");
    sc_trace(mVcdFile, empty_11_Din_A, "(port)empty_11_Din_A");
    sc_trace(mVcdFile, empty_11_Dout_A, "(port)empty_11_Dout_A");
    sc_trace(mVcdFile, empty_12_Addr_A, "(port)empty_12_Addr_A");
    sc_trace(mVcdFile, empty_12_EN_A, "(port)empty_12_EN_A");
    sc_trace(mVcdFile, empty_12_WEN_A, "(port)empty_12_WEN_A");
    sc_trace(mVcdFile, empty_12_Din_A, "(port)empty_12_Din_A");
    sc_trace(mVcdFile, empty_12_Dout_A, "(port)empty_12_Dout_A");
    sc_trace(mVcdFile, empty_13_Addr_A, "(port)empty_13_Addr_A");
    sc_trace(mVcdFile, empty_13_EN_A, "(port)empty_13_EN_A");
    sc_trace(mVcdFile, empty_13_WEN_A, "(port)empty_13_WEN_A");
    sc_trace(mVcdFile, empty_13_Din_A, "(port)empty_13_Din_A");
    sc_trace(mVcdFile, empty_13_Dout_A, "(port)empty_13_Dout_A");
    sc_trace(mVcdFile, empty_14_Addr_A, "(port)empty_14_Addr_A");
    sc_trace(mVcdFile, empty_14_EN_A, "(port)empty_14_EN_A");
    sc_trace(mVcdFile, empty_14_WEN_A, "(port)empty_14_WEN_A");
    sc_trace(mVcdFile, empty_14_Din_A, "(port)empty_14_Din_A");
    sc_trace(mVcdFile, empty_14_Dout_A, "(port)empty_14_Dout_A");
    sc_trace(mVcdFile, empty_15_Addr_A, "(port)empty_15_Addr_A");
    sc_trace(mVcdFile, empty_15_EN_A, "(port)empty_15_EN_A");
    sc_trace(mVcdFile, empty_15_WEN_A, "(port)empty_15_WEN_A");
    sc_trace(mVcdFile, empty_15_Din_A, "(port)empty_15_Din_A");
    sc_trace(mVcdFile, empty_15_Dout_A, "(port)empty_15_Dout_A");
    sc_trace(mVcdFile, empty_16, "(port)empty_16");
    sc_trace(mVcdFile, empty_17, "(port)empty_17");
    sc_trace(mVcdFile, empty_18, "(port)empty_18");
    sc_trace(mVcdFile, empty, "(port)empty");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter4, "ap_block_state5_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, tmp_16_reg_224, "tmp_16_reg_224");
    sc_trace(mVcdFile, tmp_19_reg_229, "tmp_19_reg_229");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_tmp_19_reg_229, "ap_reg_pp0_iter1_tmp_19_reg_229");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_19_reg_229, "ap_reg_pp0_iter2_tmp_19_reg_229");
    sc_trace(mVcdFile, tmp_23_fu_156_p2, "tmp_23_fu_156_p2");
    sc_trace(mVcdFile, tmp_23_reg_237, "tmp_23_reg_237");
    sc_trace(mVcdFile, tmp_25_fu_175_p2, "tmp_25_fu_175_p2");
    sc_trace(mVcdFile, tmp_25_reg_243, "tmp_25_reg_243");
    sc_trace(mVcdFile, empty_28_reg_277, "empty_28_reg_277");
    sc_trace(mVcdFile, empty_29_reg_282, "empty_29_reg_282");
    sc_trace(mVcdFile, empty_30_reg_287, "empty_30_reg_287");
    sc_trace(mVcdFile, empty_31_reg_292, "empty_31_reg_292");
    sc_trace(mVcdFile, empty_32_reg_297, "empty_32_reg_297");
    sc_trace(mVcdFile, sel_tmp_fu_181_p2, "sel_tmp_fu_181_p2");
    sc_trace(mVcdFile, sel_tmp_reg_302, "sel_tmp_reg_302");
    sc_trace(mVcdFile, sel_tmp2_fu_186_p2, "sel_tmp2_fu_186_p2");
    sc_trace(mVcdFile, sel_tmp2_reg_307, "sel_tmp2_reg_307");
    sc_trace(mVcdFile, sel_tmp4_fu_191_p2, "sel_tmp4_fu_191_p2");
    sc_trace(mVcdFile, sel_tmp4_reg_312, "sel_tmp4_reg_312");
    sc_trace(mVcdFile, sel_tmp6_fu_196_p2, "sel_tmp6_fu_196_p2");
    sc_trace(mVcdFile, sel_tmp6_reg_317, "sel_tmp6_reg_317");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, tmp_fu_138_p3, "tmp_fu_138_p3");
    sc_trace(mVcdFile, p_shl1_fu_146_p1, "p_shl1_fu_146_p1");
    sc_trace(mVcdFile, p_cast_fu_134_p1, "p_cast_fu_134_p1");
    sc_trace(mVcdFile, tmp_s_fu_150_p2, "tmp_s_fu_150_p2");
    sc_trace(mVcdFile, p_cast1_fu_130_p1, "p_cast1_fu_130_p1");
    sc_trace(mVcdFile, tmp_20_fu_165_p2, "tmp_20_fu_165_p2");
    sc_trace(mVcdFile, tmp_24_fu_170_p2, "tmp_24_fu_170_p2");
    sc_trace(mVcdFile, p_cast2_fu_162_p1, "p_cast2_fu_162_p1");
    sc_trace(mVcdFile, sel_tmp1_fu_201_p3, "sel_tmp1_fu_201_p3");
    sc_trace(mVcdFile, sel_tmp3_fu_206_p3, "sel_tmp3_fu_206_p3");
    sc_trace(mVcdFile, sel_tmp5_fu_212_p3, "sel_tmp5_fu_212_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to3, "ap_idle_pp0_0to3");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_reset_start_pp0, "ap_reset_start_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

aesl_mux_load_5_3_x_s::~aesl_mux_load_5_3_x_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void aesl_mux_load_5_3_x_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_reg_pp0_iter1_tmp_19_reg_229 = tmp_19_reg_229.read();
        tmp_16_reg_224 = empty.read();
        tmp_19_reg_229 = empty_16.read();
        tmp_23_reg_237 = tmp_23_fu_156_p2.read();
        tmp_25_reg_243 = tmp_25_fu_175_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_reg_pp0_iter2_tmp_19_reg_229 = ap_reg_pp0_iter1_tmp_19_reg_229.read();
        empty_28_reg_277 = empty_15_Dout_A.read();
        empty_29_reg_282 = empty_11_Dout_A.read();
        empty_30_reg_287 = empty_12_Dout_A.read();
        empty_31_reg_292 = empty_13_Dout_A.read();
        empty_32_reg_297 = empty_14_Dout_A.read();
        sel_tmp2_reg_307 = sel_tmp2_fu_186_p2.read();
        sel_tmp4_reg_312 = sel_tmp4_fu_191_p2.read();
        sel_tmp6_reg_317 = sel_tmp6_fu_196_p2.read();
        sel_tmp_reg_302 = sel_tmp_fu_181_p2.read();
    }
}

void aesl_mux_load_5_3_x_s::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void aesl_mux_load_5_3_x_s::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void aesl_mux_load_5_3_x_s::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void aesl_mux_load_5_3_x_s::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_0));
}

void aesl_mux_load_5_3_x_s::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read());
}

void aesl_mux_load_5_3_x_s::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void aesl_mux_load_5_3_x_s::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void aesl_mux_load_5_3_x_s::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void aesl_mux_load_5_3_x_s::thread_ap_block_state5_pp0_stage0_iter4() {
    ap_block_state5_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void aesl_mux_load_5_3_x_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void aesl_mux_load_5_3_x_s::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void aesl_mux_load_5_3_x_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_ap_idle_pp0_0to3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0_0to3 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to3 = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to3.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_ap_reset_start_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()))) {
        ap_reset_start_pp0 = ap_const_logic_1;
    } else {
        ap_reset_start_pp0 = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_ap_return() {
    ap_return = (!sel_tmp6_reg_317.read()[0].is_01())? sc_lv<32>(): ((sel_tmp6_reg_317.read()[0].to_bool())? empty_32_reg_297.read(): sel_tmp5_fu_212_p3.read());
}

void aesl_mux_load_5_3_x_s::thread_empty_11_Addr_A() {
    empty_11_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_25_reg_243.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void aesl_mux_load_5_3_x_s::thread_empty_11_Din_A() {
    empty_11_Din_A = ap_const_lv32_0;
}

void aesl_mux_load_5_3_x_s::thread_empty_11_EN_A() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        empty_11_EN_A = ap_const_logic_1;
    } else {
        empty_11_EN_A = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_empty_11_WEN_A() {
    empty_11_WEN_A = ap_const_lv4_0;
}

void aesl_mux_load_5_3_x_s::thread_empty_12_Addr_A() {
    empty_12_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_25_reg_243.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void aesl_mux_load_5_3_x_s::thread_empty_12_Din_A() {
    empty_12_Din_A = ap_const_lv32_0;
}

void aesl_mux_load_5_3_x_s::thread_empty_12_EN_A() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        empty_12_EN_A = ap_const_logic_1;
    } else {
        empty_12_EN_A = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_empty_12_WEN_A() {
    empty_12_WEN_A = ap_const_lv4_0;
}

void aesl_mux_load_5_3_x_s::thread_empty_13_Addr_A() {
    empty_13_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_25_reg_243.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void aesl_mux_load_5_3_x_s::thread_empty_13_Din_A() {
    empty_13_Din_A = ap_const_lv32_0;
}

void aesl_mux_load_5_3_x_s::thread_empty_13_EN_A() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        empty_13_EN_A = ap_const_logic_1;
    } else {
        empty_13_EN_A = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_empty_13_WEN_A() {
    empty_13_WEN_A = ap_const_lv4_0;
}

void aesl_mux_load_5_3_x_s::thread_empty_14_Addr_A() {
    empty_14_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_25_reg_243.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void aesl_mux_load_5_3_x_s::thread_empty_14_Din_A() {
    empty_14_Din_A = ap_const_lv32_0;
}

void aesl_mux_load_5_3_x_s::thread_empty_14_EN_A() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        empty_14_EN_A = ap_const_logic_1;
    } else {
        empty_14_EN_A = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_empty_14_WEN_A() {
    empty_14_WEN_A = ap_const_lv4_0;
}

void aesl_mux_load_5_3_x_s::thread_empty_15_Addr_A() {
    empty_15_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_25_reg_243.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void aesl_mux_load_5_3_x_s::thread_empty_15_Din_A() {
    empty_15_Din_A = ap_const_lv32_0;
}

void aesl_mux_load_5_3_x_s::thread_empty_15_EN_A() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        empty_15_EN_A = ap_const_logic_1;
    } else {
        empty_15_EN_A = ap_const_logic_0;
    }
}

void aesl_mux_load_5_3_x_s::thread_empty_15_WEN_A() {
    empty_15_WEN_A = ap_const_lv4_0;
}

void aesl_mux_load_5_3_x_s::thread_p_cast1_fu_130_p1() {
    p_cast1_fu_130_p1 = esl_zext<32,2>(empty_18.read());
}

void aesl_mux_load_5_3_x_s::thread_p_cast2_fu_162_p1() {
    p_cast2_fu_162_p1 = esl_zext<32,4>(tmp_16_reg_224.read());
}

void aesl_mux_load_5_3_x_s::thread_p_cast_fu_134_p1() {
    p_cast_fu_134_p1 = esl_zext<32,2>(empty_17.read());
}

void aesl_mux_load_5_3_x_s::thread_p_shl1_fu_146_p1() {
    p_shl1_fu_146_p1 = esl_zext<32,4>(tmp_fu_138_p3.read());
}

void aesl_mux_load_5_3_x_s::thread_sel_tmp1_fu_201_p3() {
    sel_tmp1_fu_201_p3 = (!sel_tmp_reg_302.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_reg_302.read()[0].to_bool())? empty_29_reg_282.read(): empty_28_reg_277.read());
}

void aesl_mux_load_5_3_x_s::thread_sel_tmp2_fu_186_p2() {
    sel_tmp2_fu_186_p2 = (!ap_reg_pp0_iter2_tmp_19_reg_229.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<1>(): sc_lv<1>(ap_reg_pp0_iter2_tmp_19_reg_229.read() == ap_const_lv3_1);
}

void aesl_mux_load_5_3_x_s::thread_sel_tmp3_fu_206_p3() {
    sel_tmp3_fu_206_p3 = (!sel_tmp2_reg_307.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_reg_307.read()[0].to_bool())? empty_30_reg_287.read(): sel_tmp1_fu_201_p3.read());
}

void aesl_mux_load_5_3_x_s::thread_sel_tmp4_fu_191_p2() {
    sel_tmp4_fu_191_p2 = (!ap_reg_pp0_iter2_tmp_19_reg_229.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(ap_reg_pp0_iter2_tmp_19_reg_229.read() == ap_const_lv3_2);
}

void aesl_mux_load_5_3_x_s::thread_sel_tmp5_fu_212_p3() {
    sel_tmp5_fu_212_p3 = (!sel_tmp4_reg_312.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_reg_312.read()[0].to_bool())? empty_31_reg_292.read(): sel_tmp3_fu_206_p3.read());
}

void aesl_mux_load_5_3_x_s::thread_sel_tmp6_fu_196_p2() {
    sel_tmp6_fu_196_p2 = (!ap_reg_pp0_iter2_tmp_19_reg_229.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(ap_reg_pp0_iter2_tmp_19_reg_229.read() == ap_const_lv3_3);
}

void aesl_mux_load_5_3_x_s::thread_sel_tmp_fu_181_p2() {
    sel_tmp_fu_181_p2 = (!ap_reg_pp0_iter2_tmp_19_reg_229.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_reg_pp0_iter2_tmp_19_reg_229.read() == ap_const_lv3_0);
}

void aesl_mux_load_5_3_x_s::thread_tmp_20_fu_165_p2() {
    tmp_20_fu_165_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): tmp_23_reg_237.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void aesl_mux_load_5_3_x_s::thread_tmp_23_fu_156_p2() {
    tmp_23_fu_156_p2 = (!tmp_s_fu_150_p2.read().is_01() || !p_cast1_fu_130_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_s_fu_150_p2.read()) + sc_biguint<32>(p_cast1_fu_130_p1.read()));
}

void aesl_mux_load_5_3_x_s::thread_tmp_24_fu_170_p2() {
    tmp_24_fu_170_p2 = (!tmp_23_reg_237.read().is_01() || !tmp_20_fu_165_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_23_reg_237.read()) + sc_biguint<32>(tmp_20_fu_165_p2.read()));
}

void aesl_mux_load_5_3_x_s::thread_tmp_25_fu_175_p2() {
    tmp_25_fu_175_p2 = (!tmp_24_fu_170_p2.read().is_01() || !p_cast2_fu_162_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_24_fu_170_p2.read()) + sc_biguint<32>(p_cast2_fu_162_p1.read()));
}

void aesl_mux_load_5_3_x_s::thread_tmp_fu_138_p3() {
    tmp_fu_138_p3 = esl_concat<2,2>(empty_17.read(), ap_const_lv2_0);
}

void aesl_mux_load_5_3_x_s::thread_tmp_s_fu_150_p2() {
    tmp_s_fu_150_p2 = (!p_shl1_fu_146_p1.read().is_01() || !p_cast_fu_134_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_shl1_fu_146_p1.read()) - sc_biguint<32>(p_cast_fu_134_p1.read()));
}

void aesl_mux_load_5_3_x_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

