Default sythesized implementation has latency of 25351 and interval of 25352, clock target 10 ns.
With the other settings for kernel size (5x5) and iteration bounds (Tm = Tr = Tc = Tn = 3)
the expected FLOPs for this is:
2 * 3^4 * K^2 / (25351 / 100MHz) = 0.0159 GFLOPs. Far cry from the results in the paper (~62 GFLOPs).

Yifei noticed in the kernel that the outer loops were iterating over the inside of each output feature element, and then over the output features and input features. It would make more sense for pipelineing to iterate over the output features and then input features, to move data sharing dependencies to outer loops that don't change as often.

Optimization idea:
unroll the outer loop that iterates over the kernel (KxK).
Results in reduction of latency to 24877.

unrolling both dimensions of the kernel weight traversal loops results in latency of 10783.

Idea:
Switch to arbitrary precision and pipeline the loop that iterates over


Solution:
switched to arbitrary precision, and implemented loop reordering as in the paper. Then unrolled the input and output loops (which are the two innermost loops). 
Latency: 9141
Target Clock Period: 5ns = 5E-9
FLOPs: 2*3^4 * K^2 / (9141 * 5E-9) = 0.0886 GFLOPs
Still REALLY low...
And having trouble making timing at 5ns.


Solution:
Pull mem accesses for bufo to net loop up, since it is irrelevant to the two inner loops.
Latency: 22191 
Target clock: 5E-9 (and making timing)
FLOPs: 2*3^4 * K^2 / (22191 * 5E-9) = 0.0365 GFLOPs
Hmmm...

Solution:
From above, change code so temp doesn't need to read the output before.
Instead, init to 0, accumulate the mults, and then plusequals to output cell.
Latency: 16117
This is an improvement.
Critical path is now reported to be reading of input feature map cells.
Note: not quite making timing (5ns)


Solution:
Pipeline on col_loop to see how it goes...
Interval: 4542
Note: timing misses at 6.67ns
Crit path is on read and write to output because of the above change.
Changing is back now...

Solution:
Separated read and write to output, keeping pipeline on col_loop.
ALSO: IMPORTANT: Reshaped bufo to be wider. That should help with unrolled loop accesses.
Interval: 1174
Timing: missed at 5.64
GFLOPs: 0.690!!!
Reported crit path is load and store on bufo, still.
Also limited memory ports to load bufw.


Solution:
Reshape dimension 1 of bufw to widen the ports and help with that load issue.
Interval: 500
Timing: missing at 6.21ns
Crit still on bufw load not having enought ports and bufo store and loads taking too long to collapse the timing.


Solution:
Removed temp2. In retrospect this seems nonsensical: the load still happens for temp2, and there is an extra add just to accumulate everything together.
EDIT: nevermind. Interval more than double to 1164 and still missing timing. WTH?

Solution:
Some more rearrangement of the accesses brings it back to
Interval: 500
Timing: miss at 6.21

Solution:
All arrays are now reshaped on their 1st dimension.
Interval: 499
Timing: miss at 6.21

Solution:
Increase Tm to 200, increase other block sizes to 4.
Remove bram reshapes.
Interval:
Timing:
GFLOPs:
