// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="array_io,hls_ip_2017_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.359333,HLS_SYN_LAT=11,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3532,HLS_SYN_LUT=2008}" *)

module array_io (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d_o_0_din,
        d_o_0_full_n,
        d_o_0_write,
        d_o_1_din,
        d_o_1_full_n,
        d_o_1_write,
        d_o_2_din,
        d_o_2_full_n,
        d_o_2_write,
        d_o_3_din,
        d_o_3_full_n,
        d_o_3_write,
        d_i_0_address0,
        d_i_0_ce0,
        d_i_0_q0,
        d_i_0_address1,
        d_i_0_ce1,
        d_i_0_q1,
        d_i_1_address0,
        d_i_1_ce0,
        d_i_1_q0,
        d_i_1_address1,
        d_i_1_ce1,
        d_i_1_q1
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] d_o_0_din;
input   d_o_0_full_n;
output   d_o_0_write;
output  [15:0] d_o_1_din;
input   d_o_1_full_n;
output   d_o_1_write;
output  [15:0] d_o_2_din;
input   d_o_2_full_n;
output   d_o_2_write;
output  [15:0] d_o_3_din;
input   d_o_3_full_n;
output   d_o_3_write;
output  [3:0] d_i_0_address0;
output   d_i_0_ce0;
input  [15:0] d_i_0_q0;
output  [3:0] d_i_0_address1;
output   d_i_0_ce1;
input  [15:0] d_i_0_q1;
output  [3:0] d_i_1_address0;
output   d_i_1_ce0;
input  [15:0] d_i_1_q0;
output  [3:0] d_i_1_address1;
output   d_i_1_ce1;
input  [15:0] d_i_1_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] d_o_0_din;
reg d_o_0_write;
reg[15:0] d_o_1_din;
reg d_o_1_write;
reg[15:0] d_o_2_din;
reg d_o_2_write;
reg[15:0] d_o_3_din;
reg d_o_3_write;
reg[3:0] d_i_0_address0;
reg d_i_0_ce0;
reg[3:0] d_i_0_address1;
reg d_i_0_ce1;
reg[3:0] d_i_1_address0;
reg d_i_1_ce0;
reg[3:0] d_i_1_address1;
reg d_i_1_ce1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] acc_0;
reg   [31:0] acc_1;
reg   [31:0] acc_2;
reg   [31:0] acc_3;
reg   [31:0] acc_4;
reg   [31:0] acc_5;
reg   [31:0] acc_6;
reg   [31:0] acc_7;
reg    d_o_0_blk_n;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    d_o_1_blk_n;
reg    d_o_2_blk_n;
reg    d_o_3_blk_n;
reg   [15:0] reg_410;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
reg    ap_block_state6;
reg    ap_block_state8;
reg    ap_block_state10;
reg   [15:0] reg_414;
reg   [15:0] reg_418;
reg    ap_block_state5;
reg    ap_block_state7;
reg    ap_block_state9;
reg   [15:0] reg_423;
wire    ap_CS_fsm_state3;
reg   [15:0] reg_427;
reg   [15:0] reg_431;
reg   [15:0] reg_436;
reg   [15:0] reg_440;
wire   [15:0] tmp_8_fu_452_p2;
reg   [15:0] tmp_8_reg_1148;
wire   [16:0] tmp3_fu_466_p2;
reg   [16:0] tmp3_reg_1169;
wire   [15:0] tmp_1_1_fu_484_p2;
reg   [15:0] tmp_1_1_reg_1184;
wire   [15:0] tmp_1_8_fu_494_p2;
reg   [15:0] tmp_1_8_reg_1195;
wire   [15:0] tmp_1_15_fu_499_p2;
reg   [15:0] tmp_1_15_reg_1205;
wire   [16:0] tmp6_fu_543_p2;
reg   [16:0] tmp6_reg_1216;
wire   [15:0] tmp_1_2_fu_561_p2;
reg   [15:0] tmp_1_2_reg_1231;
wire   [15:0] tmp_1_9_fu_571_p2;
reg   [15:0] tmp_1_9_reg_1242;
wire   [15:0] tmp_1_16_fu_576_p2;
reg   [15:0] tmp_1_16_reg_1252;
wire   [16:0] tmp9_fu_626_p2;
reg   [16:0] tmp9_reg_1263;
wire   [15:0] tmp_1_3_fu_644_p2;
reg   [15:0] tmp_1_3_reg_1278;
wire   [15:0] tmp_1_s_fu_654_p2;
reg   [15:0] tmp_1_s_reg_1289;
wire   [15:0] tmp_1_17_fu_659_p2;
reg   [15:0] tmp_1_17_reg_1299;
wire   [16:0] tmp12_fu_709_p2;
reg   [16:0] tmp12_reg_1310;
wire   [15:0] tmp_1_4_fu_727_p2;
reg   [15:0] tmp_1_4_reg_1325;
wire   [15:0] tmp_1_10_fu_737_p2;
reg   [15:0] tmp_1_10_reg_1336;
wire   [15:0] tmp_1_18_fu_742_p2;
reg   [15:0] tmp_1_18_reg_1346;
wire   [16:0] tmp15_fu_792_p2;
reg   [16:0] tmp15_reg_1357;
wire   [15:0] tmp_1_5_fu_810_p2;
reg   [15:0] tmp_1_5_reg_1372;
wire   [15:0] tmp_1_11_fu_820_p2;
reg   [15:0] tmp_1_11_reg_1383;
wire   [15:0] tmp_1_19_fu_825_p2;
reg   [15:0] tmp_1_19_reg_1393;
wire   [16:0] tmp18_fu_875_p2;
reg   [16:0] tmp18_reg_1404;
wire   [15:0] tmp_1_6_fu_893_p2;
reg   [15:0] tmp_1_6_reg_1419;
wire   [15:0] tmp_1_12_fu_903_p2;
reg   [15:0] tmp_1_12_reg_1425;
wire   [15:0] tmp_1_20_fu_908_p2;
reg   [15:0] tmp_1_20_reg_1435;
wire   [16:0] tmp21_fu_958_p2;
reg   [16:0] tmp21_reg_1441;
wire   [15:0] tmp_1_7_fu_976_p2;
reg   [15:0] tmp_1_7_reg_1451;
wire   [15:0] tmp_1_13_fu_986_p2;
reg   [15:0] tmp_1_13_reg_1457;
wire   [15:0] tmp_1_21_fu_991_p2;
reg   [15:0] tmp_1_21_reg_1462;
wire   [16:0] tmp24_fu_1041_p2;
reg   [16:0] tmp24_reg_1468;
wire   [15:0] tmp_1_14_fu_1055_p2;
reg   [15:0] tmp_1_14_reg_1473;
reg    ap_block_state11;
wire   [15:0] tmp_1_22_fu_1060_p2;
reg   [15:0] tmp_1_22_reg_1478;
reg    ap_block_state12;
wire   [15:0] tmp_1_23_fu_586_p2;
wire   [15:0] tmp_1_24_fu_669_p2;
wire   [15:0] tmp_1_25_fu_752_p2;
wire   [15:0] tmp_1_26_fu_835_p2;
wire   [15:0] tmp_1_27_fu_918_p2;
wire   [15:0] tmp_1_28_fu_1001_p2;
wire   [15:0] tmp_1_29_fu_1066_p2;
wire   [15:0] tmp_1_30_fu_1102_p2;
wire   [31:0] temp_s_fu_527_p2;
wire   [31:0] temp_1_fu_610_p2;
wire   [31:0] temp_2_fu_693_p2;
wire   [31:0] temp_3_fu_776_p2;
wire   [31:0] temp_4_fu_859_p2;
wire   [31:0] temp_5_fu_942_p2;
wire   [31:0] temp_6_fu_1025_p2;
wire   [31:0] temp_7_fu_1090_p2;
wire   [15:0] tmp_1_fu_448_p1;
wire  signed [16:0] tmp_16_cast_fu_458_p1;
wire  signed [16:0] tmp_24_cast_fu_462_p1;
wire   [15:0] tmp_9_fu_480_p1;
wire  signed [31:0] tmp_fu_472_p1;
wire  signed [17:0] tmp3_cast_fu_514_p1;
wire  signed [17:0] tmp_8_cast_fu_490_p1;
wire   [17:0] tmp2_fu_517_p2;
wire  signed [31:0] tmp2_cast_fu_523_p1;
wire   [31:0] tmp1_fu_509_p2;
wire  signed [16:0] tmp_17_cast_fu_505_p1;
wire  signed [16:0] tmp_25_cast_fu_539_p1;
wire   [15:0] tmp_10_fu_557_p1;
wire  signed [31:0] tmp_s_fu_549_p1;
wire  signed [17:0] tmp6_cast_fu_597_p1;
wire  signed [17:0] tmp_9_cast_fu_567_p1;
wire   [17:0] tmp5_fu_600_p2;
wire  signed [31:0] tmp5_cast_fu_606_p1;
wire   [31:0] tmp4_fu_592_p2;
wire  signed [16:0] tmp_18_cast_fu_582_p1;
wire  signed [16:0] tmp_26_cast_fu_622_p1;
wire   [15:0] tmp_11_fu_640_p1;
wire  signed [31:0] tmp_2_fu_632_p1;
wire  signed [17:0] tmp9_cast_fu_680_p1;
wire  signed [17:0] tmp_10_cast_fu_650_p1;
wire   [17:0] tmp8_fu_683_p2;
wire  signed [31:0] tmp8_cast_fu_689_p1;
wire   [31:0] tmp7_fu_675_p2;
wire  signed [16:0] tmp_19_cast_fu_665_p1;
wire  signed [16:0] tmp_27_cast_fu_705_p1;
wire   [15:0] tmp_12_fu_723_p1;
wire  signed [31:0] tmp_3_fu_715_p1;
wire  signed [17:0] tmp12_cast_fu_763_p1;
wire  signed [17:0] tmp_11_cast_fu_733_p1;
wire   [17:0] tmp11_fu_766_p2;
wire  signed [31:0] tmp11_cast_fu_772_p1;
wire   [31:0] tmp10_fu_758_p2;
wire  signed [16:0] tmp_20_cast_fu_748_p1;
wire  signed [16:0] tmp_28_cast_fu_788_p1;
wire   [15:0] tmp_13_fu_806_p1;
wire  signed [31:0] tmp_4_fu_798_p1;
wire  signed [17:0] tmp15_cast_fu_846_p1;
wire  signed [17:0] tmp_12_cast_fu_816_p1;
wire   [17:0] tmp14_fu_849_p2;
wire  signed [31:0] tmp14_cast_fu_855_p1;
wire   [31:0] tmp13_fu_841_p2;
wire  signed [16:0] tmp_21_cast_fu_831_p1;
wire  signed [16:0] tmp_29_cast_fu_871_p1;
wire   [15:0] tmp_14_fu_889_p1;
wire  signed [31:0] tmp_5_fu_881_p1;
wire  signed [17:0] tmp18_cast_fu_929_p1;
wire  signed [17:0] tmp_13_cast_fu_899_p1;
wire   [17:0] tmp17_fu_932_p2;
wire  signed [31:0] tmp17_cast_fu_938_p1;
wire   [31:0] tmp16_fu_924_p2;
wire  signed [16:0] tmp_22_cast_fu_914_p1;
wire  signed [16:0] tmp_30_cast_fu_954_p1;
wire   [15:0] tmp_15_fu_972_p1;
wire  signed [31:0] tmp_6_fu_964_p1;
wire  signed [17:0] tmp21_cast_fu_1012_p1;
wire  signed [17:0] tmp_14_cast_fu_982_p1;
wire   [17:0] tmp20_fu_1015_p2;
wire  signed [31:0] tmp20_cast_fu_1021_p1;
wire   [31:0] tmp19_fu_1007_p2;
wire  signed [16:0] tmp_23_cast_fu_997_p1;
wire  signed [16:0] tmp_31_cast_fu_1037_p1;
wire  signed [31:0] tmp_7_fu_1047_p1;
wire  signed [17:0] tmp24_cast_fu_1077_p1;
wire  signed [17:0] tmp_15_cast_fu_1051_p1;
wire   [17:0] tmp23_fu_1080_p2;
wire  signed [31:0] tmp23_cast_fu_1086_p1;
wire   [31:0] tmp22_fu_1072_p2;
reg   [11:0] ap_NS_fsm;
reg    ap_condition_145;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 acc_0 = 32'd0;
#0 acc_1 = 32'd0;
#0 acc_2 = 32'd0;
#0 acc_3 = 32'd0;
#0 acc_4 = 32'd0;
#0 acc_5 = 32'd0;
#0 acc_6 = 32'd0;
#0 acc_7 = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))))) begin
        reg_418 <= d_i_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_418 <= d_i_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))))) begin
        reg_431 <= d_i_1_q1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_431 <= d_i_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        acc_0 <= temp_s_fu_527_p2;
        tmp6_reg_1216 <= tmp6_fu_543_p2;
        tmp_1_15_reg_1205 <= tmp_1_15_fu_499_p2;
        tmp_1_1_reg_1184 <= tmp_1_1_fu_484_p2;
        tmp_1_8_reg_1195 <= tmp_1_8_fu_494_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
        acc_1 <= temp_1_fu_610_p2;
        tmp9_reg_1263 <= tmp9_fu_626_p2;
        tmp_1_16_reg_1252 <= tmp_1_16_fu_576_p2;
        tmp_1_2_reg_1231 <= tmp_1_2_fu_561_p2;
        tmp_1_9_reg_1242 <= tmp_1_9_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
        acc_2 <= temp_2_fu_693_p2;
        tmp12_reg_1310 <= tmp12_fu_709_p2;
        tmp_1_17_reg_1299 <= tmp_1_17_fu_659_p2;
        tmp_1_3_reg_1278 <= tmp_1_3_fu_644_p2;
        tmp_1_s_reg_1289 <= tmp_1_s_fu_654_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
        acc_3 <= temp_3_fu_776_p2;
        tmp15_reg_1357 <= tmp15_fu_792_p2;
        tmp_1_10_reg_1336 <= tmp_1_10_fu_737_p2;
        tmp_1_18_reg_1346 <= tmp_1_18_fu_742_p2;
        tmp_1_4_reg_1325 <= tmp_1_4_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
        acc_4 <= temp_4_fu_859_p2;
        tmp18_reg_1404 <= tmp18_fu_875_p2;
        tmp_1_11_reg_1383 <= tmp_1_11_fu_820_p2;
        tmp_1_19_reg_1393 <= tmp_1_19_fu_825_p2;
        tmp_1_5_reg_1372 <= tmp_1_5_fu_810_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
        acc_5 <= temp_5_fu_942_p2;
        tmp21_reg_1441 <= tmp21_fu_958_p2;
        tmp_1_12_reg_1425 <= tmp_1_12_fu_903_p2;
        tmp_1_20_reg_1435 <= tmp_1_20_fu_908_p2;
        tmp_1_6_reg_1419 <= tmp_1_6_fu_893_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
        acc_6 <= temp_6_fu_1025_p2;
        tmp24_reg_1468 <= tmp24_fu_1041_p2;
        tmp_1_13_reg_1457 <= tmp_1_13_fu_986_p2;
        tmp_1_21_reg_1462 <= tmp_1_21_fu_991_p2;
        tmp_1_7_reg_1451 <= tmp_1_7_fu_976_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
        acc_7 <= temp_7_fu_1090_p2;
        tmp_1_14_reg_1473 <= tmp_1_14_fu_1055_p2;
        tmp_1_22_reg_1478 <= tmp_1_22_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state10) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))))) begin
        reg_410 <= d_i_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))))) begin
        reg_414 <= d_i_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_423 <= d_i_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_427 <= d_i_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_436 <= d_i_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))))) begin
        reg_440 <= d_i_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp3_reg_1169 <= tmp3_fu_466_p2;
        tmp_8_reg_1148 <= tmp_8_fu_452_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        d_i_0_address0 = 32'd15;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_0_address0 = 32'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_0_address0 = 32'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_0_address0 = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_0_address0 = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_0_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_0_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_0_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_0_address0 = 32'd0;
    end else begin
        d_i_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_0_address1 = 32'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_0_address1 = 32'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_0_address1 = 32'd12;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_0_address1 = 32'd11;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_0_address1 = 32'd10;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_0_address1 = 32'd9;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_0_address1 = 32'd8;
    end else begin
        d_i_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_0_ce0 = 1'b1;
    end else begin
        d_i_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | (1'b1 == ap_CS_fsm_state3))) begin
        d_i_0_ce1 = 1'b1;
    end else begin
        d_i_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_1_address0 = 32'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_1_address0 = 32'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_1_address0 = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_1_address0 = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_1_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_1_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_1_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_1_address0 = 32'd0;
    end else begin
        d_i_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_1_address1 = 32'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_1_address1 = 32'd14;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_1_address1 = 32'd13;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_1_address1 = 32'd12;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_1_address1 = 32'd11;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_1_address1 = 32'd10;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_1_address1 = 32'd9;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_1_address1 = 32'd8;
    end else begin
        d_i_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_1_ce0 = 1'b1;
    end else begin
        d_i_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_1_ce1 = 1'b1;
    end else begin
        d_i_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12))) begin
        d_o_0_blk_n = d_o_0_full_n;
    end else begin
        d_o_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((ap_condition_145 == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            d_o_0_din = tmp_1_7_reg_1451;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            d_o_0_din = tmp_1_6_reg_1419;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            d_o_0_din = tmp_1_5_reg_1372;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            d_o_0_din = tmp_1_4_reg_1325;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            d_o_0_din = tmp_1_3_reg_1278;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            d_o_0_din = tmp_1_2_reg_1231;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            d_o_0_din = tmp_1_1_reg_1184;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            d_o_0_din = tmp_8_reg_1148;
        end else begin
            d_o_0_din = 'bx;
        end
    end else begin
        d_o_0_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state10) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state11) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state12) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))))) begin
        d_o_0_write = 1'b1;
    end else begin
        d_o_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12))) begin
        d_o_1_blk_n = d_o_1_full_n;
    end else begin
        d_o_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((ap_condition_145 == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            d_o_1_din = tmp_1_14_reg_1473;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            d_o_1_din = tmp_1_13_reg_1457;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            d_o_1_din = tmp_1_12_reg_1425;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            d_o_1_din = tmp_1_11_reg_1383;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            d_o_1_din = tmp_1_10_reg_1336;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            d_o_1_din = tmp_1_s_reg_1289;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            d_o_1_din = tmp_1_9_reg_1242;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            d_o_1_din = tmp_1_8_reg_1195;
        end else begin
            d_o_1_din = 'bx;
        end
    end else begin
        d_o_1_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state10) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state11) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state12) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))))) begin
        d_o_1_write = 1'b1;
    end else begin
        d_o_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12))) begin
        d_o_2_blk_n = d_o_2_full_n;
    end else begin
        d_o_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((ap_condition_145 == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            d_o_2_din = tmp_1_22_reg_1478;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            d_o_2_din = tmp_1_21_reg_1462;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            d_o_2_din = tmp_1_20_reg_1435;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            d_o_2_din = tmp_1_19_reg_1393;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            d_o_2_din = tmp_1_18_reg_1346;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            d_o_2_din = tmp_1_17_reg_1299;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            d_o_2_din = tmp_1_16_reg_1252;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            d_o_2_din = tmp_1_15_reg_1205;
        end else begin
            d_o_2_din = 'bx;
        end
    end else begin
        d_o_2_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state10) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state11) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state12) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))))) begin
        d_o_2_write = 1'b1;
    end else begin
        d_o_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12))) begin
        d_o_3_blk_n = d_o_3_full_n;
    end else begin
        d_o_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((ap_condition_145 == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            d_o_3_din = tmp_1_30_fu_1102_p2;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            d_o_3_din = tmp_1_29_fu_1066_p2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            d_o_3_din = tmp_1_28_fu_1001_p2;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            d_o_3_din = tmp_1_27_fu_918_p2;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            d_o_3_din = tmp_1_26_fu_835_p2;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            d_o_3_din = tmp_1_25_fu_752_p2;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            d_o_3_din = tmp_1_24_fu_669_p2;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            d_o_3_din = tmp_1_23_fu_586_p2;
        end else begin
            d_o_3_din = 'bx;
        end
    end else begin
        d_o_3_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state10) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state11) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))) | ((1'b1 == ap_CS_fsm_state12) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n))))) begin
        d_o_3_write = 1'b1;
    end else begin
        d_o_3_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10 = ((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n));
end

always @ (*) begin
    ap_block_state11 = ((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n));
end

always @ (*) begin
    ap_block_state12 = ((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n));
end

always @ (*) begin
    ap_block_state5 = ((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n));
end

always @ (*) begin
    ap_block_state6 = ((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n));
end

always @ (*) begin
    ap_block_state7 = ((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n));
end

always @ (*) begin
    ap_block_state8 = ((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n));
end

always @ (*) begin
    ap_block_state9 = ((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n));
end

always @ (*) begin
    ap_condition_145 = ~((1'b0 == d_o_0_full_n) | (1'b0 == d_o_1_full_n) | (1'b0 == d_o_2_full_n) | (1'b0 == d_o_3_full_n));
end

assign temp_1_fu_610_p2 = ($signed(tmp5_cast_fu_606_p1) + $signed(tmp4_fu_592_p2));

assign temp_2_fu_693_p2 = ($signed(tmp8_cast_fu_689_p1) + $signed(tmp7_fu_675_p2));

assign temp_3_fu_776_p2 = ($signed(tmp11_cast_fu_772_p1) + $signed(tmp10_fu_758_p2));

assign temp_4_fu_859_p2 = ($signed(tmp14_cast_fu_855_p1) + $signed(tmp13_fu_841_p2));

assign temp_5_fu_942_p2 = ($signed(tmp17_cast_fu_938_p1) + $signed(tmp16_fu_924_p2));

assign temp_6_fu_1025_p2 = ($signed(tmp20_cast_fu_1021_p1) + $signed(tmp19_fu_1007_p2));

assign temp_7_fu_1090_p2 = ($signed(tmp23_cast_fu_1086_p1) + $signed(tmp22_fu_1072_p2));

assign temp_s_fu_527_p2 = ($signed(tmp2_cast_fu_523_p1) + $signed(tmp1_fu_509_p2));

assign tmp10_fu_758_p2 = ($signed(acc_3) + $signed(tmp_3_fu_715_p1));

assign tmp11_cast_fu_772_p1 = $signed(tmp11_fu_766_p2);

assign tmp11_fu_766_p2 = ($signed(tmp12_cast_fu_763_p1) + $signed(tmp_11_cast_fu_733_p1));

assign tmp12_cast_fu_763_p1 = $signed(tmp12_reg_1310);

assign tmp12_fu_709_p2 = ($signed(tmp_19_cast_fu_665_p1) + $signed(tmp_27_cast_fu_705_p1));

assign tmp13_fu_841_p2 = ($signed(acc_4) + $signed(tmp_4_fu_798_p1));

assign tmp14_cast_fu_855_p1 = $signed(tmp14_fu_849_p2);

assign tmp14_fu_849_p2 = ($signed(tmp15_cast_fu_846_p1) + $signed(tmp_12_cast_fu_816_p1));

assign tmp15_cast_fu_846_p1 = $signed(tmp15_reg_1357);

assign tmp15_fu_792_p2 = ($signed(tmp_20_cast_fu_748_p1) + $signed(tmp_28_cast_fu_788_p1));

assign tmp16_fu_924_p2 = ($signed(acc_5) + $signed(tmp_5_fu_881_p1));

assign tmp17_cast_fu_938_p1 = $signed(tmp17_fu_932_p2);

assign tmp17_fu_932_p2 = ($signed(tmp18_cast_fu_929_p1) + $signed(tmp_13_cast_fu_899_p1));

assign tmp18_cast_fu_929_p1 = $signed(tmp18_reg_1404);

assign tmp18_fu_875_p2 = ($signed(tmp_21_cast_fu_831_p1) + $signed(tmp_29_cast_fu_871_p1));

assign tmp19_fu_1007_p2 = ($signed(acc_6) + $signed(tmp_6_fu_964_p1));

assign tmp1_fu_509_p2 = ($signed(acc_0) + $signed(tmp_fu_472_p1));

assign tmp20_cast_fu_1021_p1 = $signed(tmp20_fu_1015_p2);

assign tmp20_fu_1015_p2 = ($signed(tmp21_cast_fu_1012_p1) + $signed(tmp_14_cast_fu_982_p1));

assign tmp21_cast_fu_1012_p1 = $signed(tmp21_reg_1441);

assign tmp21_fu_958_p2 = ($signed(tmp_22_cast_fu_914_p1) + $signed(tmp_30_cast_fu_954_p1));

assign tmp22_fu_1072_p2 = ($signed(acc_7) + $signed(tmp_7_fu_1047_p1));

assign tmp23_cast_fu_1086_p1 = $signed(tmp23_fu_1080_p2);

assign tmp23_fu_1080_p2 = ($signed(tmp24_cast_fu_1077_p1) + $signed(tmp_15_cast_fu_1051_p1));

assign tmp24_cast_fu_1077_p1 = $signed(tmp24_reg_1468);

assign tmp24_fu_1041_p2 = ($signed(tmp_23_cast_fu_997_p1) + $signed(tmp_31_cast_fu_1037_p1));

assign tmp2_cast_fu_523_p1 = $signed(tmp2_fu_517_p2);

assign tmp2_fu_517_p2 = ($signed(tmp3_cast_fu_514_p1) + $signed(tmp_8_cast_fu_490_p1));

assign tmp3_cast_fu_514_p1 = $signed(tmp3_reg_1169);

assign tmp3_fu_466_p2 = ($signed(tmp_16_cast_fu_458_p1) + $signed(tmp_24_cast_fu_462_p1));

assign tmp4_fu_592_p2 = ($signed(acc_1) + $signed(tmp_s_fu_549_p1));

assign tmp5_cast_fu_606_p1 = $signed(tmp5_fu_600_p2);

assign tmp5_fu_600_p2 = ($signed(tmp6_cast_fu_597_p1) + $signed(tmp_9_cast_fu_567_p1));

assign tmp6_cast_fu_597_p1 = $signed(tmp6_reg_1216);

assign tmp6_fu_543_p2 = ($signed(tmp_17_cast_fu_505_p1) + $signed(tmp_25_cast_fu_539_p1));

assign tmp7_fu_675_p2 = ($signed(acc_2) + $signed(tmp_2_fu_632_p1));

assign tmp8_cast_fu_689_p1 = $signed(tmp8_fu_683_p2);

assign tmp8_fu_683_p2 = ($signed(tmp9_cast_fu_680_p1) + $signed(tmp_10_cast_fu_650_p1));

assign tmp9_cast_fu_680_p1 = $signed(tmp9_reg_1263);

assign tmp9_fu_626_p2 = ($signed(tmp_18_cast_fu_582_p1) + $signed(tmp_26_cast_fu_622_p1));

assign tmp_10_cast_fu_650_p1 = $signed(reg_427);

assign tmp_10_fu_557_p1 = acc_2[15:0];

assign tmp_11_cast_fu_733_p1 = $signed(reg_427);

assign tmp_11_fu_640_p1 = acc_3[15:0];

assign tmp_12_cast_fu_816_p1 = $signed(reg_427);

assign tmp_12_fu_723_p1 = acc_4[15:0];

assign tmp_13_cast_fu_899_p1 = $signed(reg_427);

assign tmp_13_fu_806_p1 = acc_5[15:0];

assign tmp_14_cast_fu_982_p1 = $signed(reg_427);

assign tmp_14_fu_889_p1 = acc_6[15:0];

assign tmp_15_cast_fu_1051_p1 = $signed(reg_410);

assign tmp_15_fu_972_p1 = acc_7[15:0];

assign tmp_16_cast_fu_458_p1 = $signed(reg_414);

assign tmp_17_cast_fu_505_p1 = $signed(reg_431);

assign tmp_18_cast_fu_582_p1 = $signed(reg_414);

assign tmp_19_cast_fu_665_p1 = $signed(reg_418);

assign tmp_1_10_fu_737_p2 = (reg_427 + tmp_1_3_reg_1278);

assign tmp_1_11_fu_820_p2 = (reg_427 + tmp_1_4_reg_1325);

assign tmp_1_12_fu_903_p2 = (reg_427 + tmp_1_5_reg_1372);

assign tmp_1_13_fu_986_p2 = (reg_427 + tmp_1_6_reg_1419);

assign tmp_1_14_fu_1055_p2 = (reg_410 + tmp_1_7_reg_1451);

assign tmp_1_15_fu_499_p2 = (reg_414 + tmp_1_8_fu_494_p2);

assign tmp_1_16_fu_576_p2 = (reg_431 + tmp_1_9_fu_571_p2);

assign tmp_1_17_fu_659_p2 = (reg_414 + tmp_1_s_fu_654_p2);

assign tmp_1_18_fu_742_p2 = (reg_418 + tmp_1_10_fu_737_p2);

assign tmp_1_19_fu_825_p2 = (reg_414 + tmp_1_11_fu_820_p2);

assign tmp_1_1_fu_484_p2 = (reg_423 + tmp_9_fu_480_p1);

assign tmp_1_20_fu_908_p2 = (reg_418 + tmp_1_12_fu_903_p2);

assign tmp_1_21_fu_991_p2 = (reg_414 + tmp_1_13_fu_986_p2);

assign tmp_1_22_fu_1060_p2 = (reg_418 + tmp_1_14_fu_1055_p2);

assign tmp_1_23_fu_586_p2 = (reg_418 + tmp_1_15_reg_1205);

assign tmp_1_24_fu_669_p2 = (reg_436 + tmp_1_16_reg_1252);

assign tmp_1_25_fu_752_p2 = (reg_440 + tmp_1_17_reg_1299);

assign tmp_1_26_fu_835_p2 = (reg_431 + tmp_1_18_reg_1346);

assign tmp_1_27_fu_918_p2 = (reg_436 + tmp_1_19_reg_1393);

assign tmp_1_28_fu_1001_p2 = (reg_440 + tmp_1_20_reg_1435);

assign tmp_1_29_fu_1066_p2 = (reg_431 + tmp_1_21_reg_1462);

assign tmp_1_2_fu_561_p2 = (reg_410 + tmp_10_fu_557_p1);

assign tmp_1_30_fu_1102_p2 = (reg_436 + tmp_1_22_reg_1478);

assign tmp_1_3_fu_644_p2 = (reg_423 + tmp_11_fu_640_p1);

assign tmp_1_4_fu_727_p2 = (reg_410 + tmp_12_fu_723_p1);

assign tmp_1_5_fu_810_p2 = (reg_423 + tmp_13_fu_806_p1);

assign tmp_1_6_fu_893_p2 = (reg_410 + tmp_14_fu_889_p1);

assign tmp_1_7_fu_976_p2 = (reg_423 + tmp_15_fu_972_p1);

assign tmp_1_8_fu_494_p2 = (reg_427 + tmp_8_reg_1148);

assign tmp_1_9_fu_571_p2 = (reg_427 + tmp_1_1_reg_1184);

assign tmp_1_fu_448_p1 = acc_0[15:0];

assign tmp_1_s_fu_654_p2 = (reg_427 + tmp_1_2_reg_1231);

assign tmp_20_cast_fu_748_p1 = $signed(reg_414);

assign tmp_21_cast_fu_831_p1 = $signed(reg_418);

assign tmp_22_cast_fu_914_p1 = $signed(reg_414);

assign tmp_23_cast_fu_997_p1 = $signed(reg_418);

assign tmp_24_cast_fu_462_p1 = $signed(reg_418);

assign tmp_25_cast_fu_539_p1 = $signed(reg_436);

assign tmp_26_cast_fu_622_p1 = $signed(reg_440);

assign tmp_27_cast_fu_705_p1 = $signed(reg_431);

assign tmp_28_cast_fu_788_p1 = $signed(reg_436);

assign tmp_29_cast_fu_871_p1 = $signed(reg_440);

assign tmp_2_fu_632_p1 = $signed(reg_410);

assign tmp_30_cast_fu_954_p1 = $signed(reg_431);

assign tmp_31_cast_fu_1037_p1 = $signed(reg_436);

assign tmp_3_fu_715_p1 = $signed(reg_423);

assign tmp_4_fu_798_p1 = $signed(reg_410);

assign tmp_5_fu_881_p1 = $signed(reg_423);

assign tmp_6_fu_964_p1 = $signed(reg_410);

assign tmp_7_fu_1047_p1 = $signed(reg_423);

assign tmp_8_cast_fu_490_p1 = $signed(reg_427);

assign tmp_8_fu_452_p2 = (reg_410 + tmp_1_fu_448_p1);

assign tmp_9_cast_fu_567_p1 = $signed(reg_427);

assign tmp_9_fu_480_p1 = acc_1[15:0];

assign tmp_fu_472_p1 = $signed(reg_410);

assign tmp_s_fu_549_p1 = $signed(reg_423);

endmodule //array_io
