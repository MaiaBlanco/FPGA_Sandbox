// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="array_io,hls_ip_2017_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.361000,HLS_SYN_LAT=33,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3962,HLS_SYN_LUT=2021}" *)

module array_io (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d_o_din,
        d_o_full_n,
        d_o_write,
        d_i_address0,
        d_i_ce0,
        d_i_q0,
        d_i_address1,
        d_i_ce1,
        d_i_q1
);

parameter    ap_ST_fsm_state1 = 34'd1;
parameter    ap_ST_fsm_state2 = 34'd2;
parameter    ap_ST_fsm_state3 = 34'd4;
parameter    ap_ST_fsm_state4 = 34'd8;
parameter    ap_ST_fsm_state5 = 34'd16;
parameter    ap_ST_fsm_state6 = 34'd32;
parameter    ap_ST_fsm_state7 = 34'd64;
parameter    ap_ST_fsm_state8 = 34'd128;
parameter    ap_ST_fsm_state9 = 34'd256;
parameter    ap_ST_fsm_state10 = 34'd512;
parameter    ap_ST_fsm_state11 = 34'd1024;
parameter    ap_ST_fsm_state12 = 34'd2048;
parameter    ap_ST_fsm_state13 = 34'd4096;
parameter    ap_ST_fsm_state14 = 34'd8192;
parameter    ap_ST_fsm_state15 = 34'd16384;
parameter    ap_ST_fsm_state16 = 34'd32768;
parameter    ap_ST_fsm_state17 = 34'd65536;
parameter    ap_ST_fsm_state18 = 34'd131072;
parameter    ap_ST_fsm_state19 = 34'd262144;
parameter    ap_ST_fsm_state20 = 34'd524288;
parameter    ap_ST_fsm_state21 = 34'd1048576;
parameter    ap_ST_fsm_state22 = 34'd2097152;
parameter    ap_ST_fsm_state23 = 34'd4194304;
parameter    ap_ST_fsm_state24 = 34'd8388608;
parameter    ap_ST_fsm_state25 = 34'd16777216;
parameter    ap_ST_fsm_state26 = 34'd33554432;
parameter    ap_ST_fsm_state27 = 34'd67108864;
parameter    ap_ST_fsm_state28 = 34'd134217728;
parameter    ap_ST_fsm_state29 = 34'd268435456;
parameter    ap_ST_fsm_state30 = 34'd536870912;
parameter    ap_ST_fsm_state31 = 34'd1073741824;
parameter    ap_ST_fsm_state32 = 34'd2147483648;
parameter    ap_ST_fsm_state33 = 34'd4294967296;
parameter    ap_ST_fsm_state34 = 34'd8589934592;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] d_o_din;
input   d_o_full_n;
output   d_o_write;
output  [4:0] d_i_address0;
output   d_i_ce0;
input  [15:0] d_i_q0;
output  [4:0] d_i_address1;
output   d_i_ce1;
input  [15:0] d_i_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] d_o_din;
reg d_o_write;
reg[4:0] d_i_address0;
reg d_i_ce0;
reg[4:0] d_i_address1;
reg d_i_ce1;

(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] acc_0;
reg   [31:0] acc_1;
reg   [31:0] acc_2;
reg   [31:0] acc_3;
reg   [31:0] acc_4;
reg   [31:0] acc_5;
reg   [31:0] acc_6;
reg   [31:0] acc_7;
reg    d_o_blk_n;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
reg   [15:0] reg_406;
wire    ap_CS_fsm_state2;
reg   [15:0] reg_410;
reg   [15:0] reg_414;
reg   [15:0] reg_418;
reg   [15:0] reg_422;
reg   [15:0] reg_426;
wire   [15:0] tmp_8_fu_438_p2;
reg   [15:0] tmp_8_reg_1080;
wire   [15:0] tmp_1_1_fu_453_p2;
reg   [15:0] tmp_1_1_reg_1100;
reg   [15:0] d_i_load_4_reg_1105;
reg   [15:0] d_i_load_5_reg_1111;
wire   [15:0] tmp_1_2_fu_468_p2;
reg   [15:0] tmp_1_2_reg_1132;
reg   [15:0] d_i_load_6_reg_1137;
reg   [15:0] d_i_load_7_reg_1143;
wire   [15:0] tmp_1_3_fu_483_p2;
reg   [15:0] tmp_1_3_reg_1164;
wire   [15:0] tmp_1_4_fu_498_p2;
reg   [15:0] tmp_1_4_reg_1184;
reg   [15:0] d_i_load_10_reg_1189;
reg   [15:0] d_i_load_11_reg_1195;
wire   [15:0] tmp_1_5_fu_512_p2;
reg   [15:0] tmp_1_5_reg_1216;
reg   [15:0] d_i_load_12_reg_1221;
reg   [15:0] d_i_load_13_reg_1227;
wire   [15:0] tmp_1_6_fu_526_p2;
reg   [15:0] tmp_1_6_reg_1248;
reg   [15:0] d_i_load_14_reg_1253;
reg   [15:0] d_i_load_15_reg_1259;
wire   [15:0] tmp_1_7_fu_540_p2;
reg   [15:0] tmp_1_7_reg_1280;
reg   [15:0] d_i_load_16_reg_1285;
reg   [15:0] d_i_load_17_reg_1291;
wire   [15:0] tmp_1_8_fu_546_p2;
reg   [15:0] tmp_1_8_reg_1307;
reg   [15:0] d_i_load_18_reg_1312;
reg   [15:0] d_i_load_19_reg_1318;
wire   [15:0] tmp_1_9_fu_552_p2;
reg   [15:0] tmp_1_9_reg_1334;
reg   [15:0] d_i_load_20_reg_1339;
reg   [15:0] d_i_load_21_reg_1345;
wire   [15:0] tmp_1_s_fu_558_p2;
reg   [15:0] tmp_1_s_reg_1361;
reg   [15:0] d_i_load_22_reg_1366;
reg   [15:0] d_i_load_23_reg_1372;
wire   [15:0] tmp_1_10_fu_563_p2;
reg   [15:0] tmp_1_10_reg_1388;
reg   [15:0] d_i_load_24_reg_1393;
reg   [15:0] d_i_load_25_reg_1399;
wire   [15:0] tmp_1_11_fu_576_p2;
reg   [15:0] tmp_1_11_reg_1415;
wire   [15:0] tmp_1_15_fu_584_p2;
reg   [15:0] tmp_1_15_reg_1420;
wire   [15:0] tmp_1_16_fu_591_p2;
reg   [15:0] tmp_1_16_reg_1426;
wire   [17:0] tmp2_fu_608_p2;
reg   [17:0] tmp2_reg_1432;
wire   [17:0] tmp5_fu_627_p2;
reg   [17:0] tmp5_reg_1437;
wire   [15:0] tmp_1_12_fu_647_p2;
reg   [15:0] tmp_1_12_reg_1452;
wire   [15:0] tmp_1_17_fu_655_p2;
reg   [15:0] tmp_1_17_reg_1457;
wire   [15:0] tmp_1_18_fu_662_p2;
reg   [15:0] tmp_1_18_reg_1463;
wire   [17:0] tmp8_fu_720_p2;
reg   [17:0] tmp8_reg_1469;
wire   [17:0] tmp11_fu_740_p2;
reg   [17:0] tmp11_reg_1474;
wire   [15:0] tmp_1_13_fu_760_p2;
reg   [15:0] tmp_1_13_reg_1489;
wire   [15:0] tmp_1_19_fu_768_p2;
reg   [15:0] tmp_1_19_reg_1494;
wire   [15:0] tmp_1_20_fu_775_p2;
reg   [15:0] tmp_1_20_reg_1500;
wire   [17:0] tmp14_fu_833_p2;
reg   [17:0] tmp14_reg_1506;
wire   [17:0] tmp17_fu_853_p2;
reg   [17:0] tmp17_reg_1511;
wire   [15:0] tmp_1_21_fu_879_p2;
reg   [15:0] tmp_1_21_reg_1516;
wire   [15:0] tmp_1_22_fu_886_p2;
reg   [15:0] tmp_1_22_reg_1522;
wire   [17:0] tmp20_fu_945_p2;
reg   [17:0] tmp20_reg_1528;
wire   [17:0] tmp23_fu_965_p2;
reg   [17:0] tmp23_reg_1533;
wire   [15:0] tmp_1_23_fu_977_p2;
reg   [15:0] tmp_1_23_reg_1538;
wire   [15:0] tmp_1_24_fu_1021_p2;
reg   [15:0] tmp_1_24_reg_1543;
wire   [15:0] tmp_1_25_fu_1025_p2;
reg   [15:0] tmp_1_25_reg_1548;
wire   [15:0] tmp_1_26_fu_1030_p2;
reg   [15:0] tmp_1_26_reg_1553;
wire   [15:0] tmp_1_27_fu_1035_p2;
reg   [15:0] tmp_1_27_reg_1558;
wire   [15:0] tmp_1_28_fu_1040_p2;
reg   [15:0] tmp_1_28_reg_1563;
wire   [15:0] tmp_1_29_fu_1045_p2;
reg   [15:0] tmp_1_29_reg_1568;
wire   [15:0] tmp_1_30_fu_1050_p2;
reg   [15:0] tmp_1_30_reg_1573;
wire   [15:0] tmp_1_14_fu_871_p2;
wire   [31:0] temp_s_fu_674_p2;
wire   [31:0] temp_1_fu_694_p2;
wire   [31:0] temp_2_fu_787_p2;
wire   [31:0] temp_3_fu_807_p2;
wire   [31:0] temp_4_fu_899_p2;
wire   [31:0] temp_5_fu_919_p2;
wire   [31:0] temp_6_fu_989_p2;
wire   [31:0] temp_7_fu_1009_p2;
wire   [15:0] tmp_1_fu_434_p1;
wire   [15:0] tmp_9_fu_449_p1;
wire   [15:0] tmp_10_fu_464_p1;
wire   [15:0] tmp_11_fu_479_p1;
wire   [15:0] tmp_12_fu_494_p1;
wire   [15:0] tmp_13_fu_508_p1;
wire   [15:0] tmp_14_fu_522_p1;
wire   [15:0] tmp_15_fu_536_p1;
wire  signed [16:0] tmp_16_cast_fu_581_p1;
wire  signed [16:0] tmp_24_cast_fu_595_p1;
wire   [16:0] tmp3_fu_598_p2;
wire  signed [17:0] tmp3_cast_fu_604_p1;
wire  signed [17:0] tmp_8_cast_fu_568_p1;
wire  signed [16:0] tmp_17_cast_fu_588_p1;
wire  signed [16:0] tmp_25_cast_fu_614_p1;
wire   [16:0] tmp6_fu_617_p2;
wire  signed [17:0] tmp6_cast_fu_623_p1;
wire  signed [17:0] tmp_9_cast_fu_572_p1;
wire  signed [31:0] tmp_fu_633_p1;
wire  signed [31:0] tmp2_cast_fu_671_p1;
wire   [31:0] tmp1_fu_666_p2;
wire  signed [31:0] tmp_s_fu_637_p1;
wire  signed [31:0] tmp5_cast_fu_691_p1;
wire   [31:0] tmp4_fu_686_p2;
wire  signed [16:0] tmp_18_cast_fu_652_p1;
wire  signed [16:0] tmp_26_cast_fu_706_p1;
wire   [16:0] tmp9_fu_710_p2;
wire  signed [17:0] tmp9_cast_fu_716_p1;
wire  signed [17:0] tmp_10_cast_fu_641_p1;
wire  signed [16:0] tmp_19_cast_fu_659_p1;
wire  signed [16:0] tmp_27_cast_fu_726_p1;
wire   [16:0] tmp12_fu_730_p2;
wire  signed [17:0] tmp12_cast_fu_736_p1;
wire  signed [17:0] tmp_11_cast_fu_644_p1;
wire  signed [31:0] tmp_2_fu_746_p1;
wire  signed [31:0] tmp8_cast_fu_784_p1;
wire   [31:0] tmp7_fu_779_p2;
wire  signed [31:0] tmp_3_fu_750_p1;
wire  signed [31:0] tmp11_cast_fu_804_p1;
wire   [31:0] tmp10_fu_799_p2;
wire  signed [16:0] tmp_20_cast_fu_765_p1;
wire  signed [16:0] tmp_28_cast_fu_819_p1;
wire   [16:0] tmp15_fu_823_p2;
wire  signed [17:0] tmp15_cast_fu_829_p1;
wire  signed [17:0] tmp_12_cast_fu_754_p1;
wire  signed [16:0] tmp_21_cast_fu_772_p1;
wire  signed [16:0] tmp_29_cast_fu_839_p1;
wire   [16:0] tmp18_fu_843_p2;
wire  signed [17:0] tmp18_cast_fu_849_p1;
wire  signed [17:0] tmp_13_cast_fu_757_p1;
wire  signed [31:0] tmp_4_fu_859_p1;
wire  signed [31:0] tmp14_cast_fu_896_p1;
wire   [31:0] tmp13_fu_891_p2;
wire  signed [31:0] tmp_5_fu_862_p1;
wire  signed [31:0] tmp17_cast_fu_916_p1;
wire   [31:0] tmp16_fu_911_p2;
wire  signed [16:0] tmp_22_cast_fu_876_p1;
wire  signed [16:0] tmp_30_cast_fu_931_p1;
wire   [16:0] tmp21_fu_935_p2;
wire  signed [17:0] tmp21_cast_fu_941_p1;
wire  signed [17:0] tmp_14_cast_fu_865_p1;
wire  signed [16:0] tmp_23_cast_fu_883_p1;
wire  signed [16:0] tmp_31_cast_fu_951_p1;
wire   [16:0] tmp24_fu_955_p2;
wire  signed [17:0] tmp24_cast_fu_961_p1;
wire  signed [17:0] tmp_15_cast_fu_868_p1;
wire  signed [31:0] tmp_6_fu_971_p1;
wire  signed [31:0] tmp20_cast_fu_986_p1;
wire   [31:0] tmp19_fu_981_p2;
wire  signed [31:0] tmp_7_fu_974_p1;
wire  signed [31:0] tmp23_cast_fu_1006_p1;
wire   [31:0] tmp22_fu_1001_p2;
reg   [33:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 34'd1;
#0 acc_0 = 32'd0;
#0 acc_1 = 32'd0;
#0 acc_2 = 32'd0;
#0 acc_3 = 32'd0;
#0 acc_4 = 32'd0;
#0 acc_5 = 32'd0;
#0 acc_6 = 32'd0;
#0 acc_7 = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (d_o_full_n == 1'b1))) begin
        acc_0 <= temp_s_fu_674_p2;
        acc_1 <= temp_1_fu_694_p2;
        tmp11_reg_1474 <= tmp11_fu_740_p2;
        tmp8_reg_1469 <= tmp8_fu_720_p2;
        tmp_1_12_reg_1452 <= tmp_1_12_fu_647_p2;
        tmp_1_17_reg_1457 <= tmp_1_17_fu_655_p2;
        tmp_1_18_reg_1463 <= tmp_1_18_fu_662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (d_o_full_n == 1'b1))) begin
        acc_2 <= temp_2_fu_787_p2;
        acc_3 <= temp_3_fu_807_p2;
        tmp14_reg_1506 <= tmp14_fu_833_p2;
        tmp17_reg_1511 <= tmp17_fu_853_p2;
        tmp_1_13_reg_1489 <= tmp_1_13_fu_760_p2;
        tmp_1_19_reg_1494 <= tmp_1_19_fu_768_p2;
        tmp_1_20_reg_1500 <= tmp_1_20_fu_775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (d_o_full_n == 1'b1))) begin
        acc_4 <= temp_4_fu_899_p2;
        acc_5 <= temp_5_fu_919_p2;
        tmp20_reg_1528 <= tmp20_fu_945_p2;
        tmp23_reg_1533 <= tmp23_fu_965_p2;
        tmp_1_21_reg_1516 <= tmp_1_21_fu_879_p2;
        tmp_1_22_reg_1522 <= tmp_1_22_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (d_o_full_n == 1'b1))) begin
        acc_6 <= temp_6_fu_989_p2;
        acc_7 <= temp_7_fu_1009_p2;
        tmp_1_23_reg_1538 <= tmp_1_23_fu_977_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (d_o_full_n == 1'b1))) begin
        d_i_load_10_reg_1189 <= d_i_q0;
        d_i_load_11_reg_1195 <= d_i_q1;
        tmp_1_4_reg_1184 <= tmp_1_4_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (d_o_full_n == 1'b1))) begin
        d_i_load_12_reg_1221 <= d_i_q0;
        d_i_load_13_reg_1227 <= d_i_q1;
        tmp_1_5_reg_1216 <= tmp_1_5_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (d_o_full_n == 1'b1))) begin
        d_i_load_14_reg_1253 <= d_i_q0;
        d_i_load_15_reg_1259 <= d_i_q1;
        tmp_1_6_reg_1248 <= tmp_1_6_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (d_o_full_n == 1'b1))) begin
        d_i_load_16_reg_1285 <= d_i_q0;
        d_i_load_17_reg_1291 <= d_i_q1;
        tmp_1_7_reg_1280 <= tmp_1_7_fu_540_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (d_o_full_n == 1'b1))) begin
        d_i_load_18_reg_1312 <= d_i_q0;
        d_i_load_19_reg_1318 <= d_i_q1;
        tmp_1_8_reg_1307 <= tmp_1_8_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (d_o_full_n == 1'b1))) begin
        d_i_load_20_reg_1339 <= d_i_q0;
        d_i_load_21_reg_1345 <= d_i_q1;
        tmp_1_9_reg_1334 <= tmp_1_9_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (d_o_full_n == 1'b1))) begin
        d_i_load_22_reg_1366 <= d_i_q0;
        d_i_load_23_reg_1372 <= d_i_q1;
        tmp_1_s_reg_1361 <= tmp_1_s_fu_558_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (d_o_full_n == 1'b1))) begin
        d_i_load_24_reg_1393 <= d_i_q0;
        d_i_load_25_reg_1399 <= d_i_q1;
        tmp_1_10_reg_1388 <= tmp_1_10_fu_563_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (d_o_full_n == 1'b1))) begin
        d_i_load_4_reg_1105 <= d_i_q0;
        d_i_load_5_reg_1111 <= d_i_q1;
        tmp_1_1_reg_1100 <= tmp_1_1_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (d_o_full_n == 1'b1))) begin
        d_i_load_6_reg_1137 <= d_i_q0;
        d_i_load_7_reg_1143 <= d_i_q1;
        tmp_1_2_reg_1132 <= tmp_1_2_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state16) & (d_o_full_n == 1'b1)))) begin
        reg_406 <= d_i_q0;
        reg_410 <= d_i_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (d_o_full_n == 1'b1)))) begin
        reg_414 <= d_i_q0;
        reg_418 <= d_i_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (d_o_full_n == 1'b1)))) begin
        reg_422 <= d_i_q0;
        reg_426 <= d_i_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (d_o_full_n == 1'b1))) begin
        tmp2_reg_1432 <= tmp2_fu_608_p2;
        tmp5_reg_1437 <= tmp5_fu_627_p2;
        tmp_1_11_reg_1415 <= tmp_1_11_fu_576_p2;
        tmp_1_15_reg_1420 <= tmp_1_15_fu_584_p2;
        tmp_1_16_reg_1426 <= tmp_1_16_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (d_o_full_n == 1'b1))) begin
        tmp_1_24_reg_1543 <= tmp_1_24_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (d_o_full_n == 1'b1))) begin
        tmp_1_25_reg_1548 <= tmp_1_25_fu_1025_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (d_o_full_n == 1'b1))) begin
        tmp_1_26_reg_1553 <= tmp_1_26_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (d_o_full_n == 1'b1))) begin
        tmp_1_27_reg_1558 <= tmp_1_27_fu_1035_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (d_o_full_n == 1'b1))) begin
        tmp_1_28_reg_1563 <= tmp_1_28_fu_1040_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (d_o_full_n == 1'b1))) begin
        tmp_1_29_reg_1568 <= tmp_1_29_fu_1045_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (d_o_full_n == 1'b1))) begin
        tmp_1_30_reg_1573 <= tmp_1_30_fu_1050_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (d_o_full_n == 1'b1))) begin
        tmp_1_3_reg_1164 <= tmp_1_3_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (d_o_full_n == 1'b1))) begin
        tmp_8_reg_1080 <= tmp_8_fu_438_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) & (d_o_full_n == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) & (d_o_full_n == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        d_i_address0 = 32'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_i_address0 = 32'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_i_address0 = 32'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_i_address0 = 32'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_i_address0 = 32'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_i_address0 = 32'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_i_address0 = 32'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_i_address0 = 32'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_address0 = 32'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_address0 = 32'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_address0 = 32'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_address0 = 32'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_address0 = 32'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_address0 = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_address0 = 32'd0;
    end else begin
        d_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        d_i_address1 = 32'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_i_address1 = 32'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_i_address1 = 32'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_i_address1 = 32'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_i_address1 = 32'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_i_address1 = 32'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_i_address1 = 32'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_i_address1 = 32'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_address1 = 32'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_address1 = 32'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_address1 = 32'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_address1 = 32'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_address1 = 32'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_address1 = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_address1 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_address1 = 32'd1;
    end else begin
        d_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state16) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state5) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state8) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state9) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state10) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state11) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (d_o_full_n == 1'b1)))) begin
        d_i_ce0 = 1'b1;
    end else begin
        d_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state16) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state5) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state8) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state9) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state10) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state11) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (d_o_full_n == 1'b1)))) begin
        d_i_ce1 = 1'b1;
    end else begin
        d_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state34))) begin
        d_o_blk_n = d_o_full_n;
    end else begin
        d_o_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state34)) begin
            d_o_din = tmp_1_30_reg_1573;
        end else if ((1'b1 == ap_CS_fsm_state33)) begin
            d_o_din = tmp_1_29_reg_1568;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            d_o_din = tmp_1_28_reg_1563;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            d_o_din = tmp_1_27_reg_1558;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            d_o_din = tmp_1_26_reg_1553;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            d_o_din = tmp_1_25_reg_1548;
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
            d_o_din = tmp_1_24_reg_1543;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            d_o_din = tmp_1_23_reg_1538;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            d_o_din = tmp_1_22_reg_1522;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            d_o_din = tmp_1_21_reg_1516;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            d_o_din = tmp_1_20_reg_1500;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            d_o_din = tmp_1_19_reg_1494;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            d_o_din = tmp_1_18_reg_1463;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            d_o_din = tmp_1_17_reg_1457;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            d_o_din = tmp_1_16_reg_1426;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            d_o_din = tmp_1_15_reg_1420;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            d_o_din = tmp_1_14_fu_871_p2;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            d_o_din = tmp_1_13_fu_760_p2;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            d_o_din = tmp_1_12_fu_647_p2;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            d_o_din = tmp_1_11_fu_576_p2;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            d_o_din = tmp_1_10_fu_563_p2;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            d_o_din = tmp_1_s_fu_558_p2;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            d_o_din = tmp_1_9_fu_552_p2;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            d_o_din = tmp_1_8_fu_546_p2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            d_o_din = tmp_1_7_fu_540_p2;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            d_o_din = tmp_1_6_fu_526_p2;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            d_o_din = tmp_1_5_fu_512_p2;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            d_o_din = tmp_1_4_fu_498_p2;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            d_o_din = tmp_1_3_fu_483_p2;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            d_o_din = tmp_1_2_fu_468_p2;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            d_o_din = tmp_1_1_fu_453_p2;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            d_o_din = tmp_8_fu_438_p2;
        end else begin
            d_o_din = 'bx;
        end
    end else begin
        d_o_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state16) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state5) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state8) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state9) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state10) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state11) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state14) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state19) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state25) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state27) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state28) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state29) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state30) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state31) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state32) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state33) & (d_o_full_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state34) & (d_o_full_n == 1'b1)))) begin
        d_o_write = 1'b1;
    end else begin
        d_o_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (d_o_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign temp_1_fu_694_p2 = ($signed(tmp5_cast_fu_691_p1) + $signed(tmp4_fu_686_p2));

assign temp_2_fu_787_p2 = ($signed(tmp8_cast_fu_784_p1) + $signed(tmp7_fu_779_p2));

assign temp_3_fu_807_p2 = ($signed(tmp11_cast_fu_804_p1) + $signed(tmp10_fu_799_p2));

assign temp_4_fu_899_p2 = ($signed(tmp14_cast_fu_896_p1) + $signed(tmp13_fu_891_p2));

assign temp_5_fu_919_p2 = ($signed(tmp17_cast_fu_916_p1) + $signed(tmp16_fu_911_p2));

assign temp_6_fu_989_p2 = ($signed(tmp20_cast_fu_986_p1) + $signed(tmp19_fu_981_p2));

assign temp_7_fu_1009_p2 = ($signed(tmp23_cast_fu_1006_p1) + $signed(tmp22_fu_1001_p2));

assign temp_s_fu_674_p2 = ($signed(tmp2_cast_fu_671_p1) + $signed(tmp1_fu_666_p2));

assign tmp10_fu_799_p2 = ($signed(acc_3) + $signed(tmp_3_fu_750_p1));

assign tmp11_cast_fu_804_p1 = $signed(tmp11_reg_1474);

assign tmp11_fu_740_p2 = ($signed(tmp12_cast_fu_736_p1) + $signed(tmp_11_cast_fu_644_p1));

assign tmp12_cast_fu_736_p1 = $signed(tmp12_fu_730_p2);

assign tmp12_fu_730_p2 = ($signed(tmp_19_cast_fu_659_p1) + $signed(tmp_27_cast_fu_726_p1));

assign tmp13_fu_891_p2 = ($signed(acc_4) + $signed(tmp_4_fu_859_p1));

assign tmp14_cast_fu_896_p1 = $signed(tmp14_reg_1506);

assign tmp14_fu_833_p2 = ($signed(tmp15_cast_fu_829_p1) + $signed(tmp_12_cast_fu_754_p1));

assign tmp15_cast_fu_829_p1 = $signed(tmp15_fu_823_p2);

assign tmp15_fu_823_p2 = ($signed(tmp_20_cast_fu_765_p1) + $signed(tmp_28_cast_fu_819_p1));

assign tmp16_fu_911_p2 = ($signed(acc_5) + $signed(tmp_5_fu_862_p1));

assign tmp17_cast_fu_916_p1 = $signed(tmp17_reg_1511);

assign tmp17_fu_853_p2 = ($signed(tmp18_cast_fu_849_p1) + $signed(tmp_13_cast_fu_757_p1));

assign tmp18_cast_fu_849_p1 = $signed(tmp18_fu_843_p2);

assign tmp18_fu_843_p2 = ($signed(tmp_21_cast_fu_772_p1) + $signed(tmp_29_cast_fu_839_p1));

assign tmp19_fu_981_p2 = ($signed(acc_6) + $signed(tmp_6_fu_971_p1));

assign tmp1_fu_666_p2 = ($signed(acc_0) + $signed(tmp_fu_633_p1));

assign tmp20_cast_fu_986_p1 = $signed(tmp20_reg_1528);

assign tmp20_fu_945_p2 = ($signed(tmp21_cast_fu_941_p1) + $signed(tmp_14_cast_fu_865_p1));

assign tmp21_cast_fu_941_p1 = $signed(tmp21_fu_935_p2);

assign tmp21_fu_935_p2 = ($signed(tmp_22_cast_fu_876_p1) + $signed(tmp_30_cast_fu_931_p1));

assign tmp22_fu_1001_p2 = ($signed(acc_7) + $signed(tmp_7_fu_974_p1));

assign tmp23_cast_fu_1006_p1 = $signed(tmp23_reg_1533);

assign tmp23_fu_965_p2 = ($signed(tmp24_cast_fu_961_p1) + $signed(tmp_15_cast_fu_868_p1));

assign tmp24_cast_fu_961_p1 = $signed(tmp24_fu_955_p2);

assign tmp24_fu_955_p2 = ($signed(tmp_23_cast_fu_883_p1) + $signed(tmp_31_cast_fu_951_p1));

assign tmp2_cast_fu_671_p1 = $signed(tmp2_reg_1432);

assign tmp2_fu_608_p2 = ($signed(tmp3_cast_fu_604_p1) + $signed(tmp_8_cast_fu_568_p1));

assign tmp3_cast_fu_604_p1 = $signed(tmp3_fu_598_p2);

assign tmp3_fu_598_p2 = ($signed(tmp_16_cast_fu_581_p1) + $signed(tmp_24_cast_fu_595_p1));

assign tmp4_fu_686_p2 = ($signed(acc_1) + $signed(tmp_s_fu_637_p1));

assign tmp5_cast_fu_691_p1 = $signed(tmp5_reg_1437);

assign tmp5_fu_627_p2 = ($signed(tmp6_cast_fu_623_p1) + $signed(tmp_9_cast_fu_572_p1));

assign tmp6_cast_fu_623_p1 = $signed(tmp6_fu_617_p2);

assign tmp6_fu_617_p2 = ($signed(tmp_17_cast_fu_588_p1) + $signed(tmp_25_cast_fu_614_p1));

assign tmp7_fu_779_p2 = ($signed(acc_2) + $signed(tmp_2_fu_746_p1));

assign tmp8_cast_fu_784_p1 = $signed(tmp8_reg_1469);

assign tmp8_fu_720_p2 = ($signed(tmp9_cast_fu_716_p1) + $signed(tmp_10_cast_fu_641_p1));

assign tmp9_cast_fu_716_p1 = $signed(tmp9_fu_710_p2);

assign tmp9_fu_710_p2 = ($signed(tmp_18_cast_fu_652_p1) + $signed(tmp_26_cast_fu_706_p1));

assign tmp_10_cast_fu_641_p1 = $signed(d_i_load_10_reg_1189);

assign tmp_10_fu_464_p1 = acc_2[15:0];

assign tmp_11_cast_fu_644_p1 = $signed(d_i_load_11_reg_1195);

assign tmp_11_fu_479_p1 = acc_3[15:0];

assign tmp_12_cast_fu_754_p1 = $signed(d_i_load_12_reg_1221);

assign tmp_12_fu_494_p1 = acc_4[15:0];

assign tmp_13_cast_fu_757_p1 = $signed(d_i_load_13_reg_1227);

assign tmp_13_fu_508_p1 = acc_5[15:0];

assign tmp_14_cast_fu_865_p1 = $signed(d_i_load_14_reg_1253);

assign tmp_14_fu_522_p1 = acc_6[15:0];

assign tmp_15_cast_fu_868_p1 = $signed(d_i_load_15_reg_1259);

assign tmp_15_fu_536_p1 = acc_7[15:0];

assign tmp_16_cast_fu_581_p1 = $signed(d_i_load_16_reg_1285);

assign tmp_17_cast_fu_588_p1 = $signed(d_i_load_17_reg_1291);

assign tmp_18_cast_fu_652_p1 = $signed(d_i_load_18_reg_1312);

assign tmp_19_cast_fu_659_p1 = $signed(d_i_load_19_reg_1318);

assign tmp_1_10_fu_563_p2 = (d_i_load_11_reg_1195 + tmp_1_3_reg_1164);

assign tmp_1_11_fu_576_p2 = (d_i_load_12_reg_1221 + tmp_1_4_reg_1184);

assign tmp_1_12_fu_647_p2 = (d_i_load_13_reg_1227 + tmp_1_5_reg_1216);

assign tmp_1_13_fu_760_p2 = (d_i_load_14_reg_1253 + tmp_1_6_reg_1248);

assign tmp_1_14_fu_871_p2 = (d_i_load_15_reg_1259 + tmp_1_7_reg_1280);

assign tmp_1_15_fu_584_p2 = (d_i_load_16_reg_1285 + tmp_1_8_reg_1307);

assign tmp_1_16_fu_591_p2 = (d_i_load_17_reg_1291 + tmp_1_9_reg_1334);

assign tmp_1_17_fu_655_p2 = (d_i_load_18_reg_1312 + tmp_1_s_reg_1361);

assign tmp_1_18_fu_662_p2 = (d_i_load_19_reg_1318 + tmp_1_10_reg_1388);

assign tmp_1_19_fu_768_p2 = (d_i_load_20_reg_1339 + tmp_1_11_reg_1415);

assign tmp_1_1_fu_453_p2 = (reg_410 + tmp_9_fu_449_p1);

assign tmp_1_20_fu_775_p2 = (d_i_load_21_reg_1345 + tmp_1_12_reg_1452);

assign tmp_1_21_fu_879_p2 = (d_i_load_22_reg_1366 + tmp_1_13_reg_1489);

assign tmp_1_22_fu_886_p2 = (d_i_load_23_reg_1372 + tmp_1_14_fu_871_p2);

assign tmp_1_23_fu_977_p2 = (d_i_load_24_reg_1393 + tmp_1_15_reg_1420);

assign tmp_1_24_fu_1021_p2 = (d_i_load_25_reg_1399 + tmp_1_16_reg_1426);

assign tmp_1_25_fu_1025_p2 = (reg_422 + tmp_1_17_reg_1457);

assign tmp_1_26_fu_1030_p2 = (reg_426 + tmp_1_18_reg_1463);

assign tmp_1_27_fu_1035_p2 = (reg_406 + tmp_1_19_reg_1494);

assign tmp_1_28_fu_1040_p2 = (reg_410 + tmp_1_20_reg_1500);

assign tmp_1_29_fu_1045_p2 = (reg_414 + tmp_1_21_reg_1516);

assign tmp_1_2_fu_468_p2 = (reg_414 + tmp_10_fu_464_p1);

assign tmp_1_30_fu_1050_p2 = (reg_418 + tmp_1_22_reg_1522);

assign tmp_1_3_fu_483_p2 = (reg_418 + tmp_11_fu_479_p1);

assign tmp_1_4_fu_498_p2 = (d_i_load_4_reg_1105 + tmp_12_fu_494_p1);

assign tmp_1_5_fu_512_p2 = (d_i_load_5_reg_1111 + tmp_13_fu_508_p1);

assign tmp_1_6_fu_526_p2 = (d_i_load_6_reg_1137 + tmp_14_fu_522_p1);

assign tmp_1_7_fu_540_p2 = (d_i_load_7_reg_1143 + tmp_15_fu_536_p1);

assign tmp_1_8_fu_546_p2 = (reg_422 + tmp_8_reg_1080);

assign tmp_1_9_fu_552_p2 = (reg_426 + tmp_1_1_reg_1100);

assign tmp_1_fu_434_p1 = acc_0[15:0];

assign tmp_1_s_fu_558_p2 = (d_i_load_10_reg_1189 + tmp_1_2_reg_1132);

assign tmp_20_cast_fu_765_p1 = $signed(d_i_load_20_reg_1339);

assign tmp_21_cast_fu_772_p1 = $signed(d_i_load_21_reg_1345);

assign tmp_22_cast_fu_876_p1 = $signed(d_i_load_22_reg_1366);

assign tmp_23_cast_fu_883_p1 = $signed(d_i_load_23_reg_1372);

assign tmp_24_cast_fu_595_p1 = $signed(d_i_load_24_reg_1393);

assign tmp_25_cast_fu_614_p1 = $signed(d_i_load_25_reg_1399);

assign tmp_26_cast_fu_706_p1 = $signed(reg_422);

assign tmp_27_cast_fu_726_p1 = $signed(reg_426);

assign tmp_28_cast_fu_819_p1 = $signed(reg_406);

assign tmp_29_cast_fu_839_p1 = $signed(reg_410);

assign tmp_2_fu_746_p1 = $signed(reg_414);

assign tmp_30_cast_fu_931_p1 = $signed(reg_414);

assign tmp_31_cast_fu_951_p1 = $signed(reg_418);

assign tmp_3_fu_750_p1 = $signed(reg_418);

assign tmp_4_fu_859_p1 = $signed(d_i_load_4_reg_1105);

assign tmp_5_fu_862_p1 = $signed(d_i_load_5_reg_1111);

assign tmp_6_fu_971_p1 = $signed(d_i_load_6_reg_1137);

assign tmp_7_fu_974_p1 = $signed(d_i_load_7_reg_1143);

assign tmp_8_cast_fu_568_p1 = $signed(reg_422);

assign tmp_8_fu_438_p2 = (reg_406 + tmp_1_fu_434_p1);

assign tmp_9_cast_fu_572_p1 = $signed(reg_426);

assign tmp_9_fu_449_p1 = acc_1[15:0];

assign tmp_fu_633_p1 = $signed(reg_406);

assign tmp_s_fu_637_p1 = $signed(reg_410);

endmodule //array_io
