// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fir_HH_
#define _fir_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fir_mul_32s_32s_3bkb.h"

namespace ap_rtl {

struct fir : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > y;
    sc_out< sc_logic > y_ap_vld;
    sc_out< sc_lv<4> > c_address0;
    sc_out< sc_logic > c_ce0;
    sc_in< sc_lv<32> > c_q0;
    sc_in< sc_lv<32> > x;
    sc_in< sc_logic > x_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    fir(sc_module_name name);
    SC_HAS_PROCESS(fir);

    ~fir();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U1;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U2;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U3;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U4;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U5;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U6;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U7;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U8;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U9;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U10;
    fir_mul_32s_32s_3bkb<1,2,32,32,32>* fir_mul_32s_32s_3bkb_U11;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > x_preg;
    sc_signal< sc_lv<32> > x_in_sig;
    sc_signal< sc_logic > x_ap_vld_preg;
    sc_signal< sc_logic > x_ap_vld_in_sig;
    sc_signal< sc_lv<32> > shift_reg_9;
    sc_signal< sc_lv<32> > shift_reg_8;
    sc_signal< sc_lv<32> > shift_reg_7;
    sc_signal< sc_lv<32> > shift_reg_6;
    sc_signal< sc_lv<32> > shift_reg_5;
    sc_signal< sc_lv<32> > shift_reg_4;
    sc_signal< sc_lv<32> > shift_reg_3;
    sc_signal< sc_lv<32> > shift_reg_2;
    sc_signal< sc_lv<32> > shift_reg_1;
    sc_signal< sc_lv<32> > shift_reg_0;
    sc_signal< sc_logic > x_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > reg_188;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > reg_192;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > reg_196;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > grp_fu_204_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_442;
    sc_signal< sc_lv<32> > grp_fu_220_p2;
    sc_signal< sc_lv<32> > tmp_6_1_reg_447;
    sc_signal< sc_lv<32> > tmp1_fu_226_p2;
    sc_signal< sc_lv<32> > tmp1_reg_462;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > c_load_5_reg_482;
    sc_signal< sc_lv<32> > grp_fu_240_p2;
    sc_signal< sc_lv<32> > tmp_6_2_reg_492;
    sc_signal< sc_lv<32> > grp_fu_256_p2;
    sc_signal< sc_lv<32> > tmp_6_3_reg_497;
    sc_signal< sc_lv<32> > grp_fu_272_p2;
    sc_signal< sc_lv<32> > tmp_6_4_reg_502;
    sc_signal< sc_lv<32> > tmp2_fu_282_p2;
    sc_signal< sc_lv<32> > tmp2_reg_517;
    sc_signal< sc_lv<32> > grp_fu_297_p2;
    sc_signal< sc_lv<32> > tmp_6_5_reg_542;
    sc_signal< sc_lv<32> > grp_fu_312_p2;
    sc_signal< sc_lv<32> > tmp_6_6_reg_547;
    sc_signal< sc_lv<32> > grp_fu_328_p2;
    sc_signal< sc_lv<32> > tmp_6_7_reg_552;
    sc_signal< sc_lv<32> > tmp6_fu_334_p2;
    sc_signal< sc_lv<32> > tmp6_reg_562;
    sc_signal< sc_lv<32> > grp_fu_348_p2;
    sc_signal< sc_lv<32> > tmp_6_8_reg_582;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > grp_fu_364_p2;
    sc_signal< sc_lv<32> > tmp_6_9_reg_587;
    sc_signal< sc_lv<32> > grp_fu_376_p2;
    sc_signal< sc_lv<32> > tmp_6_s_reg_592;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > tmp3_fu_278_p2;
    sc_signal< sc_lv<32> > tmp8_fu_390_p2;
    sc_signal< sc_lv<32> > tmp7_fu_394_p2;
    sc_signal< sc_lv<32> > tmp5_fu_386_p2;
    sc_signal< sc_lv<32> > tmp4_fu_399_p2;
    sc_signal< sc_lv<32> > tmp_fu_382_p2;
    sc_signal< sc_logic > grp_fu_348_ce;
    sc_signal< sc_logic > grp_fu_364_ce;
    sc_signal< sc_logic > grp_fu_376_ce;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_address0();
    void thread_c_ce0();
    void thread_grp_fu_348_ce();
    void thread_grp_fu_364_ce();
    void thread_grp_fu_376_ce();
    void thread_tmp1_fu_226_p2();
    void thread_tmp2_fu_282_p2();
    void thread_tmp3_fu_278_p2();
    void thread_tmp4_fu_399_p2();
    void thread_tmp5_fu_386_p2();
    void thread_tmp6_fu_334_p2();
    void thread_tmp7_fu_394_p2();
    void thread_tmp8_fu_390_p2();
    void thread_tmp_fu_382_p2();
    void thread_x_ap_vld_in_sig();
    void thread_x_blk_n();
    void thread_x_in_sig();
    void thread_y();
    void thread_y_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
